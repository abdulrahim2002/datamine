[["2", "Pull request: Load default plugins dynamically", null, "ianparkinson", "12/08/12, 08:02:42 AM", "To be able to include Mockito source in the Android Open Source Project, I'd like to be able to build a subset of Mockito which doesn't rely on cglib. This removes the compile-time dependency on the default MockMaker implementation, which naturally includes references to cglib.", "NaN"], ["3", "Pull Request: Remove class mockable test from ClassImposterizer", null, "ianparkinson", "12/08/12, 08:02:42 AM", "To be able to include Mockito source in the Android Open Source Project, we need to be able to build a subset of Mockito which doesn't rely on cglib. This second part rearranges the code related to checking whether a class can be mocked. I've moved the logic to MockUtil, where it could later be moved to the MockMaker where it really belongs.\n\nMy apologies - I can't see how to get GitHub to make a pull request just with my second change, so this seems to include both of my changes.", "NaN"], ["5", "Mock serialization/deserialization across classloader/JVM", "Brice Dutheil", "bric3", "01/07/13, 07:25:11 PM", "This pull request will enable mocks to be serialized in a certain way, that will allow them to be serialized and especially deserialized outside the classloader the mock was created.\n\nAt the moment it's enabled automatically when using `withSettings().serializable()`.\n\nIt still require to have Mockito on the classpath of the JVM classloader where it is deserialized.", "NaN"], ["6", "Improved MockitoTestNGListener by making it reset argument captors before each test", "Ken Dombeck", "kdombeck", "01/29/13, 11:05:02 AM", "Before each run of a TestNG test the Captor arguments need to be reset.", "NaN"], ["7", "Refactoring: Remove unused import", null, "ianparkinson", "01/31/13, 10:28:14 AM", "Hi,\n\nClassImposterizer is no longer used in ReturnsMocks; this patch allows us in the Android Open Source Project to build ReturnsMocks without building ClassImposterizer (which ultimately depends on cglib-and-asm, which we can't use.)\n\nThanks,\nIan", "NaN"], ["10", "New \"MockingDetails.getInvocations\" method for inspecting what happened with the mock", "Jeremy Rickard", "jrrickard", "11/13/13, 09:53:40 AM", "A simple implementation for [Issue 178](https://code.google.com/p/mockito/issues/detail?can=2&start=0&num=100&q=&colspec=ID%20Type%20Status%20Priority%20Milestone%20Owner%20Summary&groupby=&sort=type&id=178)\n\nModified the MockingDetails API to expose a getInvocations() method. This uses the invocation container from the MockUtil object to return a collection of Invocations (which is in the org.mockito.invocation package). This enables users to debug and see invocations on a given mock and use the debugger (or code) to see arguments passed, the target method, etc. ", "NaN"], ["13", "Refactoring: Remove old Hg artifacts", "Marius Volkhart", "MariusVolkhart", "11/13/13, 09:12:25 AM", "These are no longer needed now that Mockito's on git", "NaN"], ["14", "Deprecated timeout().never(), in line with timeout().atMost()", "Tim Perry", "pimterry", "10/11/13, 11:09:11 AM", "Timeout().atMost() is deprecated due to issue 235: https://code.google.com/p/mockito/issues/detail?id=235\n\nThese exact same arguments apply to never(); both verification modes are extremely likely to create assertions that immediately pass, and do not test what they're intended to test. This patch therefore deprecates never() similarly.\n\nFairly shortly I'm also planning on implementing verify(mock, during(x).[...]), as a counterpart to timeout which always waits the full time, as discussed in issue 347: https://code.google.com/p/mockito/issues/detail?id=347. This should allow for the kind of assertion behaviour that timeout().never() implies.\n\n(Also some minor whitespace tidy up and spelling corrections)", "NaN"], ["15", "Verification with timout measures time more more accurately", "Tim Perry", "pimterry", "10/11/13, 11:11:41 AM", "The previous timeout implementation doesn't measure time correctly: it only counts time spent intentionally sleeping, thus losing time on anything that happens when not sleeping (both the actual verification time, and time spent in other threads during verification), and gaining time if any InterruptedExceptions occur.\n\nTypically this means that timeout()s actually run for a longer than they're intended to. The fixed test demonstrates this well; previous the timeout was set to exactly the minimum possible time the sleeps in the code alone could've taken, ignoring all processing time, and this test consistently passed. After the changes it now fails (as it probably should).\n\nThis patch fixes that by just measuring the time directly. I've also fixed some variables names that were slightly annoying, and that now-failing test has a 500ms buffer before it times out.", "NaN"], ["18", "Enabled continuous integration with Travis CI and coverage tracking with coveralls", "Brice Dutheil", "bric3", "10/29/13, 11:59:53 AM", "NaN", "NaN"], ["19", "Refactoring: Fixes env var to TERM for readability purpose on travis log when building with gradle", "Brice Dutheil", "bric3", "10/29/13, 01:17:45 PM", "Wrote `env` instead of `TERM`, also cleaned up the `.travis.yml` file", "NaN"], ["21", "Improved behavior of EqualsWithDelta with regards to null handling", "Dmytro Chyzhykov", "ffbit", "11/29/13, 09:39:10 AM", "Added check to the EqualsWithDelta matcher\n  If the actual and expected objects are the same.", "NaN"], ["22", "Improved the javadoc example of custom Answer implementation", "Dmytro Chyzhykov", "ffbit", "11/13/13, 09:11:46 AM", "So a developer can just copy and paste code from javadocs' snippet to have the expected result.", "NaN"], ["23", "Refactoring: Fixed some typos in README.md", "Dmytro Chyzhykov", "ffbit", "11/13/13, 09:10:57 AM", "`cdntral` -> `central`\n`conmcrete` -> `concrete`", "NaN"], ["24", "Avoided classloader issue when testing in Eclipse plugins environment", "Brice Dutheil", "bric3", "12/03/13, 11:51:06 PM", "NaN", "NaN"], ["25", "Refactoring: Gradle 1.9", "Brice Dutheil", "bric3", "12/04/13, 12:46:23 AM", "Updated travis build descriptor as well", "NaN"], ["28", "Removed .java files from main mockito jar artifacts", "Marcin Grzejszczak", "marcingrzejszczak", "12/22/13, 02:44:20 PM", "https://code.google.com/p/mockito/issues/detail?id=418\n- removed entries in ant build\n- removed *.java files from attached libs (cgilb-and-asm-1.0.jar, com.springsource.org.hamcrest.core-1.1.0.jar)", "NaN"], ["29", "Smarter constructor injection by choosing \"biggest\" constructor instead of the default one", "Marcin Grzejszczak", "marcingrzejszczak", "12/24/13, 11:38:44 AM", "See https://code.google.com/p/mockito/issues/detail?id=421\n\nAdded additional condition to sorting of constructors by checking amount of mockable constructor arguments", "NaN"], ["30", "Deep stub style mocks can be serialized", "Marcin Grzejszczak", "marcingrzejszczak", "01/16/14, 05:37:53 PM", "See https://code.google.com/p/mockito/issues/detail?id=399", "NaN"], ["32", "Fixed the behavior of compareTo method of the mock objects", null, "alberskib", "01/08/14, 09:13:44 PM", "See https://code.google.com/p/mockito/issues/detail?id=467\n\nFix compareTo behaviour the same objects", "NaN"], ["36", "Refactoring: inner implementations of Filter and Comparator should be static", "Kamil Szyma\u0144ski", "kamilszymanski", "03/11/14, 12:26:20 AM", "NaN", "NaN"], ["37", "Refactoring: avoid static keyword in inner interface definition", "Kamil Szyma\u0144ski", "kamilszymanski", "03/11/14, 12:27:13 AM", "inner interfaces are implicitly static", "NaN"], ["38", "New \"then\" method for BDD-style interaction testing", "Lovro Pand\u017ei\u0107", "lpandzic", "03/18/14, 07:17:28 PM", "New feature in BddMockito for BDD then part of the test which allows mock behavior verification by using `Mockito#verify(Object)`.\nFor example we have classes Person and Bike:\n\n``` java\nBike bike = new Bike();\nPerson person = mock(Person.class);\n```\n\nand the following interaction\n\n``` java\nperson.ride(bike);\nperson.ride(bike);\n```\n\nCurrent (non BDD) behavior verification would go like:\n\n``` java\nverify(person, times(2)).ride(bike);\n```\n\nThis feature introduces the following way of verification:\n\n``` java\nthen(person).should(times(2)).ride(bike);\n```", "NaN"], ["39", "Allow calling real implementation of jdk8 extension methods", null, "alberskib", "03/26/14, 08:13:07 PM", "See also the google code ticket: https://code.google.com/p/mockito/issues/detail?id=456\n\nEnable calling real implementation on extensions method from jdk8\nAdditionally change add validation checking whether callRealMethod is invoked on abstract methods.\nIn fact resolving issue could be achieved by removing this validation because when someone do next thing:\n1: when(someInteface.abstractMethod()).thanCallRealMethod();\n2: someInteface.abstractMethod()\nException will be throwned on second line informing that there were attempt to invoke abstract method", "NaN"], ["41", "New \"getArgumentAt\" method for convenient implementation of custom Answers", "Ivan Vershinin", "vershinin", "03/17/14, 09:59:16 AM", "The problem is when i need to use answers, I quite often need to cast these arguments.\nI propose two methods in InvocationOnMock, so we can get two arguments of method typesafely, so this piece of code,\n\n``` java\n@SuppressWarnings(\"unchecked\")\n  doAnswer(new Answer() {\n      public Object answer(InvocationOnMock invocation) {\n          Object[] args = invocation.getArguments();\n          int count  = (int)args[1];\n         //do something\n      }})\n  .when(mock).someMethod();\n```\n\nwill be better:\n\n``` java\n  doAnswer(new Answer() {\n      public Object answer(InvocationOnMock invocation) {\n           int count  = invocation.getArgumentAt(1, int.class);\n         //do something\n      }})\n  .when(mock).someMethod();\n```", "NaN"], ["42", "Refactoring: Upgrade to Gradle 1.11", "Andrei Solntsev", "asolntsev", "03/26/14, 10:17:25 PM", "(see http://stackoverflow.com/questions/22097430/gradle-1-6-to-1-11-migration-error for the details about changes in testng.gradle)", "NaN"], ["44", "Refactoring: removed then-verify", "Lovro Pand\u017ei\u0107", "lpandzic", "03/27/14, 07:29:52 PM", "Removed verify alias in BddMockito.", "NaN"], ["47", "Issue484 fix", "Emory Merryman", "MajA7jHbJYW2N", "04/12/14, 02:12:24 PM", "This fixes the issue when comparing 2 identical objects which throw an exception in their equals method.", "NaN"], ["50", "Refactoring: Updates .travis fil to gradle 1.11", "Brice Dutheil", "bric3", "04/16/14, 01:31:36 PM", "NaN", "NaN"], ["51", "Proposal to add packaging to mockito-testng with gradle", "Vivian Pennel", "Vp3n", "04/20/14, 01:46:27 PM", "This pull request was done while the Hackergarten event at devoxxFR.\n\nThis is a packaging proposal for mockito-testng module with gradle.\n- 'grade build' create a 'mockito-testng-1.0.jar' and 'mockito-testng-1.0-sources.jar' in ROOT/subprojects/testng/build\n- 'gradle uploadArchives' package mockito-testng as maven artifact (local repository in ROOT/target/maven/repository for now)\n\nI've also loaded version.properties in gradles files (and deleted reltated TODO) to re-euse version number, and added mockito.testng.version in this file\n\nI think it will need to be adapted to your build needs (build path(s) for example), but it provide a start.\nIt also currently miss the osgi repackaging. ", "NaN"], ["53", "Refactoring: Updated Travis CI configuration file to use the Gradle wrapper", "Markus W\u00fcstenberg", "markuswustenberg", "04/26/14, 10:15:44 AM", "A bit of Travis CI cleanup. Don't know if this is used at all, but I just saw it and thought I'd fix this tiny thing. :) Hope it's useful. Cheers!", "NaN"], ["56", "Fixed wrong javadoc for AdditionalAnswers", "Marcin Grzejszczak", "marcingrzejszczak", "07/04/14, 11:31:00 AM", "Fixed wrong javadoc for AdditionalAnswers", "NaN"], ["58", "Added useful links to README.md", null, "ks1024", "06/27/14, 03:26:52 PM", "Hi,\nI've been learning this mock framework these days. When I read the README file I found two missing links for the word \"here\" in the \"Remember\" part :\n1. link to more documentation and examples\n2. link to RefCard \nso I did these micro-modifications. I hope this will be helpful for you. \n\nKuangshi", "NaN"], ["59", "Refactoring: Added casts to supress varargs warnings", "Marcin Grzejszczak", "marcingrzejszczak", "07/04/14, 06:39:41 PM", "NaN", "NaN"], ["62", "Coveralls coverage tracking tool allows Mockito source code preview", "Marcin Zaj\u0105czkowski", "szpak", "07/21/14, 08:31:49 AM", "Workaround for an issue with Cobertura plugin:\nhttps://github.com/stevesaliman/gradle-cobertura-plugin/issues/53", "NaN"], ["63", "Improve NoInteractionsWanted report to include the name of the mock", null, "philipa", "07/30/14, 10:06:51 AM", "This is useful feedback when using multiple mocks in verifyNoMoreInteractions().", "NaN"], ["65", "Refactoring: Cleanup ignores and fix 1.5 compatibility", "Gunnar Wagenknecht", "guw", "08/12/14, 12:48:39 PM", "This branch contains a few cleanups I had to do after importing mockito:\n- There are a few more ignores required for Eclipse. \n- As Mockito is configured for 1.5 source compatibility it should adhere to it. Therefore I removed the @Override annotation where it would cause compile errors on 1.5", "NaN"], ["68", "Added custom failure message to Mockito.verify. Issue 482", null, "geoffschoeman", "06/12/15, 05:35:37 PM", "Issue 482: passing custom failure message to Mockito.verify", "NaN"], ["87", "Fixed DelegatingMethod.equals() so that it's easier to extend Mockito by custom verification modes", "Hugh Hamill", "hughwphamill", "09/26/14, 02:01:47 PM", "Currently if you create a DelegatingMethod and compare it to itself using .equals() it will show as not equal because the .equals() method expects a java.lang.reflect.Method (without explicitly stating such).  This has a knock on effect on the evaluation of InvocationImpl.equals() which at runtime may be using a DelegatingMethod in its .equals().\n\nI have changed .equals() and .hashCode() in DelegatingMethod to a more appropriate implementation, which can handle both the case where the input object is a DelegatingMethod and where it is a java.lang.reflect.Method.\n\nI ran up against this issue when creating a custom VerificationMode which used InvocationImpl.equals() to check that the appropriate invocation was made.  My comparison failed even though I was comparing two references to the same InvocationImpl instance.", "NaN"], ["94", "Update README.md", "Werner Beroux", "wernight", "11/26/14, 09:28:43 AM", "Bug #93 : Clearer link to the main reference document with an overview of the main features of Mockito (organized by use case rather than by release date).", "NaN"], ["103", "Fixes issue #99 : RETURNS_DEEP_STUBS automatically tries to create serializable mocks", "Brice Dutheil", "bric3", "10/10/14, 12:44:43 AM", "See issue #99 \n\nWhat it does is propagating the serializing mode of the parent, upon each mock creation when deep stubbing.\n\nBefore each mock created where made serializable by default. Which is not an issue when the types have a default no arg constructor, but may become problematic when the type didn't have one, Mockito would report an error explaining that it couldn't mock this type.", "NaN"], ["113", "Improved exception handling of AdditionalAnswers#delegatesTo", "Ross Black", "brasslock", "10/28/14, 07:19:21 AM", "When using the AdditionalAnswers#delegatesTo method, exceptions thrown by the delegate are wrapped in InvocationTargetException due to invocation via Method.\nInstead, the original exception from the delegate should be propagated to the caller.", "NaN"], ["125", "Make org.mockito.asm.signature package optional in Import-Packages.", "Radim Kubacki", "radimk", "12/30/14, 01:30:09 PM", "Fixes Issue #104.", "NaN"], ["131", "Improve documentation: remove typos in the readme file", "Dhruv Arora", "dhruvarora", "12/04/14, 06:54:09 AM", "? following the word EasyMock on line 108 removed.", "NaN"], ["142", "Fix #128 : Deep stubbing with generic responses in the call chain is not working", "Przemyslaw Bielicki", "pbielicki", "12/31/14, 04:39:52 PM", "NaN", "NaN"], ["144", "enum Answers implements now Answer<Object>", "Christian Schwarz", "ChristianSchwarz", "01/02/15, 04:16:34 PM", "The enum type Answers implements now the Answer interface. This allows us to use the enum values in `Mockito.mock(Class,Answer)`. This is handy when you have to test legacy code with PowerMockito and want to use both `@Mock` and `Mockito.mock(..)`.\n\n``` java\n@Mock(answers=RETURNS_DEEP_STUBS) \nClassA a;\nClassB b;\n\npublic void setUp(){\n  b= mock(ClassB,Mockito.RETURNS_DEEP_STUBS)   //<< static import is not possible here, but with this pull request we can use RETURNS_DEEP_STUBS we used in @Mock.\n}\n```", "NaN"], ["161", "Excluded missing transitive dependency of the coveralls gradle plugin to fix failing build.", "Clark Brewer", "brewerc", "01/25/15, 02:02:28 AM", "NaN", "NaN"], ["163", "GitHubIssues fetcher is now aware of GitHub pagination", "Brice Dutheil", "bric3", "01/25/15, 04:02:17 PM", "On each build, the build script is tested, and the `GitHubTicketFetcherTest` failed because GitHb issues API is paginated. Over time with new issues/pull request added, the first page did not contain issue number the test expected to find, leading to this failed assertion.\n\n```\nCondition not satisfied:\n\nimpr.toText() == \"\"\"* Improvements: 2 * Allow instances of other classes in AdditionalAnswers.delegatesTo [(#112)](https://github.com/mockito/mockito/issues/112) * Clarify Spy vs Mock CALLS_REAL_METHODS [(#108)](https://github.com/mockito/mockito/issues/108)\"\"\"\n|    |        |\n|    |        false\n|    |        100 differences (58% similarity)\n|    |        * Improvements: (1)\\n  * Allow instances of other classes in AdditionalAnswers.delegatesTo [(#112)](https://github.com/mockito/mockito/issues/112)(-~--------------------------------------------------------------------------------------------------)\n|    |        * Improvements: (2)\\n  * Allow instances of other classes in AdditionalAnswers.delegatesTo [(#112)](https://github.com/mockito/mockito/issues/112)(\\n  * Clarify Spy vs Mock CALLS_REAL_METHODS [(#108)](https://github.com/mockito/mockito/issues/108))\n|    * Improvements: 1\n|      * Allow instances of other classes in AdditionalAnswers.delegatesTo [(#112)](https://github.com/mockito/mockito/issues/112)\norg.mockito.release.notes.improvements.DefaultImprovements@1ed22788\n\n    at org.mockito.release.notes.improvements.GitHubTicketFetcherTest.fetches improvements from GitHub(GitHubTicketFetcherTest.groovy:19)\n```\n\nGithub pagination is documented here : https://developer.github.com/guides/traversing-with-pagination/\n\nNote: duplicate of #162 but target the `master` branch", "NaN"], ["165", "Fix typos in CONTRIBUTING.md.", "Clark Brewer", "brewerc", "01/30/15, 10:32:29 AM", "NaN", "NaN"], ["171", "Replace CGLIB by Bytebuddy", "Brice Dutheil", "bric3", "06/02/15, 07:47:02 PM", "Preliminary steps to replace CGLIB by ByteBuddy, thanks to @raphw for bootstrapping the code.\n\nWhat does it bring :\n- This PR replaces CGLIB entirely by ByteBuddy as the default mockmaker\n  - ByteBuddy offers a more modern take on byte code manipulation than CGLIB\n  - ByteBuddy offers more features than CGLIB\n  - ByteBuddy is actively developed\n  - ByteBuddy may be the trigger to support `final` class support\n- The current test suite show it's feature complete\n- This fixes the long standing issue [212](https://code.google.com/p/mockito/issues/detail?id=212) where a mock misbehave if the mocked type has a non public parent.\n- This PR has been the playground for some test utils that have already been cherry picked in the master like the test tool `ClassLoaders`\n- This PR uses different source folders for the mockmaker code. Both CGLIB and ByteBuddy relative code have been moved.\n\nThis PR may need review and potential leftovers are :\n- Create a `mockito-bytebuddy-mockmaker` maven release, as the `MockMaker` interface din't yet change, it could provide an opportunity to test ByteBuddy before it is integrated in Mockito 2.x\n- Create a `mockito-cglib-mockmacker` maven release, while the default mock maker is replaced, the legacy mock maker has been the foundation of mockito for a long time and other project may still depend on it (my first thought is PowerMock) \n- As mentioned in the 1st point I plan to add some API like `isTypeMockable`, as it would prove useful for different mock maker implementations for different reasons, android may have different capabilities, and bytebuddy may finally be the trigger to support `final` class mocking.\n- Check that ByteBuddy is OSGI compatible, ie doesn't break like in #82 (OSGI stuff)\n- Open question do we want to repackage ByteBuddy & ASM.\n  CGLIB / ASM were repackaged to avoid class generation collision in internal CGLIB cache, this implementation does not suffer form that, as it has its own class cache.\n\nBefore merging if changes are to be done, please make a PR on [bric3/mockito:bytebuddy-mockmaker](https://github.com/bric3/mockito/tree/bytebuddy-mockmaker)\n\n_A step closer to Mockito 2.0 #123_", "NaN"], ["176", "Make PropertyAndSetterInjection field sorting consistent", "Joseph Walton", "josephw", "02/26/15, 10:28:02 PM", "#155 is caused by calling `Collections.sort` with a comparator that isn't always transitive, as in the case where sorting by name and sorting by type hierarchy imply different orders.\n\nFor example, with fields of type `[Iterable, Integer, Number]`, it gives `Iterable == Integer` and `Iterable == Number`, but also an inconsistent `Integer < Number`.\n\nI'm not sure it's possible to sort consistently with a stateless `Comparator`, so this change switches to a `sortSuperTypesLast` method that first sorts by name and then shuffles any subclasses to after their superclasses. It's slower, but should be deterministic. The existing tests are preserved by leaving behind a dummy `Comparator` that uses the new sort method. New tests make sure that the sorted ordering doesn't depend on the original order.\n\nFixes #155.", "NaN"], ["184", "Fixes typo", "Hans Joachim Desserud", "hansjoachim", "03/22/15, 08:00:08 PM", "NaN", "NaN"], ["201", "Fixes #200 : ArgumentCaptor.forClass is more friendly with generic types", null, "bruceeddy", "04/17/15, 09:49:43 AM", "We modify the signature of `ArgumentCaptor.fromClass(Class<T>)` to better express the type relationship between the argument and the return type.  There is no change to the behavior of the method.  This change is to allow expressions such as:\n\n``` java\nArgumentCaptor<Consumer<String>> captor = ArgumentCaptor.fromClass(Consumer.class)\n```\n\nto type check, which is desirable as a convenience to users of `ArgumentCaptor`.\n\nWe also add two tests to document this extension to the api, both of which fail to compile without this change to `ArgumentCaptor.fromClass`.  These tests are unusual in that they make no assertions; this is justified because the change which they test is a change to the formal, or compile-time, properties of `ArgumentCaptor`, not its behavior.", "NaN"], ["202", "Better protection against incompatible returned value of default answer, and get safely mock name", "Brice Dutheil", "bric3", "04/19/15, 06:42:54 PM", "Fixes issue #187\n\nThe value returned by the default answer is now validated to make sure there won't be a `ClassCastException` if the default value is incompatible with return type.\n\nReporter now fetch in safer way the mock name, in case the default answer is incorrectly implemented. This avoid a `ClassCastException` when reporting a verification issue.", "NaN"], ["207", "Fixes #197 : Blocks ability to use negative value for timeout() and after() method.", "Lukasz Szewc", "lukasz-szewc", "05/13/15, 12:59:14 PM", "It should fix issue #197. \n\nIf user uses Mockito.after() or Mockito.timeout() with negative values, then friendly reminder exception with details will be thrown.", "NaN"], ["211", "ArgumentCaptor no longer working for varargs", "Lukasz Szewc", "lukasz-szewc", "06/05/15, 02:18:58 PM", "Fixes #188 . These commits should fix issue with capturing varargs.", "NaN"], ["215", "Improves InjectMocks behavior when injectee has multiple fields of the same type", "Tim van der Lippe", "TimvdLippe", "06/05/15, 02:18:59 PM", "Fix to @InjectMocks which injected incorrectly when multiple fields\nof the same type could be injected into, but only supplying 1 mock.\nThis makes sure that whenever there are multiple type candidates,\nit will hold off injecting if it finds a different field which has the correct matching name.", "NaN"], ["219", "Add .gitattributes to enforce LF", "Simen Bekkhus", "SimenB", "06/04/15, 06:58:29 AM", "Noticed the massive https://github.com/mockito/mockito/commit/d26f5db9023b6b7cd331017551ea4353fff0ef91.\n\nThis allows you to let git handle it.\n\nIt seems some files are still wrong. See here for a way to fix all https://help.github.com/articles/dealing-with-line-endings/\n\nThere might be a valid reason for not doing this, if so just close it :smile: ", "NaN"], ["221", "Fixes #212 : Add shouldHaveZeroInteractions as BDD version of verifyZeroInteractions", "Michal Kordas", "mkordas", "06/04/15, 04:56:47 PM", "Follow-up to #212 ", "NaN"], ["222", "Fixes #203 : Introduce BDD InOrder verification", "Michal Kordas", "mkordas", "06/05/15, 02:18:59 PM", "Follow-up to #203.", "NaN"], ["223", "[#206] Fix issue related to windows path", null, "alberskib", "06/06/15, 09:26:14 PM", "Problem was caused by file separator. Replacing hardcoded char '/' by File.seperatorChar solves issue. In the same file there is second occurence of this character but it is used with getResource(path) method -  in such case '/' is only acceptable separator.", "NaN"], ["229", "Fixes #228: fixed a verify() call example in @Captor javadoc", "Eugene Ivakhno", "eugene-ivakhno", "06/12/15, 04:25:00 PM", "NaN", "NaN"], ["234", "Cannot instantiate type with public method of a public parent class having a non public types in signature", "Brice Dutheil", "bric3", "06/18/15, 04:45:13 PM", "This should fix #233\n\n(Awaiting delivery of bytebuddy fix https://github.com/raphw/byte-buddy/commit/6f223d93ee57b199abf0e7abaf4837df6d041f41)\n\nThanks @raphw ", "NaN"], ["235", "Fixes #220 constructor invoking methods raise NPE", "Brice Dutheil", "bric3", "06/20/15, 12:05:45 AM", "In some recent version of mockito `@Spy` annotation will use the constructor rather than objenesis, that mean that constructor carry actual work. But since the interceptor set after instantiation, this raised an NPE with ByteBuddy. It wasn't an issue with CGLIB but it probably didn't event intercept such calls (unconfirmed at this point).\n\nThis PR aims to fix that by calling real code, if interceptor is not set, which can only happen if `ConstructorInstanciator` is used\n\nThanks to @raphw for his tip on this regard as well : https://github.com/raphw/byte-buddy/issues/32#issuecomment-113269844", "NaN"], ["238", "Moves responsibility of isTypeMockable to MockMaker", "Brice Dutheil", "bric3", "06/21/15, 05:57:15 PM", "Mock makers may have different capabilities. Historically CGLIB and Mockito were deeply related, later Mockmaker was created to allow Android developers to use dexmaker to create mocks. But logic that decided if a type could be mocked still reside in the mockito base, while it should be the responsibility of the mockmaker.\n\nAlso for example one could create his own mockmaker that forbid to mock type if some annotation is present. ", "NaN"], ["239", "Rework stubbing api with consecutive vararg to avoid JDK7+ warnings", "Brice Dutheil", "bric3", "07/28/15, 11:00:51 AM", "The motivation behind this rework, is that developers using JDK7+ see compiler warnings on some varargs methods.\n\nWhile these warning are false alarms, users may not feel the same way. These compiler warnings cannot be entirely avoided ; annotations like `@SafeVarargs` don't work on interfaces, and `@SuppressWarning({\"unchecked\", \"varargs\"})` have a limited impact on user code.\n\n**As these annotations have limited impact, and most people use a single argument anyway, I propose to to introduce API that takes a single argument. While an overload can takes more arguments**\n\nIf we don't do that i.e. if we keep the same API with compiler warnings it may encourages users to add `@SuppressWarning({\"unchecked\", \"varargs\"})` in their test code, thus potentially hiding bugs in their code base.", "NaN"], ["240", "Fixes coverage reports", "Brice Dutheil", "bric3", "06/21/15, 08:01:50 PM", "Test coverage reports have been broken with gradle without satisfying explanation, for quite some time. This pull request hopes to fix things", "NaN"], ["241", "Replaces cobertura/coveralls by jacoco/codecov", "Brice Dutheil", "bric3", "06/22/15, 12:18:54 AM", "Coveralls has been way too unstable in the recent months, gradle coverage tooling was broken without reasonable reasons.\n\nThis PR replaces the coverage with JaCoCo as it seems to be the only coverage report supported by https://codecov.io ; the other benefit is that it might see more support than cobertura.\nUnfortunately coverage drops to 83% compared to 85% with cobertura.", "NaN"], ["242", "Upgraded to Byte Buddy 0.6.11 and took improved features in use.", "Rafael Winterhalter", "raphw", "06/23/15, 12:39:02 PM", "Over the recent versions, several new features were added to Byte Buddy:\n1. An interceptor is now automatically detecting if a default interface method can be invoked if no super method exists.\n2. `@Origin` annotated methods are now automatically cached.\n3. A field value can be read without generating a proxy using the `@FieldValue` annotation in order to avoid the overhead of the accessor.\n4. Replaced Mockito's `SearchingClassLoader` with Byte Buddy's `MultipleParentClassLoader` to avoid the overhead of multiple class loader creation as class loaders are rather heavy objects for a VM.\n5. Removed duplicated interception methods.\n6. Added `@StubValue` to return correct default value for intercepted constructors.\n7. Generified several `Class` values in order to make the project compile against Byte Buddy's `Class<?>` values.\n8. Updated _out of sync_ OSGi manifest.\n\nAlso: Why does Mockito explicitly set the Java version for generated classes to version 5? If not specified explicitly, Mockito discovers the JVM version and generates the newest possible version\". This way, Byte Buddy can support Java 8 default methods on demand.", "NaN"], ["252", "[#251] Migrate Fest Assert code to AssertJ", "Marcin Zaj\u0105czkowski", "szpak", "07/08/15, 04:16:33 PM", "Fixes #251", "NaN"], ["257", "Upgraded to Byte Buddy 0.6.12. ", "Rafael Winterhalter", "raphw", "07/10/15, 02:11:03 PM", "Fixes https://github.com/mockito/mockito/issues/253\n- Adapted minor API changes. \n- Added modifier resolver that removes the synchronization flag from intercepted methods.", "NaN"], ["258", "Minify the JS file", "Brice Dutheil", "bric3", "07/10/15, 06:56:02 PM", "This may help with windows end of line fail. See mailing list.\nAlso tweaked font size in code", "NaN"], ["261", "Fixes #260: Typo in documentation", "Carlos Aguayo", "carlos-aguayo", "07/12/15, 05:30:19 PM", "Very minor typo in documentation: https://github.com/mockito/mockito/issues/260\n\nThere's an extra \"at\" (@) in the documentation.\n\nBefore it reads:\n\"Annotating the JUnit test class with a @RunWith(@MockitoJUnitRunner.class)\"\n\nAfter it reads:\n\"Annotating the JUnit test class with a @RunWith(MockitoJUnitRunner.class)\"\n\n![image](https://cloud.githubusercontent.com/assets/338917/8634099/6c7f5264-27b8-11e5-93d9-98b725c9f749.png)", "NaN"], ["264", "Fix typo in docs, missing breaklines.", "Carlos Aguayo", "carlos-aguayo", "07/12/15, 08:57:39 PM", "http://mockito.org/\n\nElements 32 and 33 show inline because they are missing a breakline.\n\n![image](https://cloud.githubusercontent.com/assets/338917/8639441/43dba808-28a8-11e5-8e9e-5bfc9dcc92bb.png)", "NaN"], ["266", "Ignore Groovy meta methods when instrumenting.", "Rafael Winterhalter", "raphw", "07/20/15, 02:26:44 PM", "Added a matcher to ignore any methods that are defined by the Groovy meta class system from instrumentation. This way, it is possible to create mocks of Groovy classes that behave appropriately in Groovy code.", "NaN"], ["270", "Issue #268: Added support for generic arrays as return types.", "Rafael Winterhalter", "raphw", "07/23/15, 10:13:33 AM", "Solves https://github.com/mockito/mockito/issues/268 by explicitly checking for return types that represent a generic array and by resolving for the array's component type.", "NaN"], ["280", "Reintroduce null check on MockUtil.isMock()", "Brice Dutheil", "bric3", "08/06/15, 11:56:01 AM", "Will fix #243 - null check on MockUtil.isMock() was incorrectly removed after successive refactoring, this PR reintroduces null check", "NaN"], ["281", "Correcting public website url in Maven POM", "Scott Markwell", "smarkwell", "08/07/15, 08:43:14 AM", "http://www.mockito.org does not resolve correctly, updating to http://mockito.org", "NaN"], ["286", "Add new API method to reset invocations of a mock, while maintaining all existing stubbing", "Tim van der Lippe", "TimvdLippe", "12/08/15, 02:03:02 PM", "Add new API method to reset invocations of a mock, while maintaining all existing stubbing.\n\n---\n\n**EDIT by mockito team** : Fixes #183", "NaN"], ["287", "Implement VerificationCollector which can collect multiple verifications.", "Tim van der Lippe", "TimvdLippe", "12/08/15, 09:34:58 AM", "It will report in the end the result of multiple statements. Fixes #124 ", "NaN"], ["288", "Add optional answer to support mocked Builders", "Tim van der Lippe", "TimvdLippe", "12/18/15, 07:59:16 AM", "When googling the mocking of builders, a lot of people said it was not possible with Mockito to support them in a clean way. `RETURNS_DEEPS_STUBS` does allow cascading, but can become quite fast very cumbersome.\nThe added `RETURNS_SELF` will try to return itself by looking at the method `returnType` and compare this with the class of the mock.", "NaN"], ["293", "Remove validateSerializable()", "Ben Yu", "fluentfuture", "10/10/15, 06:19:04 PM", "Fixes #245:\n\nRemove serializable validation.", "NaN"], ["294", "Removed deprecated ReturnValues and all it's occurrences", "Lukasz Szewc", "lukasz-szewc", "09/24/15, 06:46:16 AM", "These changes should 'deal with' issue #273", "NaN"], ["296", "Update StackOverflow link to Mockito tag", "Tim van der Lippe", "TimvdLippe", "09/26/15, 04:46:09 PM", "Tagging StackOverflow questions with the Mockito tag will get them most likely faster resolved.", "NaN"], ["301", "Refactor some utilities and TODO done", "Ariel Isaac", "Ariel-Isaacm", "12/08/15, 06:21:10 PM", "Hey guys, awesome framework +1 i've been looking at the code and i did some improvements, also i did a TODO but i'm not quite sure how to handle that null check it would be awesome if you could check it out @bric3 @szczepiq \n\nAnswers.java : private is not required \nClassPathLoader.java: Removed unnecessary imports\nScenarioPrinter.java: Changed the string concat into another append\nMockHandlerFactory.java: Return statement changed to be inline\nValuePrinter.java: TODO done, null check added\n\nEdit \nReleaseNotesExtension : Made authToken a final String\n\nEdit 2: \nSome improvements to the ThreadTests :)", "NaN"], ["306", "Eliminate direct dependency on ObjenesisInstantiator", "Tom Ball", "tomball", "10/21/15, 08:46:49 PM", "Updated InstantiatorProvider to be a plug-in, to eliminate direct dependency on ObjenesisInstantiator. This allows Mockito to be used by runtimes that don't execute bytecode, such as j2objc-translated code on iOS.", "NaN"], ["309", "Tweaks to the main Mockito javadocs to aid readability", "Shaun Abram", "sabram", "11/10/15, 12:34:31 PM", "@szczepiq as discussed, please review.", "NaN"], ["313", "Minor formatting, typo and clarification fixes in README", null, "Saser", "11/25/15, 11:10:50 PM", "Found some minor things in the README that could be improved upon, to polish it up a little.", "NaN"], ["314", "Add shouldHaveNoMoreInteractions() to BDDMockito", "Michal Kordas", "mkordas", "12/08/15, 11:52:28 AM", "Replicates `verifyNoMoreInteractions` on the BDD API.\n\n---\n\n**EDIT by mockito team** : Fixes #311", "NaN"], ["317", "Modify StackTraceFilter to not exclude \"good\" stack trace elements", "Evgeny Astafyev", "astafev", "03/09/16, 02:13:05 PM", "currently StackTraceFilter filters in this way (example from javadoc):\n[a+, b+, c-, d+, e+, f-, g+] -> [a+, b+, g+]\n\nthis patch makes it work:\n[a+, b+, c-, d+, e+, f-, g+] -> [a+, b+, d+, e+, g+]\n\nNot sure why it was implemented first time in this strange manner.\n\n---\n\n**EDIT by Mockito team** : Fixes #316", "NaN"], ["342", "Fixes #256 :Alternative fix to #259, windows build", "Michael Pinnegar", "Jazzepi", "01/20/16, 07:10:11 AM", "  *Allows user to build on windows by collapsing the heredoc into a single\n  line before it's shipped off to JavaDoc.\n  *Tested the generated Javadoc for markup errors, and added semicolons to\n  compensate.", "NaN"], ["344", "Show correct location of unwanted interaction with mock when using MockitoJUnitRule", "Urs Metz", "UrsMetz", "01/26/16, 10:48:44 PM", "This pull request by @indy5858 and me changes the stacktrace filtering so that when using `MockitoJUnitRule` the correct location of an unwanted interaction with a mock.\n\nBefore this commit the location on an unwanted interaction was not\nreported properly. Instead of\n\n```\nNo interactions wanted here:\n-> at <package>.<TestClass>.<testMethod>(<TestClass.java>:<lineNumber>)\n```\n\nthe assertion message said:\n\n```\nNo interactions wanted here:\n-> at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n```\n\nThe issue with the current behaviour in master is that all stacktrace elements above an element containing \"org.mockito.\" are removed. As `org.mockito.internal.junit.JUnitRule` fullfills this condition and comes below the \"payload\" (i.e. test code and code under test) stack elements the interesting part of the stack is filtered.\nIn case the pull request #317 (which we only found after hacking on this) is merged this pull becomes obsolete except for the two tests that are added:\n- checking that the \"payload\" stack elements aren't removed from the stack and\n- a test for removal of the Byte Buddy stack elements.", "NaN"], ["349", "Issue #345 : Removes previously verified invocations when capturing argument is combined with after and atMost verifiers", "Tarnowski Jan", "tarnowskijan", "03/09/16, 01:51:55 PM", "Solves #345 by removing already verified invocations before redundant capture of their arguments in AtMost class.", "NaN"], ["361", "Use the new issue/pr templates", "Brice Dutheil", "bric3", "03/09/16, 12:46:54 PM", "Github offers now Issue and Pull Requests templates. In order to channel user feedback and contribution, this PR initiates those templates.\n\nSee GH documentation on the matter : https://help.github.com/articles/helping-people-contribute-to-your-project/\n\nNote the introduction of the `.github` folder where contributing guidelines and templates will be located.", "NaN"], ["369", "Travis / CI improvements", "Brice Dutheil", "bric3", "03/09/16, 03:56:37 PM", "Travis CI jobs were failing inconsistently, \n\nThe gradle forked process that executed tests was killed by the travis VM, hence the build failed with the following log without much clue, but the exit status code `137`. \n\n```\n* What went wrong:\nExecution failed for task ':test'.\n> Process 'Gradle Test Executor 1' finished with non-zero exit value 137\n```\n\n_On the JVM it is the same as bash or zsh, when a program is \"closed\" with a signal, the exit code is `128` + the signal code._ There `137 = 128 + 9`, in other words the process ha received the `SIGKILL` signal. Other project have experienced that since a month (e.g. https://github.com/travis-ci/travis-ci/issues/5582).\n\n**Indeed removing the container mode made the build run correctly.**\n\nI took the time to tweak a bit more the build\n- by leveraging the travis caches for gradle downloads\n- by using the compressed oops for the 64bit JVMs (it should help only a little bit)\n- by upgrading to gradle 2.11\n- by reactivating code coverage", "NaN"], ["371", "speedup travis build a bit by downloading gradle-bin instead of gradl\u2026", "Pascal Schumacher", "PascalSchumacher", "06/19/16, 09:51:44 PM", "NaN", "NaN"], ["373", "Fixes #365 Simplify the InvocationOnMock-API to get a casted argument", "Christian Schwarz", "ChristianSchwarz", "04/22/16, 12:34:06 PM", "This pull request fixes #365 by introducing `T getArgument(int)` and deprecating `T getArgumentAt(int,Class<T>)` in type `InvocationOnMock`. This improves the readabilty of custom Answers. \n\nThis...\n`String text = invocation.getArgumentAt(1,String.class)` \ncan be replaced by... \n`String text = invocation.getArgument(1)` ", "NaN"], ["376", "Fix typo in example in javadoc.", "Vineet Kumar", "vin", "04/13/16, 04:06:41 AM", "This is a trivial javadoc-only change, just fixing a typo.", "NaN"], ["377", "Remove duplication.", "Vineet Kumar", "vin", "04/22/16, 12:30:35 PM", "simple documentation-only change.", "NaN"], ["380", "Fixes the issue #379 by removing previously verified invocations, some tests were added to verify that works", "Leonardo Carrasco", "thesnowgoose", "07/29/16, 12:31:13 AM", "check list\n- [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\n- [ ] If possible / relevant include an example in the description, that could help all readers\n     including project members to get a better picture of the change\n- [x] Avoid other runtime dependencies\n- [x] Meaningful commit history ; intention is important please rebase your commit history so that each\n     commit is meaningful and help the people that will explore a change in 2 years\n- [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md)\n- [x] Mention `Fixes #<issue number>` in the description _if relevant_\n- [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_", "NaN"], ["381", "Fixes #312.  Added documentation in OngoingStubbing.thenThrow().", "Jonathan Lloyd", "lloydjm77", "06/13/16, 07:22:24 AM", "This fixes #312.  Added documentation in OngoingStubbing.thenThrow where new ThrowsExceptionClass() is used to create a new Throwable using Objenesis.", "NaN"], ["382", "correct package declaration of VerificationWithDescriptionTest", "Pascal Schumacher", "PascalSchumacher", "05/16/16, 02:06:38 PM", "allows project to compile without errors in eclipse\n\ncheck list\n- [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\n- [ ] If possible / relevant include an example in the description, that could help all readers\n     including project members to get a better picture of the change\n- [x] Avoid other runtime dependencies\n- [x] Meaningful commit history ; intention is important please rebase your commit history so that each\n     commit is meaningful and help the people that will explore a change in 2 years\n- [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md)\n- [ ] Mention `Fixes #<issue number>` in the description _if relevant_\n- [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_", "NaN"], ["386", "Remove deprecated code", "David J. M. Karlsen", "davidkarlsen", "04/16/16, 06:06:10 PM", "Fixes for #374 - more left though.", "NaN"], ["388", "Fixed OSGi metadata generation", "Roland Hauser", "SourcePond", "04/18/16, 12:34:59 AM", "This pull-request fixes https://github.com/mockito/mockito/issues/383 and https://github.com/mockito/mockito/issues/385\n\nHave a nice weekend\n\n> Hey, \n> \n> Thanks for the contribution, this is awesome.\n> As you may have read, project members have somehow an opinionated view on what and how should be\n> Mockito, e.g. we don't want mockito to be a feature bloat.\n> There may be a thorough review, with feedback -> code change loop.\n> \n> _This block can be removed_\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\n\ncheck list\n- [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\n- [ ] If possible / relevant include an example in the description, that could help all readers\n     including project members to get a better picture of the change\n- [ ] Avoid other runtime dependencies\n- [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\n     commit is meaningful and help the people that will explore a change in 2 years\n- [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md)\n- [ ] Mention `Fixes #<issue number>` in the description _if relevant_\n- [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_", "NaN"], ["389", "Lazily verify without calling collector.verify()", "Tim van der Lippe", "TimvdLippe", "06/17/16, 11:15:17 AM", "As originally requested in #287: lazily verify all `Mockito.verify(...)` calls inside JUnit test cases.", "NaN"], ["404", "Fixes #374 Removed deprecated classes and methods", "Christian Schwarz", "ChristianSchwarz", "05/27/16, 06:48:10 PM", "Fixes #374 removed deprecated classes and methods", "NaN"], ["412", "Fixed #407 Vararg method call on mock object fails", "Andrey", "andreyrmg", "06/17/16, 10:56:01 AM", "NaN", "NaN"], ["413", "Fixed method name to verifyNoMoreInteractions", "Krzysztof Wolny", "vanta", "05/17/16, 08:28:38 PM", "NaN", "NaN"], ["419", "BDDMockito: rename willNothing to willDoNothing", "Alberto Scotto", "alb-i986", "06/19/16, 07:47:48 PM", ".. and keep the original signature as deprecated", "NaN"], ["424", "Inorder timeouts", "Michael Pinnegar", "Jazzepi", "06/19/16, 11:40:26 AM", "  *Fixes issue https://code.google.com/archive/p/mockito/issues/292\n  *Updated code provided by https://github.com/sirchia in PR #20\n\nCloses #20", "NaN"], ["427", "Refactored class Reporter to a static utillity", "Christian Schwarz", "ChristianSchwarz", "06/11/16, 03:16:41 PM", "Fixes #426 for class Reporter \n\nThis PR changes the way errors are created and thrown. All methods of the Reporter are now static so they can be imported statically and return an exception instead of throwing it directly. This improves the readability and eliminates the use of hacks to satisfiy the compiler.\n\nHere is a sample:\n\n```\npublic List<T> getLastVarargs() {\n        if (arguments.isEmpty()) {\n            Reporter().noArgumentValueWasCaptured();\n            return null;\n        } else {\n            return arguments.getLast();\n        }\n}\n```\n\nThe above code snipped can be rewritten to this:\n\n```\npublic List<T> getLastVarargs() {\n        if (arguments.isEmpty()) {\n            throw noArgumentValueWasCaptured();\n        } \n        return arguments.getLast();\n}\n```", "NaN"], ["429", "Added default answer for java.util.stream.Stream", "Philipp Jardas", "phjardas", "06/13/16, 09:57:12 PM", "I hope the description says it all. :-)\n\nThe new Java 8 based code only uses reflection, so the library still compiles and runs under older Java versions.", "NaN"], ["431", "Fixes #426 Dropped class HandyReturnValues", "Christian Schwarz", "ChristianSchwarz", "06/17/16, 09:43:20 AM", "#426\n\nWhile refactoring the class`HandyReturnValues` towards a static utility class I notices that it is not required at all. Therefore I decided to remove the type `HandyReturnValues`.", "NaN"], ["432", "Fixes #426 Refactored InvocationMarker to a static utility class", "Christian Schwarz", "ChristianSchwarz", "06/16/16, 12:15:41 PM", "#426\n\nRefactored `InvocationMarker`to a static utility class", "NaN"], ["434", "Very tiny typo.", "Roi Atalla", "ra4king", "06/15/16, 11:37:11 PM", "Missing word in error message.", "NaN"], ["436", "Clean up issues reported by IntelliJ", "Tim van der Lippe", "TimvdLippe", "07/07/16, 04:43:27 PM", "Some general issues reported by IntelliJ. Mostly concerning modifiers and unused imports.", "NaN"], ["441", "delete ignored cglib related tests", "Pascal Schumacher", "PascalSchumacher", "06/19/16, 11:31:35 AM", "NaN", "NaN"], ["442", "enable some ignored tests of BridgeMethodsHitAgainTest and DetectingF\u2026", "Pascal Schumacher", "PascalSchumacher", "06/19/16, 11:43:27 AM", "\u2026inalMethodsTest\n\nThis worked locally, so let's see if this also works on the ci server.\n\nFixes #304 ", "NaN"], ["443", "downgrade assertj-core version to 1.7.1 because this version is java \u2026", "Pascal Schumacher", "PascalSchumacher", "06/19/16, 12:19:45 PM", "\u20266 compatible (2.x requires java 7+) (see discussion of https://github.com/mockito/mockito/pull/440)", "NaN"], ["444", "Add PARAMETER ElementType to @Mock", "Tim van der Lippe", "TimvdLippe", "06/19/16, 04:43:18 PM", "TODO: Add a regression test to also show how this functionality can be used. CC @smoyer64\n\nFixes #438 ", "NaN"], ["446", "Make tests which test for timeouts with Thread#sleep more lenient.", "Pascal Schumacher", "PascalSchumacher", "06/19/16, 03:39:11 PM", "I took a look at the recently builds on travis ci and noticed a lot of failed builds. These failures where mostly unrelated to the actual changes, but caused by these strict timeout tests.\n\nThis pull request will not completely fix these random failures, but it should reduce their occurrences. \n\nThe ideal solution would be to completely remove usage of `Thread#sleep` from the test, but I have no idea how to do this.", "NaN"], ["447", "update objenesis version to 2.4", "Pascal Schumacher", "PascalSchumacher", "06/19/16, 03:16:48 PM", "objenesis 2.4 still runs on java 5", "NaN"], ["451", "Refactored Timeout and After concurrent test", "Christian Schwarz", "ChristianSchwarz", "06/22/16, 07:14:53 PM", "Refactored concurrent test in order to fix #433. The implementation now uses  an `Executor`to perform async calls instead of extending `Thread` and doesn't extend TestBase anymore. \n\nI also added a Stopwatch which can be used for further time dependent testing. In the future I want to use this class to write more tests for After/Timeout.", "NaN"], ["452", "javadoc: improve grammar of some sentences", "Pascal Schumacher", "PascalSchumacher", "06/19/16, 09:45:12 PM", "NaN", "NaN"], ["454", "Modified JavaDoc for ArgumentMatcher", null, "ashleyfrieze", "06/21/16, 09:11:21 AM", "To fix #453 - this is the amendment to the `ArgumentMatcher` JavaDoc.", "NaN"], ["455", "activate VerificationWithTimeoutTest#shouldAllowTimeoutVerificationIn\u2026", "Pascal Schumacher", "PascalSchumacher", "06/22/16, 08:54:56 PM", "\u2026Order\n\nThis test work since https://github.com/mockito/mockito/pull/424 but was deactivated by mistake with https://github.com/mockito/mockito/pull/451", "NaN"], ["456", "fix some rawtype warnings", "Pascal Schumacher", "PascalSchumacher", "06/23/16, 09:24:18 AM", "NaN", "NaN"], ["458", "remove dead code in ClassCacheVersusClassReloadingTest", "Pascal Schumacher", "PascalSchumacher", "06/24/16, 02:05:47 PM", "NaN", "NaN"], ["459", "fix some rawtype warnings in tests", "Pascal Schumacher", "PascalSchumacher", "06/23/16, 08:37:45 PM", "NaN", "NaN"], ["460", "delete disabled test for removed objenesis missing reporting feature", "Pascal Schumacher", "PascalSchumacher", "06/24/16, 02:05:16 PM", "NaN", "NaN"], ["462", "refactored InvocationsFinder to static utility class", "Christian Schwarz", "ChristianSchwarz", "06/26/16, 10:11:56 PM", "Relates to #426\n- refactored `InvocationsFinder` to static utility class\n- added 6 more test to `NumberOfInvocationsInOrderCheckerTest` that are basically taken over from `NumberOfInvocationsCheckerTest`", "NaN"], ["464", "fix some rawtype warnings in tests", "Pascal Schumacher", "PascalSchumacher", "06/24/16, 06:11:45 AM", "NaN", "NaN"], ["467", "fix some rawtype warnings in tests", "Pascal Schumacher", "PascalSchumacher", "06/25/16, 10:46:25 AM", "NaN", "NaN"], ["468", "add missing since javadoc tags for recently added methods and classes\u2026", "Pascal Schumacher", "PascalSchumacher", "06/26/16, 03:55:44 PM", "NaN", "NaN"], ["469", "fix some rawtype warnings in tests", "Pascal Schumacher", "PascalSchumacher", "06/26/16, 03:54:22 PM", "NaN", "NaN"], ["470", "Refactored mock cache to be non-blocking.", "Rafael Winterhalter", "raphw", "06/28/16, 09:24:34 AM", "The previous cache used a lock to unify concurrency and weak references. Instead, keys are now explicitly wrapped using weak references and similarly to the functioning of a weak hash map, the entries are polled upon accessing the cache. This avoids blocking.", "NaN"], ["471", "Reference correct types for multiple parent class loader if user class and Mockito are loaded by different loaders (e.g. OSGi)", "Rafael Winterhalter", "raphw", "06/28/16, 09:24:44 AM", "Fixes #385.", "NaN"], ["475", "Typo fix", "Krzysztof Wolny", "vanta", "06/30/16, 03:50:55 PM", "> Hey, \n> \n> Thanks for the contribution, this is awesome.\n> As you may have read, project members have somehow an opinionated view on what and how should be\n> Mockito, e.g. we don't want mockito to be a feature bloat.\n> There may be a thorough review, with feedback -> code change loop.\n> \n> _This block can be removed_\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\n\ncheck list\n- [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\n- [ ] If possible / relevant include an example in the description, that could help all readers\n     including project members to get a better picture of the change\n- [x] Avoid other runtime dependencies\n- [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\n     commit is meaningful and help the people that will explore a change in 2 years\n- [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md)\n- [ ] Mention `Fixes #<issue number>` in the description _if relevant_\n- [x] At least one commit should mention `Fixes #<issue number>` _if relevant_", "NaN"], ["476", "refactored ThreadSafeMockingProgress to a singleton", "Christian Schwarz", "ChristianSchwarz", "07/11/16, 03:01:19 PM", "The actual implementation of [ThreadSafeMockingProgress](https://github.com/mockito/mockito/blob/master/src/main/java/org/mockito/internal/progress/ThreadSafeMockingProgress.java) disguise that it is effectively a singleton cause the ThreadLocal member is static. This makes it hard to see that different instances  share the same state.\n\nThis PR...\n- refactores `ThreadSafeMockingProgress`to provider of MockingProgress instances\n- uses the standard way of instantiating the initial `ThreadLocal`value this also avoids possible race conditions", "NaN"], ["479", "fix grammar of sentence in Mockito javadoc", "Pascal Schumacher", "PascalSchumacher", "07/03/16, 09:15:33 PM", "NaN", "NaN"], ["481", "Exclude mockito internal packages from the Javadoc", "Tim van der Lippe", "TimvdLippe", "07/06/16, 12:36:15 PM", "This one was a toughy, but I managed to write a Doclet that post-processes the generated classes. It filters all internal classes. This way, there are no compilation failures when generating the Javadoc if you would use `exclude \"**/internal/**\"`.\n\nFixes #226 ", "NaN"], ["483", "Update version scheme to publish release candidate", "Tim van der Lippe", "TimvdLippe", "08/23/16, 04:34:57 PM", "Beta releases now follow the official semver scheme of `MAJOR.MINOR.PATCH-beta.BETAVERSION`. This PR also updates the current version to a release candidate.\n\nWe should decide after the release candiate what the version of Mockito 2.0 should be. E.g. should it be `2.0.0`? That would mean we go down on our `PATCH` number which might confuses people. For the Mockito 3.0 beta is to set the version to `3.0.0-beta.BETAVERSION` to not confuse with the `PATCH` number, but it still leaves us with the question regarding the official release of Mockito 2.0 :cry: \n\nCloses #123 ", "NaN"], ["486", "Cleanup: removed dead/unnecessary classes", "Christian Schwarz", "ChristianSchwarz", "07/10/16, 08:07:24 PM", "Removed dead/unnecessary classes:\n- VarargCapturingMatcher and Test\n- AnyVararg removed in Favor of Any, Any can now used as varargs matcher too \n  \n  removed test [shouldNotAllowAnyObjectMatchEntireVararg()](https://github.com/mockito/mockito/blob/master/src/test/java/org/mockito/internal/invocation/ArgumentsComparatorTest.java#L110) cause it was not clear why ANY should not be allowed as varargs matcher", "NaN"], ["490", "Atleast to static", "Christian Schwarz", "ChristianSchwarz", "08/04/16, 10:15:53 AM", "- Unified `AtLeastXNumberOfInvocationsChecker` and\n  `AtLeastXNumberOfInvocationsInOrderChecker` into a static utility class\n- Unified `MissingInvocationChecker` and `MissingInvocationInOrderChecker` in\n  a static utility class", "NaN"], ["491", "Deprecate whitebox and corresponding verboserunner and junitfailureha\u2026", "Tim van der Lippe", "TimvdLippe", "08/16/16, 08:22:36 AM", "A quick google showed that there are almost zero usages of this runner. Moreover it was relying on a very hackish implementation. I think we can do a better job by creating a new runner with JUnit 5 as part of #390. Therefore the intent is to deprecate these classes and remove them in Mockito 3.0.\n\nFixes #489", "NaN"], ["492", "Revert \"Remove deprecated method\"", "Tim van der Lippe", "TimvdLippe", "07/11/16, 01:16:45 PM", "Simple git revert for an accidental removal of a deprecated api since 2.0 instead of 1.X.\n\nFixes #482.", "NaN"], ["493", "Code cov on releases", "Tim van der Lippe", "TimvdLippe", "08/07/16, 09:04:50 AM", "Releases are now triggering CI builds to generate the code coverage reports.\nAn example of a normal build can be found at https://travis-ci.org/mockito/mockito/builds/143765346#L334-L374\nAn example of a build ignored as the commit message contained `[ci skip-release]` can be found at https://travis-ci.org/mockito/mockito/builds/143765834#L311-L314\n\nFixes #465", "NaN"], ["495", "Moves Reporter friendly exception factory to internal package", "Brice Dutheil", "bric3", "07/12/16, 11:55:18 AM", "The `Reporter` friendly exception factory class lies in `org.mockito.exceptions.Reporter`, however it's API is subject to change without really impacting user experience.\n\nThus, I propose to move `org.mockito.exceptions.Reporter` to `org.mockito.internal.exceptions.Reporter`.\n\nI didn't provided a dummy class for two reasons :\n1. I would like to schedule this for Mockito 2 a major version\n2. This class shouldn't be used outside framework development", "NaN"], ["496", "Renames Matchers to ArgumentMatchers to avoid name clash with Hamcrest Matchers class", "Brice Dutheil", "bric3", "07/12/16, 11:38:36 AM", "Renames `Matchers` to `ArgumentMatchers` to avoid name clash with Hamcrest `org.hamcrest.Matchers` class.\n\nThis plagued usage of mockito and hamcrest together since the introduction of matchers. The work in Mockito 2 beta allowed to avoid relying on hamcrest internally and thus split the Hamcrest matcher factory `MockitoHamcrest`. Yet this is not enough as using both mockito matchers and hamcrest matchers in the same class, made the developer life not comfortable when using both API.\n\nThis change helps in that regard, as it renames the import class. Not this change tweaks only the class hierarchy, so current code still compiles, thanks to the javac compiler that can lookup static method in parent classes. (That is why I didn't updated tests yest, they could be upgraded in a late PR, a good timing would probably be when `Matchers` is removed)\n\n`Matchers` class can be removed in the next version of mockito, likely 3.0.", "NaN"], ["498", "remove unused imports", "Pascal Schumacher", "PascalSchumacher", "07/18/16, 08:23:43 PM", "NaN", "NaN"], ["499", "Fixes #401 - makes the JUnit runner detect unused stubs", "Szczepan Faber", "mockitoguy", "07/24/16, 04:46:12 PM", "Fixes #401\n\nThis is a breaking change because JUnit runner will now fail the test class if there is an unused stubbing.\n\nFeedback is welcome. Sorry for working on it for a long time and big number of commits.", "NaN"], ["501", "refactored TestMethodsFinder to a static utility class (#426)", "Pascal Schumacher", "PascalSchumacher", "07/25/16, 05:14:15 PM", "NaN", "NaN"], ["502", "refactored ArgumentsComparator to a static utility class (#426)", "Pascal Schumacher", "PascalSchumacher", "07/25/16, 05:12:29 PM", "NaN", "NaN"], ["503", "refactored NonGreedyNumberOfInvocationsInOrderChecker to a static uti\u2026", "Pascal Schumacher", "PascalSchumacher", "07/25/16, 05:13:15 PM", "\u2026lity class (#426)", "NaN"], ["504", "fixed some rawtype warnings", "Pascal Schumacher", "PascalSchumacher", "07/24/16, 08:32:03 PM", "NaN", "NaN"], ["507", "Improved exception message - fixes issue 506", "Szczepan Faber", "mockitoguy", "07/25/16, 05:31:06 PM", "Fixes #506 ", "NaN"], ["510", "Fixes #194 tweaks any matchers", "Brice Dutheil", "bric3", "07/29/16, 04:05:38 PM", "Details is #194 \n\nI took the opportunity to \n- replace `TestBase.assertThat` by more powerful AssertJ equivalent. There's still some work to be done in this class.\n- add iterable matchers\n\nBefore merging\n- [x] I ponder to make `anyObject()` not to accept `null`, currently `any()` is an alias of `anyObject()` => Keeping the `anyObjet` behaviour and deprecate the method\n- [x] I need to update `anyInt` family description.", "NaN"], ["511", "Fix some warnings", "Hans Joachim Desserud", "hansjoachim", "07/28/16, 09:32:44 PM", "Fixed various warnings, mostly unused imports, but also a couple of unnecessary semicolons and interface modifiers.\n\n`./gradlew build` built successfully.", "NaN"], ["512", "fix some raw type warnings in tests", "Pascal Schumacher", "PascalSchumacher", "07/29/16, 08:59:57 PM", "NaN", "NaN"], ["513", "replace TestBase#assertContainsIgnoringCase(String sub, String string\u2026", "Pascal Schumacher", "PascalSchumacher", "07/29/16, 10:28:07 PM", "\u2026) with AssertJ #containsIgnoringCase\n\nOther methods of TestBase could be replaced in a similar way.", "NaN"], ["514", "refactored MockUtil to a static utility class (#426)", "Pascal Schumacher", "PascalSchumacher", "07/31/16, 12:44:41 AM", "NaN", "NaN"], ["515", "refactored AllInvocationsFinder and VerifiableInvocationsFinder to st\u2026", "Pascal Schumacher", "PascalSchumacher", "07/31/16, 12:46:51 AM", "\u2026atic utility classes (#426)", "NaN"], ["516", "replace TestBase#assertNotContains(String sub, String string) with As\u2026", "Pascal Schumacher", "PascalSchumacher", "07/29/16, 10:49:34 PM", "\u2026sertJ #doesNotContain(CharSequence sequence)", "NaN"], ["517", "Make ciBuild depends also on subprojects state", "Marcin Zaj\u0105czkowski", "szpak", "07/31/16, 12:37:11 AM", "Before those changes CI build was silently ignoring compilation erros in Mockito submodules. Because of that `gw check` was failing locally (e.g. due to missing `assertNotContainsError()`).\n\nIn addition to enable building those modules (I don't know what are the plans about testng module by the way) I fixed Java 6 compatibility in them.", "NaN"], ["518", "Verify build on Travis also with Java 7 and 8", "Marcin Zaj\u0105czkowski", "szpak", "07/31/16, 12:36:34 AM", "In addition to building with Java 6, Java 7 and 8 builds were added to verify compatibility with newest Java versions. Release task was modified to provide a way to skip releasing in specific builds.\n\nAfter migration to Gradle 3.0 Java 9 EA build could be also added.", "NaN"], ["519", "replace TestBase#assertContains(String sub, String string) with Asser\u2026", "Pascal Schumacher", "PascalSchumacher", "07/31/16, 12:35:08 AM", "\u2026tJ #contains and #hasMessageContaining", "NaN"], ["523", "made some timeouts in VerificationAfterDelayTest and VerificationWith\u2026", "Pascal Schumacher", "PascalSchumacher", "07/31/16, 09:13:30 AM", "\u2026TimeoutTest more lenient to prevent frequent build failures on travis ci", "NaN"], ["525", "Add regression test for #508", "Hans Joachim Desserud", "hansjoachim", "07/31/16, 06:12:58 PM", "As mentioned in the bug report for #508 , adds a test which would catch this issue if it happened to regress in the future.", "NaN"], ["528", "Missing generics info on collection matchers", "Brice Dutheil", "bric3", "08/02/16, 01:01:53 PM", "Follow up on #510 (issue #194) following this comment https://github.com/mockito/mockito/pull/510#issuecomment-236877717\n\nBasically it tweaks the collection matchers with generic support. It should have bee in abf9851.", "NaN"], ["532", "Fix typo in Javadocs", "David Xia", "davidxia", "08/05/16, 07:19:32 PM", "- [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\n- [x] If possible / relevant include an example in the description, that could help all readers\n     including project members to get a better picture of the change\n- [x] Avoid other runtime dependencies\n- [x] Meaningful commit history ; intention is important please rebase your commit history so that each\n     commit is meaningful and help the people that will explore a change in 2 years\n- [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md)\n- [x] Mention `Fixes #<issue number>` in the description _if relevant_\n- [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\n\nAlso improve sentence structure of surrounding sentences.", "NaN"], ["535", "refactored SuperTypesLastSorter to a static utility class", "Christian Schwarz", "ChristianSchwarz", "08/07/16, 06:22:41 AM", "refactored SuperTypesLastSorter to a static utility class\n\nrelates to #426 ", "NaN"], ["536", "Move release skipping logic to Gradle", "Marcin Zaj\u0105czkowski", "szpak", "08/08/16, 01:21:07 PM", "This is an enhancement for #493. I'm not a big fan of putting build logic into bash & .travis.yml, especially that we already have it separated in `release.gradle`.", "NaN"], ["540", "inlined ArrayUtils.isEmpty() in ArgumentsProcessor", "Christian Schwarz", "ChristianSchwarz", "08/09/16, 09:42:07 PM", "Inlined ArrayUtils.isEmpty() in ArgumentsProcessor and removed ArrayUtils cause it was only used in ArgumentProcessor.\nAlso isEmpty(..) was renamed to isNullOrEmpty(..) for clarity.\n\nrelates to #426 ", "NaN"], ["547", "refactored ObjectMethodsGuru to a static utility class", "Christian Schwarz", "ChristianSchwarz", "08/12/16, 12:14:05 PM", "- refactored `ObjectMethodsGuru` to a static utility class\n- removed unused methods and associated tests:\n  - `isToString(MockitoMethod method)`\n  - `isEqualsMethod(Method method)`\n  - `isHashCodeMethod(Method method)`\n- renamed `isToString(..)` to `isToStringMethod(..)`\n\nrelates to #426 ", "NaN"], ["549", "Fully register a class ancestry for GenericMetadataSupport", "Jeffrey Falgout", "JeffreyFalgout", "08/15/16, 03:53:18 PM", "The old implemention would take a class X and consider all of its superclasses\nand the interfaces implemented by X and the interfaces implemented by all of\nits superclasses.\n\nThe new implementation also considers the superinterfaces of the interfaces\nimplemented by X and the superinterfaces of the interfaces implemented by its\nsuperclasses.\n\nFixes #497", "NaN"], ["550", "Fixed #538 changed error message in case initialization for mock injection fails.", "Christian Schwarz", "ChristianSchwarz", "08/15/16, 01:22:45 PM", "Fixed #538\n\nIf a filed is annotated with @InjectMocks and the type of a field is an enum, inner class, interface or local class the error message is now: _\"Mock injection failed on field 'fieldName' cause the type 'AbstractCollection' is an abstract class._\"", "NaN"], ["553", "Uses the hosts addon in order to avoid the buffer overflow affecting \u2026", "Brice Dutheil", "bric3", "08/13/16, 06:00:41 PM", "Updates change in 8e3befc6f50b172c06affd4f5f189a0ea692d874 with new hosts add-on with insight from this comment https://github.com/travis-ci/travis-ci/issues/5227#issuecomment-165131913\n\nThis caused issues in this PR #550 ", "NaN"], ["555", "JUnit rules report unused stubs - fixes #384", "Szczepan Faber", "mockitoguy", "08/16/16, 02:36:59 AM", "- Makes JUnit rules detect unused stubs\n- Introduces MockitoListener API\n- See the use case in issue #384 \n- Recreated PR #527 with squashed commits", "NaN"], ["556", "Move Mockito internal classes to internal package", "Tim van der Lippe", "TimvdLippe", "08/15/16, 03:53:32 PM", "Fixes #551", "NaN"], ["557", "Replace or remove code.google.com links in documentation", "Tim van der Lippe", "TimvdLippe", "08/15/16, 03:44:47 PM", "Most links are replaced by their GitHub equivalent. Some links were pointing to issues on code.google.com, but given the large amount of documentation on these methods I decided to remove them.\n\nFixes #533", "NaN"], ["558", "Update documentation links in travis config comments", "Divyansh Gupta", "divyansh-gupta", "09/06/16, 02:45:19 PM", "- :white_check_mark:  PR should be motivated, i.e. what does it fix, why, and if relevant how\n- :white_check_mark:  If possible / relevant include an example in the description, that could help all readers, including project members, to get a better picture of the change\n- :white_check_mark:  Avoid other runtime dependencies\n- :white_check_mark:  Meaningful commit history ; intention is important please rebase your commit history so that each commit is meaningful and help the people that will explore a change in 2 years\n- :white_check_mark:  Read the [contributing guide](https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md)\n- :white_check_mark:  Mention `Fixes #<issue number>` in the description _if relevant_\n- :white_check_mark:  At least one commit should mention `Fixes #<issue number>` _if relevant_\n\nGoing through the travis config file and noticed some of the links to documentation were no longer correct. I have updated them here to be more useful.", "NaN"], ["560", "Fixes #554 : Checks.checkNotNull now throws IAE instead of NPE", "Brice Dutheil", "bric3", "08/16/16, 10:21:43 AM", "Changes NPE to IAE, see #554 ", "NaN"], ["566", "Make travis use OracleJDK7 instead of OpenJDK7", "Brice Dutheil", "bric3", "08/17/16, 10:02:25 AM", "Travis [doc](https://docs.travis-ci.com/user/ci-environment/#JDK) indicate that their distribution of the OracleJDK is more up-to-date than OpenJDK. \n\n> OracleJDK 7 is the default because we have a much more recent patch level compared to OpenJDK 7 from the Ubuntu repositories. Sun/Oracle JDK 6 is not provided because it reached End of Life in fall 2012.", "NaN"], ["568", "Ensured that MockitoJUnitRunner is thread safe wrt unused stubs detection", "Szczepan Faber", "mockitoguy", "08/21/16, 11:43:09 PM", "This PR concludes #401 Yay!!!!\n\nHighlights:\n- fixed the thread safety problem by leveraging the same API that JUnit rules used for hinting at unused stubs\n- removed StubbingListener API (it could not work to the thread safety levels we support in Mockito, see also #545)\n\nCloses #332\nFixes #401", "NaN"], ["569", "Improved the public API of MockingDetails", "Szczepan Faber", "mockitoguy", "08/21/16, 03:27:05 PM", "Fixes #541, highlights:\n- started exposing full mock creation information instead of just type to mock and extra interfaces\n- changed public API but only for methods that were introduced in 2.x. So it is _not_ backwards incompatible change as far as 1.10 is concerned.", "NaN"], ["571", "Pretty print primitive and wrappers types in Maps", "Tokuhiro Matsuno", "tokuhirom", "08/24/16, 01:14:23 PM", "check list\n- [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\n- [x] If possible / relevant include an example in the description, that could help all readers\n     including project members to get a better picture of the change\n- [x] Avoid other runtime dependencies\n- [x] Meaningful commit history ; intention is important please rebase your commit history so that each\n     commit is meaningful and help the people that will explore a change in 2 years\n- [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md)\n- [x] Mention `Fixes #<issue number>` in the description _if relevant_\n- [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\n\nIn following case, user can't understand the difference between expected and actual.\n\nCode:\n\n```\n@Test\npublic void foo() {\n    Foo m = mock(Foo.class);\n    m.foo(new HashMap<String, Object>(){{\n        put(\"hoge\", 4);\n    }});\n    verify(m).foo(new HashMap<String, Object>(){{\n        put(\"hoge\", 4L);\n    }});\n}\n\npublic static class Foo {\n    void foo(Map<String, Object> map) {\n    }\n}\n```\n\nOutput:\n\n```\nArgument(s) are different! Wanted:\nfoo.foo(() {hoge=4});\n-> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nActual invocation has different arguments:\nfoo.foo(() {hoge=4});\n-> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n```\n\nIf mockito outputs the \"L\" suffix for long values, user can understand the difference easily.\n\nAfter this commit, the output will be following:\n\n```\nArgument(s) are different! Wanted:\nfoo.foo({\"hoge\"=4L});\n-> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nActual invocation has different arguments:\nfoo.foo({\"hoge\"=4});\n-> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n```\n\nThis will fix #570", "NaN"], ["572", "replace TestBase#assertContainsType(final Collection<?> list, final C\u2026", "Pascal Schumacher", "PascalSchumacher", "08/20/16, 06:06:42 PM", "\u2026lass<?> clazz) with AssertJ assertion", "NaN"], ["573", "replace TestBase#assertNotEquals with AssertJ #isNotEqualTo", "Pascal Schumacher", "PascalSchumacher", "08/20/16, 03:00:13 PM", "NaN", "NaN"], ["574", "fix some rawtype warnings", "Pascal Schumacher", "PascalSchumacher", "08/20/16, 02:59:17 PM", "NaN", "NaN"], ["576", "Bumped Gradle and enabled Build Scans", "Szczepan Faber", "mockitoguy", "08/21/16, 03:35:46 PM", "- Fixes #564 \n- Bumped Gradle to latest 2.\\* (regenerated Gradle wrapper)\n- Added build scans support\n- Removed TODO I decided to not work on (fixes #544)", "NaN"], ["578", "made some timeouts in VerificationAfterDelayTest and VerificationWith\u2026", "Pascal Schumacher", "PascalSchumacher", "08/22/16, 07:50:55 AM", "\u2026TimeoutTest more lenient to reduce build failures on travis ci", "NaN"], ["579", "fix some rawtype warnings", "Pascal Schumacher", "PascalSchumacher", "08/21/16, 05:54:38 PM", "NaN", "NaN"], ["587", "make VerificationWithTimeoutTest#shouldAllowMixingOnlyWithTimeout mor\u2026", "Pascal Schumacher", "PascalSchumacher", "08/25/16, 10:13:33 AM", "\u2026e lenient to reduce build failures on travis ci\n\nThe two recent build failures where both caused by this test:\nhttps://travis-ci.org/mockito/mockito/jobs/154189781\nhttps://travis-ci.org/mockito/mockito/jobs/154506554", "NaN"], ["588", "Update version explanation with bad beta versions", "Brice Dutheil", "bric3", "08/23/16, 05:43:48 PM", "The previous versioning scheme has been changed in #483, however the previous artefacts still exists, and some pages may mention them, we should still explain what are these artefact and what they mean in regard of other versions.", "NaN"], ["589", "Reintroduces javadoc stylesheet", "Brice Dutheil", "bric3", "08/23/16, 06:04:06 PM", "Fixes #552\n\nSince artifacts are built with openjdk6, we can reintroduce a good looking javadoc stylesheet.", "NaN"], ["590", "removed package org.mockito.internal.listeners", "Christian Schwarz", "ChristianSchwarz", "08/24/16, 09:23:36 AM", "- deleted unused and empty interface `MockingProgressListener`\n- moved `NotifiedMethodInvocationReport` to `org.mockito.internal.handler`", "NaN"], ["591", "refactored ArgumentMatchingTool to a static utillity class", "Christian Schwarz", "ChristianSchwarz", "08/25/16, 09:55:33 AM", "relates to #426", "NaN"], ["592", "stylesheet-tweaks-for-openjdk6", "Brice Dutheil", "bric3", "08/24/16, 01:02:11 PM", "#589 aimed to fix the javadoc rendering, but the assumption was that the javadoc tool of the Sun JDK6 will render javadoc the same way as openjdk6.\n\nUnfortunately this is not the same, the javadoc rendering of openjdk6 is a pre work that avoid the use of table elements, this making the stylesheet incompatible.\n\nThis PR aims to fix that and thus fix #552 \n\nBonus I changed the `2.*` and `2.0` by `2.0.0` in the javadoc, this way we have aligned version numbers", "NaN"], ["597", "Removed TODO and dead code", "Szczepan Faber", "mockitoguy", "08/25/16, 06:56:53 AM", "- Sweeped through all TODOs, found some dead code to remove\n- Hamcrest docs looks good overall, TODO is obsolete\n- Updated javadoc for deprecated Mockito.debug()\n\nFixes #593 ", "NaN"], ["599", "Improved release notes generation", "Szczepan Faber", "mockitoguy", "08/26/16, 04:19:54 PM", "Fixes issue #598\n\nDoes not change Mockito library code, just the release pipeline.", "NaN"], ["600", "suppressed compiler warning and unchecked collections cast", "Lukasz Szewc", "lukasz-szewc", "08/27/16, 11:56:41 AM", "- suppressed compile time warning\n- refactor raw collection cast", "NaN"], ["602", "Generate service-worker after generating JavaDoc for offline access", "Tim van der Lippe", "TimvdLippe", "11/15/16, 10:38:15 PM", "Service-workers intercept network calls and (if you are offline)\ncan serve files from the cache. The documentation of Mockito can\ntherefore be accessed even if you do not have internet access.\n\nAll files are pre-cached the first time you open the webpage.\nConsecutive openings of the website will result in significantly\nfaster responses (since we poke the cache) and also work offline.\n\nWhen new documentation is generated, the service-worker is updated\nand a friendly toast is displayed informing the user can refresh\nthe page to view the new content.\n\nRequirements for generating the service-worker is having npm\n(and therefore Node.js) installed. You must also make sure the\ngradle daemon has the correct permissions to write to the global\nnode_modules folder.\n\nThis normally is done with (on linux):\n\n``` shell\nsudo chown -R $(whoami) /usr/local/lib/node_modules\nsudo chown -R $(whoami) /usr/local/bin\nsudo chown -R $(whoami) ~/.npm\n```\n\nFixes https://github.com/mockito/mockito.github.io/issues/17", "NaN"], ["604", "Release notes group improvements by labels", "Szczepan Faber", "mockitoguy", "08/28/16, 02:04:39 PM", "Fixes #603 \n\nI will generate a demo release notes and check-in to some throw-away branch.\n\nHere's a demo of generated release notes. Note that final notes will have some manual edits (some narrative, announcement, etc.): https://github.com/mockito/mockito/blob/rc-release-notes-demo/doc/release-notes/official.md\n\nIMHO the current level of automation of release notes is enough :) It's time to work on the announcement, etc. In the process we can tweak the labels on tickets so that generation is more accurate.", "NaN"], ["605", "Fixes #595, going toward 2.1.0 instead of 2.0.0", "Brice Dutheil", "bric3", "08/28/16, 02:02:20 PM", "Following discussion in #595, about the best way to handle our non semantic versioning of 2.0 betas, we decided to release 2.1.0 instead of 2.0.0.\n\nI'm simply bumping the versions properties from `2.0.0-beta.119` to `2.1.0-beta.119`", "NaN"], ["615", "Fixes #497 : RETURNS_DEEP_STUBS may try to mock final classes", "Jeffrey Falgout", "JeffreyFalgout", "08/31/16, 12:24:48 PM", "Fixes #497\n\nWith deep stubs, it was possible for generic metadata to be lost/unused\nthrough nested invocations on non generic types. This could cause `RETURNS_DEEP_STUBS` to try mocking final classes which would result in a `ClassCastException`.\n\nApparently my other PR (#549) wasn't quite enough to fully fix this problem.\n\n---\n\n**EDITED by mockito team**", "NaN"], ["617", "Moves arity interfaces of java8 helper answers to public API", "Brice Dutheil", "bric3", "09/01/16, 01:00:22 PM", "The Java 8 helper interfaces have been introduced in #338. However the public `AdditionalAnswers.answer` family leak the functional interfaces.\n\nThese _parameter arity_ interfaces can be public, hence they are moved next to `Answer` in the `org.mockito.stubbing` package.\n\nI'm however in favor of adding the `@Incubating` annotation on those APIs and related objects. Thoughts ?\n\nFixes #614", "NaN"], ["619", "Fixes #548 from now on verification happens always call in other thre\u2026", "Lukasz Szewc", "lukasz-szewc", "09/02/16, 02:07:21 PM", "Should fix problems with #548 and #601 ", "NaN"], ["622", "Allow build script to release any release parent branch", "Brice Dutheil", "bric3", "09/02/16, 05:25:41 PM", "Allow build script to release any release parent branch\n\nThis allows branches like\n- `master`\n- `release/2.x`\n- `release/3.x`\n- similar patterns\n\nBut not a branch named `release` (without `/`)\n\nSee #620 and #594 ", "NaN"], ["623", "Updated the javadocs", "Szczepan Faber", "mockitoguy", "09/06/16, 06:08:33 AM", "Polishing the javadocs, starting with this small PR:\n\nIssue #596\n- updated @since to 2.1.0 (instead 2.0.0)\n- added more docs around the verification collector", "NaN"], ["626", "Ensured javadocs are correct", "Szczepan Faber", "mockitoguy", "09/06/16, 02:38:02 PM", "Based on feedback from Brice.", "NaN"], ["627", "Release procedure for branches and some javadoc", "Szczepan Faber", "mockitoguy", "09/09/16, 05:12:07 AM", "Sorry for the amount of commits. It happened due to merging. **Please squash** when applying the change.\n\nFixes #594 - now it should be possible to release from branches. It worked for the release/test branch so it should work for release/2.x :)", "NaN"], ["628", "Fixed javadoc documentation in the main class", "Szczepan Faber", "mockitoguy", "09/10/16, 04:23:38 PM", "Checks out line item in #596", "NaN"], ["630", "Fixes #629 - width of some headers in javadoc", "Lukasz Szewc", "lukasz-szewc", "09/09/16, 08:45:31 PM", "This small change will fix the problem with too wide headers.", "NaN"], ["634", "Update Byte Buddy to 1.4.22", "Tim van der Lippe", "TimvdLippe", "09/12/16, 12:14:33 PM", "On 2 september Byte buddy 1.4.22 was released.", "NaN"], ["635", "Unified logic of argument matching and capturing", "Christian Schwarz", "ChristianSchwarz", "10/17/16, 04:29:52 PM", "The logic of argument matching and capturing is the same but can be found in ArgumentsComparator and InvocationMatcher. This PR unifies the decision logic how matchers are applied to argument+varargs by introducing a `MatcherApplicationStrategy`. This strategy can apply an action to an pair of ArgumentMatcher and Argument. One action is used to perform the ArgumentMatcher.matches(arg) call and an other is used to perfrom the capturing.\n- fixes #439 ArgumentCaptor and ArgumentMatcher's can now be mixed in varargs\n- fixes #583 No more NPE when null is passed to an varargs \n- added 25 regression tests in VarargsTest (5 are ignored cause they belong to other issues and fail currently) \n- reduced logic duplication", "NaN"], ["637", "Upgrade to Gradle 3.0", "Tim van der Lippe", "TimvdLippe", "09/17/16, 02:55:06 PM", "This bumps Gradle to 3.0. I was unable to reproduce the issue reported by @szpak in #521 about a failing compilation locally. Maybe Gradle fixed this after the release candidate was published which was originally used in #521.\n\nFixes #561 \nCloses #521 ", "NaN"], ["639", "Update Travis configuration to also build on oraclejdk9", "Tim van der Lippe", "TimvdLippe", "11/05/16, 03:39:28 PM", "Let's see if this actually works. Testing for #520 ", "NaN"], ["641", "Update generated pom.xml with more project information", "Tim van der Lippe", "TimvdLippe", "09/17/16, 03:38:04 PM", "I added some more information based on the specification at https://maven.apache.org/pom.html\n\nFixes #633", "NaN"], ["646", "Fixes #640 Warns user to upgrade if Java 8 version is to low", "Brice Dutheil", "bric3", "09/26/16, 07:58:18 AM", "Fixes #640 Warns user to upgrade if Java 8 version is to low.\n\nAlso took the opportunity to log other platform details if mock class cannot be created.", "NaN"], ["647", "A small fix on Mockito javadocs. Adding some styling and an anchor to section 12.", "Bruno Krebs", "brunokrebs", "09/22/16, 11:41:37 AM", "Better now, right @TimvdLippe?", "NaN"], ["648", "Added InlineByteBuddyMockMaker which uses the instrumentation API for redefining classes and inlining the mocking logic.", "Rafael Winterhalter", "raphw", "09/29/16, 07:47:06 AM", "Inline mocks allow for creating mocks of final types and final methods within any type. The inline mock engine also makes the mocking type invisible such that `mock(Foo.class).getClass() == Foo.class`. Exceptions need to be made for abstract types and for types with serialization requirements where final methods are still instrumented but where a subclass needs to be created nevertheless. There are however few limitations of the inline mock engine that do not apply for the subclass mock engine:\n1. It is no longer possible to mock `native` methods which do not provide any byte code that can be manipulated.\n2. Synchronized methods remain synchronized as the instrumentation API does not allow the changing of modifiers.\n\nThe final mock engine is activated just like any other custom mock engine by placing an indicator file into the root folder. To make this more convenient, an alias mechanism was added where the mock type name can be referenced by _inline_.", "NaN"], ["651", "Update AssertJ to 3.5.2", "Tim van der Lippe", "TimvdLippe", "09/24/16, 02:33:30 PM", "AssertJ 3 requires Java 8 and was therefore a breaking change,\nbut there are no other changes breaking our test suite.\n\nFixes #650 ", "NaN"], ["654", "Renamed FailureDetecter to Failure Detector.", "Oliver Drotbohm", "odrotbohm", "09/27/16, 02:50:35 PM", "Also renamed misspelled isSussessful() to isSuccessful().\n\nFixes: #653.", "NaN"], ["656", "Fixing the typo in JUnitDetecter class name", "Vardan Torosyan", "vtorosyan", "09/27/16, 09:04:53 PM", "`JUnitDetecter` class has been renamed to `JUnitDetector`. The variables in `FriendlyExceptionMaker` and `JUniTool` have been renamed accordingly.\n\nFixes https://github.com/mockito/mockito/issues/655", "NaN"], ["660", "Adds a code style section to CONTRIBUTING document", "Brice Dutheil", "bric3", "09/30/16, 05:51:17 PM", "This PR proposes a code style for mockito.", "NaN"], ["662", "Upgrade to Gradle 3.1", "Jonatan Ivanov", "jonatan-ivanov", "09/30/16, 01:40:30 PM", "Upgrading Gradle version to 3.1\n\nFixes #661", "NaN"], ["670", "Artifacts are now published to 'mockito' org in Bintray", "Szczepan Faber", "mockitoguy", "10/04/16, 01:37:33 PM", "Fixes #669, more details in the commit message.", "NaN"], ["671", "changed stackoverflow link to mockito questions", "Christian Schwarz", "ChristianSchwarz", "10/04/16, 11:50:57 AM", "NaN", "NaN"], ["672", "Update Byte buddy to latest version", "Tim van der Lippe", "TimvdLippe", "10/04/16, 01:47:19 PM", "NaN", "NaN"], ["673", "Removed duplicate test", "Hans Joachim Desserud", "hansjoachim", "10/05/16, 01:10:25 PM", "Hello again :p \n\nI originally requested this test to be added in #525 after the underlying problem had been resolved. While browsing the code now, I discovered that it had already been added (as https://github.com/mockito/mockito/blob/master/src/test/java/org/mockitousage/bugs/DiamondInheritanceIsConfusingMockitoTest.java). This probably doesn't need to be tested twice, so I've removed the duplicate test.", "NaN"], ["674", "Fix typo in README", "Marcin Zaj\u0105czkowski", "szpak", "10/05/16, 07:41:40 AM", "When accepted I can also cherry-pick it to a 2.x branch.", "NaN"], ["675", "Move older releases to separate section", "Tim van der Lippe", "TimvdLippe", "10/08/16, 10:00:47 PM", "To prevent any confusion and make it clearer 2.x is now the version developed.", "NaN"], ["683", "Updated release process so that Mockito can continuously deliver high quality features", "Szczepan Faber", "mockitoguy", "10/09/16, 11:46:50 PM", "When merged, this will produce new version 2.2.0 and set release/2.x to continuously publish 2.2.1, 2.2.2, ... as new high quality features and enhancements are merged. Hurray!\n\nHighlights:\n- set next version to 2.2.0 (arbitrary number)\n- reworked the conditional complexity to avoid accidental releases\n- removed custom release version logic because it does not work (not opposed to this feature, just cleaned up the code. This feature should be implemented in version.gradle file)\n  - for the time being, custom version can be achieved by using Gradle env variable: ORG_GRADLE_PROJECT_version=2.3.0 (it looks like magic but it is a real feature from the Gradle book ;)\n- added basic docs around testing the release process (it's way too hard now)", "NaN"], ["690", "Enabled automated sync to central repository", "Szczepan Faber", "mockitoguy", "10/13/16, 09:09:15 AM", "After validating 2 releases manually, we can enable back automated central sync.", "NaN"], ["691", "New API: Mockito.mockingDetails(mock).getStubbings()", "Szczepan Faber", "mockitoguy", "10/16/16, 02:07:42 PM", "Added new API. For motivation, see #542", "NaN"], ["693", "Improved the format of arguments in verification failures when describing short and byte values", "Brice Dutheil", "bric3", "10/16/16, 04:36:15 AM", "Currently the code can print some arguments without necessary casts, see https://github.com/mockito/mockito/pull/571#issuecomment-241357864.\n\nBefore the exception message contained : \n\n```\niMethods.forByte(0x19)\n```\n\nWhich is actually not valid java. So the exception message now prints \n\n```\niMethods.forByte((byte) 0x19)\n```\n\nThis PR intends to fix it, this especially affects short and byte values.", "NaN"], ["698", "New API: MockingDetails.printInvocations() for debugging mock behavior", "Szczepan Faber", "mockitoguy", "10/21/16, 12:57:37 AM", "For motivation, see issue #543", "NaN"], ["704", "DelayedExecution uses now a more precise approach to call a mock async.", "Christian Schwarz", "ChristianSchwarz", "11/09/16, 10:55:57 AM", "New approach to fix flickering async tests.\n\nDetail description, coming soon...", "NaN"], ["705", "Fixes exception typo", "Ga\u00ebtan Muller", "MGaetan89", "10/22/16, 09:16:17 AM", "This is a simple correction in an error message that can be thrown by Mockito.", "NaN"], ["709", "Simplified release process by hosting javadoc on javadoc.io", "Szczepan Faber", "mockitoguy", "10/25/16, 03:56:07 AM", "1. As we started hosting javadoc on javadoc.io (see #692) we don't need to push javadoc to gh-pages any more. This makes the releases simpler and faster.\n2. I sneaked in test fixes after Brice caught a problem in my previous change :). Thanks!!!\n\nTested by dry-running the release locally:\n\n```\nDry-running the release\nPerforming 7 release steps\nStep 1: ensure good chunk of recent commits is pulled for release notes automation\n--- Executing: git pull --depth 1000 origin release/2.x\nFrom https://github.com/mockito/mockito\n * branch            release/2.x -> FETCH_HEAD\nAlready up-to-date.\n--- Completed!\nStep 2: configure generic git user\nStep 3: update release notes\nBuilding new release notes based on /Users/sfaber/mockito/src/doc/release-notes/official.md\nBuilding notes for revisions: v2.2.7 -> HEAD\nSuccessfully updated release notes!\nStep 4: commit release notes\n--- Executing: git add /Users/sfaber/mockito/src/doc/release-notes/official.md\n--- Completed!\n--- Executing: git commit -m \"Update release notes by Travis CI build null [ci skip]\" /Users/sfaber/mockito/src/doc/release-notes/official.md\n[issue-692 1b12082] \"Update release notes by Travis CI build null [ci skip]\"\n 1 file changed, 7 insertions(+)\n--- Completed!\nStep 5: create new version tag\n--- Executing: git tag -a v2.2.8 -m Create tag v2.2.8 by Travis CI build null [ci skip]\n--- Completed!\nStep 6: commit incremented version on release/2.x\n--- Executing: git commit -m Increment version '2.2.8' -> '2.2.9' by Travis CI build null [ci skip] version.properties\n[issue-692 df2d903] Increment version '2.2.8' -> '2.2.9' by Travis CI build null [ci skip]\n 1 file changed, 1 insertion(+), 1 deletion(-)\n--- Completed!\nStep 7: push changes to all involved branches\n--- Executing: git push <masked> release/2.x v2.2.8 -q --dry-run\n--- Completed!\nNo cleanup found for step 'push changes to all involved branches'\nNo cleanup found for step 'commit incremented version on release/2.x'\nNo cleanup found for step 'create new version tag'\nNo cleanup found for step 'commit release notes'\nNo cleanup found for step 'update release notes'\nCleaning up after step 'configure generic git user'\nNo cleanup found for step 'ensure good chunk of recent commits is pulled for release notes automation'\n:rollbackRelease\nRelease failed. Rolling back 7 release steps.\nAttempting to roll back step 7 (push changes to all involved branches)\nNo rollback or cleanup operation found for step 'push changes to all involved branches'\nAttempting to roll back step 6 (commit incremented version on release/2.x)\n--- Executing: git reset --hard HEAD~1\nHEAD is now at 1b12082 \"Update release notes by Travis CI build null [ci skip]\"\n--- Completed!\nAttempting to roll back step 5 (create new version tag)\n--- Executing: git tag -d v2.2.8\nDeleted tag 'v2.2.8' (was f05a82e)\n--- Completed!\nAttempting to roll back step 4 (commit release notes)\n--- Executing: git reset --hard HEAD~1\nHEAD is now at d2e1b4b Made release easier to test\n--- Completed!\nAttempting to roll back step 3 (update release notes)\nNo rollback or cleanup operation found for step 'update release notes'\nAttempting to roll back step 2 (configure generic git user)\nAttempting to roll back step 1 (ensure good chunk of recent commits is pulled for release notes automation)\nNo rollback or cleanup operation found for step 'ensure good chunk of recent commits is pulled for release notes automation'\n```", "NaN"], ["711", "Fixes #707, adds throwable to arity answers, also improved javadoc", "Brice Dutheil", "bric3", "10/24/16, 10:59:15 AM", "All in the title. This should fix #707", "NaN"], ["719", "Verification listeners", null, "LiamClark", "12/13/16, 10:33:56 PM", "I had the need to be notified when ever a verification happens, this pr implements this.\n\nTo do anything useful with this notification the following data is important:\n- The mock that we are verifying on.\n- The verification mode we are using.\n- And what method we wish to verify.\n\nThe one place where this data is collectable is in MockAwareVerificationMode.\n\nWhat remains is to get the listeners there so we are able to notify them.\n\nThe tests I added try to follow those of the invocation listeners, however there might be more cases that are important that i'm unaware of. ", "NaN"], ["723", "Release automation tidy up", "Szczepan Faber", "mockitoguy", "10/30/16, 02:36:24 PM", "Various tidy-ups to the release automation", "NaN"], ["724", "Added new release workflow for release automation", "Szczepan Faber", "mockitoguy", "11/11/16, 06:33:04 AM", "The purpose of this RB is to give you heads-up about the improvements to the release automation that I work on. The algorithm is implemented and will not change much. Documentation, edge case unit tests and fixing runnability from Gradle are pending (Travis CI will fail on this PR).\n\nThe goal of the new 'release-workflow' plugin is to able to express the release automation in the build.gradle file like that:\n\n``` groovy\nreleaseWorkflow {\n    step releaseNeeded\n    onlyIf { releaseNeeded.needed }\n    step bintrayUpload\n    step pullCommits\n    step configureGenericGitUser, cleanup: restoreGitUser\n    step commitReleaseNotes, rollback: resetReleaseNotes\n    step tagNewVersion, rollback: removeNewTag\n    step bumpVersion, rollback: unbumpVersion\n    step pushChanges\n}\n```\n\nMore over, it will be very easy to test out the release locally or even individual release steps:\n\n```\n./gradlew release -PdryRun\n./gradlew pullCommits -PsingleStep\n```", "NaN"], ["734", "New nullable(Class<T>) matcher for convenient matching of nullable arguments", "Brice Dutheil", "bric3", "11/04/16, 01:06:21 AM", "After using mockito, I have found that the new behaviors of matcher are good and indeed show problems in the test code or in the production code. However I have found that I miss an easy way to express a matcher for `nullable` argument when the production code may produce either `null` or value types, typically `Stream.of(<mixed values>).map(o -> mapper.map(c))...`, the current options are :\r\n\r\n* `<T> T any()` is nice but don't check the type.\r\n* there's always `AdditionalMatchers.or()` but this feel more heavy to use.\r\n\r\nI'm proposing the introduction of the argument matcher `<T> nullable(Class<T>)` which is a combination of `isA` and `isNull`. I'm not adding `<T> T nullable()` because this would have the same meaning as `<T> T any()`", "NaN"], ["735", "Exposed existing verification API so that it no longer leaks internal API", "Szczepan Faber", "mockitoguy", "11/07/16, 04:25:56 AM", "See motivation and plan in #730", "NaN"], ["745", "Removes deprecated way of documenting package by package-info.java", "Brice Dutheil", "bric3", "11/07/16, 10:55:51 PM", "Should fix #665 \r\n\r\nNothing to say really, but it has to be done at some point. The most important selling point is that it may allow to annotate a package.", "NaN"], ["746", "Add missing copyright headers", "Dmitriy Zaitsev", "DmitriyZaitsev", "11/08/16, 08:06:56 PM", "- [x] Fixes #727 \r\n- [x] Add missing copyrights using [license-gradle-plugin](https://github.com/hierynomus/license-gradle-plugin).\r\n- [x] Updated only source files. Test files were skipped. Existing copyright headers were not modified.", "NaN"], ["747", "Allow fluent usage of Mockito.framework() listeners methods", "Brice Dutheil", "bric3", "11/08/16, 08:38:58 PM", "Currently `addListener` and `removeListener` returns `void` which makes it repetitive to add or remove these :\n\n```java\nMockito.framework().addListener(...);\nMockito.framework().addListener(...);\nMockito.framework().addListener(...);\n```\n\nThe main change of this PR is to return `MockitoFramework` instead, thus allowing to chain invocations :\n\n```java\nMockito.framework().addListener(...)\n                   .addListener(...)\n                   .addListener(...);\n```\n\nThis improvements is a breaking change, however the API is still **incubating** and should be expected to break, source wise there's no problem since nothing could be done before due to the `void` return.", "NaN"], ["748", "Regroup Junit classes in junit packages", "Brice Dutheil", "bric3", "11/17/16, 12:46:41 PM", "This PR proposes to regroup all JUnit related classes in corrct packages. There's two changes :\r\n\r\n* public : Deprecates `org.mockito.runners.MockitoJUnitRunner` and moves logic over `org.mockito.junit.runners.MockitoJUnitRunner`\r\n\r\n  Questions :\r\n\r\n    * Should the runner be moved in the subpackage `junit.runner` or regroup the runner along with the rule in the `junit` package? (JUnit 5 will have neither of those)\r\n    * Should I do the same for already deprecated runners (console spamming and verbose runner)\r\n\r\n* private : Moves JUnitHackerTool to `org.mockito.internal.junit.util`\r", "NaN"], ["751", "Pushed release automation code into separate GitHub repository", "Szczepan Faber", "mockitoguy", "11/12/16, 04:08:33 PM", "Moved release automation code into separate GitHub repository 'mockito-release-tools'. This way it can be tested and shared easily.\r\n\r\n - Removed most code from buildSrc, instead we're using binary dependency\r\n - Added necessary dependencies\r\n\r\nNext steps:\r\n\r\n - Move most of 'release.gradle' and 'version.gradle' into opinionated Gradle plugins under 'mockito-release-tools'\r\n - Enable autopublication of 'mockito-release-tools'\r\n\r\nTested by running: \"./gradlew release -PdryRun\"", "NaN"], ["754", "Improved documentation regarding unused stubbing detection", "Szczepan Faber", "mockitoguy", "11/14/16, 11:09:43 AM", "Improved documentation regarding unused stubbing detection, fixes #609", "NaN"], ["759", "Updated the verification documentation to correctly use argThat with Java8 lambdas", null, "LiamClark", "11/17/16, 05:44:29 AM", "The example for custom argument matchers using a lambda in the main mockito documentation is missing a call to argThat.\r\n\r\nThis pr fixes the docs to correctly use argThat.", "NaN"], ["763", "Fixes #762 Removes ReturnsEmptyValue javadoc references", "Brice Dutheil", "bric3", "11/21/16, 11:13:13 AM", "- Removes `ReturnsEmptyValue` (internal) generated links.\r\n- Didn't remove `<code>org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker</code>`, the only result for `<code>org.mockito.internal` as it is a documentation not an actual link.\r\n- Removes `ReturnsMoreEmptyValue` references\r\n- Make use of gradle javadoc task exclude\r\n- Fixes package view rendering : see [2.2.1](https://javadoc.io/doc/org.mockito/mockito-core/2.2.21)\r\n\r\n\r\nSee #762", "NaN"], ["771", "Fixes #731 Implements retry rule for flaky tests", "Brice Dutheil", "bric3", "11/21/16, 09:35:59 PM", "Previous attempts at fixing the time related tests failed. Indeed the previous attempts are not bullet proof when the CI can run schedule some threads slower than _expected_.\r\n\r\nA proper harness should be implemented, but in the meantime, I implemented the retry rule as proposed in #731 to gain back stability on the build.", "NaN"], ["772", "Fix typo in README.md", "F.W. Dekker", "FWDekker", "11/22/16, 11:02:18 PM", "Fixes a minor typo in README.md.", "NaN"], ["774", "Added subproject for supporting class loading on Android.", "Brice Dutheil", "bric3", "12/25/16, 03:37:02 PM", "This is a work from @raphw to bring mockito to android devices without dexmaker, using ByteBuddy Android instead.", "NaN"], ["775", "Removed private isMockitoMock(..) in MockUtil", "Christian Schwarz", "ChristianSchwarz", "11/25/16, 03:04:22 PM", "Small internal refactoring.", "NaN"], ["776", "InvocationMatcher internal improvements", "Christian Schwarz", "ChristianSchwarz", "11/25/16, 02:19:38 PM", "InvocationMatcher internal improvements\r\n * Added missing @Override annotations to reduce warning count.\r\n * Simplified parameter comparison in hasSameMethod(..)\r\n * Fixed compile error due to char conversion in MatchersTest\r", "NaN"], ["777", "Replaced ObjectBox with AtomicReference", "Christian Schwarz", "ChristianSchwarz", "11/25/16, 02:18:44 PM", "Removed ObjectBox in favor of AtomicReference.\r", "NaN"], ["778", "ValuePrinter small improvements", "Christian Schwarz", "ChristianSchwarz", "11/25/16, 09:30:08 PM", " * added private construtor\r\n * removed unneccessary 'else' statements\r\n * added missing type arguments\r\n * replaced `new ArrayIterator(new String[]{\"\"}) `with `emptyIterator()` in\r\n_printValues(..)_", "NaN"], ["779", "Removed argument from MockingProgress.stubbingCompleted(..)", "Christian Schwarz", "ChristianSchwarz", "11/30/16, 12:00:44 PM", "Removed unneccessary argument from internal MockingProgress.stubbingCompleted(..)", "NaN"], ["780", "Fixes #765: Set files encoding to UTF-8", "Igor Kostenko", "isanych", "11/25/16, 05:24:20 PM", "to avoid build failures on systems with different default encoding", "NaN"], ["782", "Introduce default answers for primitive Optionals/Streams", "Stephan Schroevers", "Stephan202", "11/25/16, 06:06:14 PM", "I introduced `#invokeNullaryFactoryMethod` to remove some of the existing code duplication, but am unhappy about the _new_ duplication, especially in the test code. What's your view on introducing deduplicating logic in test code? Also, the singleton fields in `JavaEightUtil` could be replaced with a `ConcurrentMap<String, Object>` (i.e. a map from FQCNs to singletons). If you agree, I'd love to reduce the size of this PR.", "NaN"], ["783", "Simplify `ReturnsEmptyValuesTest`", "Stephan Schroevers", "Stephan202", "11/27/16, 09:01:30 AM", "As [discussed](https://github.com/mockito/mockito/pull/782#discussion_r89658266) in the comments under #782. Longer term this approach could be replaced with a proper test parametrization framework, but then at least the foundation has been laid.\r", "NaN"], ["785", "Backport 'release/2.x' changes to master (20161127)", "Marcin Zaj\u0105czkowski", "szpak", "12/02/16, 12:16:19 AM", "Backport current 'release/2.x' changes to master as a base for backporting my mockito-java8 changes to Mockito.\r\n\r\nThere is a lot (~350) changed files. Please take a look at the files with conflicts as I could resolve it not in the most optimal way.", "NaN"], ["786", "Add showing stacktrace in Travis build", "Marcin Zaj\u0105czkowski", "szpak", "11/27/16, 04:32:15 PM", "To see more details in a case of build failure.", "NaN"], ["791", "Test improvements", "Brice Dutheil", "bric3", "11/30/16, 02:12:05 PM", "Simple tests improvements\r\n\r\nBasically disable some test for Java 9, and report tried attempts. And actually make the retry rule retry ;)", "NaN"], ["795", "Deep stubs no longer cause unnecessary stubbing exception with JUnit runner", "Szczepan Faber", "mockitoguy", "12/02/16, 01:40:36 PM", "Fixes #756", "NaN"], ["803", "Adds a warning for IBM J9 VMs if mock generation fails", "Brice Dutheil", "bric3", "12/07/16, 01:13:58 PM", "Related to #801, this PR simply adds a warning for IBM J9 VMs if the mock maker fails.", "NaN"], ["805", "Never throw mockito exceptions from a plugin type's constructor", "Rafael Winterhalter", "raphw", "12/13/16, 06:22:08 PM", "Throwing a `MockitoException` from a mock maker constructor will cause the stack trace cleaning to be applied which itself relies on the plugin registry which is not yet initialized during the mock maker plugin's creation.", "NaN"], ["807", "New opt-in stubbing strictness implemented in JUnit rules", "Szczepan Faber", "mockitoguy", "12/10/16, 05:45:05 PM", "New API (for rationale, see #769, for code review history see #770):\r\n\r\n```java\r\n//Existing API:\r\n@Rule public MockitoRule mockito = MockitoJUnit.rule()\r\n\r\n//Proposed improvements:\r\nrule().strictness(Strictness.LENIENT)\r\nrule().strictness(Strictness.WARN)       // <-- is the default\r\nrule().strictness(Strictness.STRICT_STUBS)  // <-- Mockito 3.0 default\r\n```\r\n\r\nWhat \"strict stubbing\" means?\r\n- Improved debuggability: the test fails early when code under test invokes stubbed method with different arguments.\r\n- Cleaner tests without unnecessary stubbings: the test fails when there are any unused stubs declared.\r\n- Cleaner, more DRY tests (\"Don't Repeat Yourself\"): If you use Mockito.verifyNoMoreInteractions() you no longer need to explicitly verify stubbed invocations. They are automatically verified.\r\n\r\nFor background and motivation, check out [Szczepan's article on LinkedIn](https://www.linkedin.com/pulse/curious-how-get-even-cleaner-tests-new-mockito-features-faber).", "NaN"], ["808", "JUnit runner reports argument stubbing mismatches", "Szczepan Faber", "mockitoguy", "12/21/16, 05:32:01 AM", "Mockito v2 introduced a new feature for reporting unused stubs and reporting argument mismatches (when stubbing uses different arguments than invocation in code under test). We received feedback from our users that the behavior should be more consistent for JUnit rules and JUnit runner. This change introduces that consistency, making JUnit runner also report stubbing argument mismatches to the console. This way, the users should be able to debug tests faster and gain more productivity when writing and maintaining tests!\r\n\r\nAlso checkout new feature added in Mockito 2.3.x - [opt-in strictness](https://static.javadoc.io/org.mockito/mockito-core/2.3.10/org/mockito/junit/MockitoRule.html#strictness(org.mockito.quality.Strictness)) for Mockito JUnit rules, making the tests even cleaner and easier to debug!", "NaN"], ["809", "Automated publication of mockito submodule like mockito-android", "Szczepan Faber", "mockitoguy", "12/17/16, 08:05:45 PM", "The goal of this PR is:\r\n - create a sample subproject \"android\" that is automatically released to Bintray / Maven central\r\n - refactor the build code so that it is easy to publish more artifacts in the future. TestNG? :)\r\n\r\nWhat happens when this PR is merged?\r\n - with every mockito-core release, mockito-android jar will be automatically uploaded to Bintray, however, it will be \"invisible\" until it somebody \"publishes\" it from Bintray UI\r\n - when we are comfortable with the android release, we can toggle the \"bintrayAutoPublish\" and \"mavenCentralSync\" property in \"android.gradle\" files and have fully automated publications of mockito-android\r\n\r\nGotchas\r\n- Mockito release has a tweak that when mockito-core source code hasn't changed since previous version, the release will be skipped and no jars will be published to artifactory. We need to fix this logic so that it is more flexible for publishing changes to other submodules like mockito-android. In the meantime, to work around this limitation, just make a whitespace change in Mockito javadoc to force release.\r\n\r\nHow did I test this change?\r\n- ran build and compare the distributions created, the source, javadoc, pom files were good.\r\n- ran publications from my local to Bintray test repo, inspected Bintray content\r\n- dry / test runs of release from local\r\n\r\nEnjoy :)", "NaN"], ["811", "Enable annotation engine as plugin", "Brice Dutheil", "bric3", "12/13/16, 06:27:16 PM", "Currently `AnnotationEngine` can be overrriden with the _deprecated_ `MockitoConfiguration`, in order to be more consistent with the new way, I propose to get the `AnnotationEngine` from the `PluginRegistry`.\r\n\r\nRegarding backward compatible behavior, if the `MockitoConfiguration` class exists and can be seen then Mockito will select the engine of this configuration instead of the `Plugins` one. If `MockitoConfiguration` class don't exist then Mockito wil chose the `Plugins` one.\r\n\r\nBonus I extended the classloader util to support some tests.", "NaN"], ["813", "[#798] Upgrade Jacoco to stable 0.7.8", "Marcin Zaj\u0105czkowski", "szpak", "12/12/16, 09:17:41 PM", "Fixes #798.", "NaN"], ["819", "Fixes bug were previously verified invocations could not capture argu\u2026", "Brice Dutheil", "bric3", "12/14/16, 04:14:52 PM", "Since Mockito 2 / #380 captured arguments is not anymore done for already verified interactions.\r\n\r\n```java\r\nIMethods mock = mock(IMethods.class);\r\nmock.oneArg(\"first\");\r\nArgumentCaptor<String> argument = ArgumentCaptor.forClass(String.class);\r\nverify(mock, times(1)).oneArg(argument.capture());\r\nassertThat(argument.getAllValues()).isEqualTo(1);\r\n\r\n// additional interactions\r\nmock.oneArg(\"second\");\r\nargument = ArgumentCaptor.forClass(String.class);\r\nverify(mock, times(2)).oneArg(argument.capture());\r\nassertThat(argument.getAllValues()).isEqualTo(2); // fail with mockito 2\r\n```\r\n\r\nThe current behavior (Mockito 2.1 - 2.3.3) of `NumberedInvocationChecker` clears already verified interactions, before verifying the remaining interactions so the new argument captor is not populated with previous values. Which is akward if the times value is different that the lit size.", "NaN"], ["821", "Fixes #820 ReturnsArgAt to handle returning vararg as arrays", "Brice Dutheil", "bric3", "01/06/17, 11:14:49 AM", "Attempt at fixing #820\r\n\r\nBasically it makes the ReturnsArgumentAt answer a bit more smart about varargs. But I'm not satisfied with the fix yet.", "NaN"], ["823", "Only resolve instrumented method after validating that an instance is\u2026", "Rafael Winterhalter", "raphw", "12/15/16, 10:16:59 AM", "This is both a performance improvement and a way of ensuring that no stack overflow error occurs upon looking up a `Method` instance which requires using a `HashMap` which causes an infitite loop upon mocking the hash map type. Fixes #818.", "NaN"], ["826", "Introduce validable answers for early validation of stubbing", "Brice Dutheil", "bric3", "12/19/16, 01:35:03 PM", "## Overview\r\n\r\nCustom Answers are now more robust - users can add add validation logic to the Answer implementation. It can validate the return type early, during stubbing in test, rather than fail late, during execution of code under test. Mockito team uses this API behind the hood for all custom implementations of Answer interface. Now advanced users can leverage this new API, too!\r\n\r\n```java\r\nclass MyCustomAnswer implements Answer, ValidableAnswer { // <-- note extra \"ValidableAnswer\" interface\r\n  public Object answer(InvocationOnMock invocation) {\r\n    // answer implementation\r\n  }\r\n\r\n  public void validateFor(InvocationOnMock invocation) {\r\n    // throw MockitoException if answer cannot be applied to given invocation\r\n  }\r\n}\r\n\r\n``` \r\n\r\n## Implementation\r\n\r\nWhile trying to fix #820 / #821, I noticed that `AnswersValidator` knew too much about other answers. To fix the design issue I propose the following design :\r\n\r\n* Introduce `ValidableAnswer` in public API which is a single method interface that doesn't extends `Answer`.\r\n* Each answer that wants to be validated hence implement this interface\r\n\r\nBenefit, reduced visibility of some methods in these answers. Each new answer that want to be validated can just by implementing the new contract.\r\n\r\nValidating returned value of a mock's default answer had to be handled differently.", "NaN"], ["827", "Test for verification listeners test can introduces bogus erro in other test cases.", "Brice Dutheil", "bric3", "12/16/16, 09:32:19 AM", "The following test (org.mockitousage.debugging.VerificationListenerCallBackTest#should_not_call_listener_when_verify_was_called_incorrectly) was causing non wanted exception in mockito\r\n\r\n```\r\norg.mockitousage.misuse.CleaningUpPotentialStubbingTest > shouldResetOngoingStubbingOnInOrder FAILED\r\n    org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue: \r\n    'onVerification' is a *void method* and it *cannot* be stubbed with a *return value*!\r\n    Voids are usually stubbed with Throwables:\r\n        doThrow(exception).when(mock).someVoidMethod();\r\n    ***\r\n    If you're unsure why you're getting above error read on.\r\n    Due to the nature of the syntax above problem might occur because:\r\n    1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version.\r\n    2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods.\r\n    3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \r\n       - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\r\n    4. Mocking methods declared on non-public parent classes is not supported.\r\n        at org.mockito.internal.exceptions.Reporter.cannotStubVoidMethodWithAReturnValue(Reporter.java:448)\r\n        at org.mockito.internal.stubbing.answers.AnswersValidator.validateReturnValue(AnswersValidator.java:72)\r\n        at org.mockito.internal.stubbing.answers.AnswersValidator.validate(AnswersValidator.java:29)\r\n        at org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(InvocationContainerImpl.java:63)\r\n        at org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(InvocationContainerImpl.java:49)\r\n        at org.mockito.internal.stubbing.OngoingStubbingImpl.thenAnswer(OngoingStubbingImpl.java:28)\r\n        at org.mockito.internal.stubbing.BaseStubbing.thenReturn(BaseStubbing.java:16)\r\n        at org.mockitousage.misuse.CleaningUpPotentialStubbingTest.assertOngoingStubbingIsReset(CleaningUpPotentialStubbingTest.java:50)\r\n        at org.mockitousage.misuse.CleaningUpPotentialStubbingTest.shouldResetOngoingStubbingOnInOrder(CleaningUpPotentialStubbingTest.java:36)\r\norg.mockitousage.misuse.CleaningUpPotentialStubbingTest > shouldResetOngoingStubbingOnVerify FAILED\r\n    org.mockito.exceptions.misusing.CannotStubVoidMethodWithReturnValue: \r\n    'onVerification' is a *void method* and it *cannot* be stubbed with a *return value*!\r\n    Voids are usually stubbed with Throwables:\r\n        doThrow(exception).when(mock).someVoidMethod();\r\n    ***\r\n    If you're unsure why you're getting above error read on.\r\n    Due to the nature of the syntax above problem might occur because:\r\n    1. The method you are trying to stub is *overloaded*. Make sure you are calling the right overloaded version.\r\n    2. Somewhere in your test you are stubbing *final methods*. Sorry, Mockito does not verify/stub final methods.\r\n    3. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \r\n       - with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\r\n    4. Mocking methods declared on non-public parent classes is not supported.\r\n        at org.mockito.internal.exceptions.Reporter.cannotStubVoidMethodWithAReturnValue(Reporter.java:448)\r\n        at org.mockito.internal.stubbing.answers.AnswersValidator.validateReturnValue(AnswersValidator.java:72)\r\n        at org.mockito.internal.stubbing.answers.AnswersValidator.validate(AnswersValidator.java:29)\r\n        at org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(InvocationContainerImpl.java:63)\r\n        at org.mockito.internal.stubbing.InvocationContainerImpl.addAnswer(InvocationContainerImpl.java:49)\r\n        at org.mockito.internal.stubbing.OngoingStubbingImpl.thenAnswer(OngoingStubbingImpl.java:28)\r\n        at org.mockito.internal.stubbing.BaseStubbing.thenReturn(BaseStubbing.java:16)\r\n        at org.mockitousage.misuse.CleaningUpPotentialStubbingTest.assertOngoingStubbingIsReset(CleaningUpPotentialStubbingTest.java:50)\r\n        at org.mockitousage.misuse.CleaningUpPotentialStubbingTest.shouldResetOngoingStubbingOnVerify(CleaningUpPotentialStubbingTest.java:28)\r\n\r\n```\r\n\r\n\r\nThe issue is that the mentionned test used a mock to create a listener for a test, but forgot to remove it. So on a next interaction with a mock, the listener was called, as such the last interaction is `void onVerification`, so the answer could not be validated.\r\n\r\nThe case is easy to reproduce :\r\n\r\n```java\r\ninterface Foo {\r\n    String nonVoid(String param);\r\n    void doSomething(String param);\r\n}\r\n@Test\r\npublic void should_not_call_listener_when_verify_was_called_incorrectly() {\r\n    //when\r\n    Foo foo = null;\r\n    VerificationListener mockListener = mock(VerificationListener.class);\r\n    Mockito.framework().addListener(mockListener);\r\n    try {\r\n        verify(foo).nonVoid(\"\");\r\n        fail(\"Exception expected.\");\r\n    } catch (NullInsteadOfMockException expected) {\r\n        //then\r\n        verify(mockListener, never()).onVerification(any(VerificationEvent.class))\r\n    }\r\n    // Mockito.framework().removeListener(mockListener); // fix\r\n\r\n    // done in CleaningUpPotentialStubbingTest\r\n    try {\r\n        when(null).thenReturn(\"anything\"); // throws instead CannotStubVoidMethodWithReturnValue\r\n        Assertions.fail(\"expected\");\r\n    } catch (MissingMethodInvocationException e) {} \r\n}\r\n```\r\n\r\nGiven the conditions to reproduce the bug I'd say we can keep the code that way.", "NaN"], ["829", "Update to build scan plugin 1.3", "Rus Hart", "rhart", "12/16/16, 11:24:28 AM", "Upgrade the build scan plugin to take advantage of new features, specifically the ability to add metadata to the build scan.\r\n\r\nUse the travis-ci build scan recipe to add meta data about the Travis CI environment\r\n\r\nUse the git-commit build scan recipe to add meta data about the Git commit ID", "NaN"], ["830", "Improves exception message in case a matcher is used for a primitive parameter", "Brice Dutheil", "bric3", "12/17/16, 04:32:31 PM", "This should help for cases like #822 \r\n\r\nNPE can be raised by the JVM on the callsite of a matcher returning object like `any()`.\r\nThe thing is that the JVM does several thing like to allows a type to match a signature like `<T> T any()`, type inference with Java 8, cast and unboxing. However `any()` can only return `null` so the JVM raises an NPE on the cast opcode. Of course the problem isn't new but more possible due to Java 8 flexibility. That's why Mockito had for a long time the primitive.\r\n\r\nWhen mockito is used with the junit runner or the junit rule there's a `InvalidUseOfMatchersException` raised **after** the NPE with a message about misplaced matchers. This exception is raised because the matchers were not consumed by the mock since the NPE is raised first. So this exception is correct and can help the neophyte to discover the primitive variant like `anyInt()`.", "NaN"], ["831", "Test clean up according to discussions for RememberingListeners", "Jakob J\u00f3nasson", "kobbikobb", "12/20/16, 01:23:13 PM", "According to issue @719 we wanted to clean up the tests for RememberingListeners.\r\n\r\nThe tests should follow the same style and conventions.\r\nSet up should not contain variables used by all the tests.\r\n\r\nWe previously had another PR for this in #825. That build was failing for some reason not obvious and had 1 merge commit that we wanted to remove. In an attempt to rebase and reset the history github lost the connection to the remote fork. Instead of spending time investigating I just created a new PR.", "NaN"], ["832", "Fixed problem with publication", "Szczepan Faber", "mockitoguy", "12/18/16, 04:26:42 AM", "- stopped publishing android module to main repo for now\r\n- added project description, required by bintray", "NaN"], ["834", "Release automation fixes", "Szczepan Faber", "mockitoguy", "12/19/16, 12:42:00 AM", "- made the release easier to test (slightly ;)\r\n- stopped pushing mockito-core to maven central automatically (until we stabilize the automation after changing it to support multi-module releases)\r\n- bumped bintray plugin", "NaN"], ["835", "Publication fixes - workaround for Bintray plugin/Gradle bug", "Szczepan Faber", "mockitoguy", "12/19/16, 03:06:16 AM", "The previous workaround did not quite work.\r\n\r\n - mockito-core publishes automatically, does not sync to central automatically (disabled temporarily)\r\n - mockito-android (empty jar) publishes automatically to Bintray 'test' repo\r", "NaN"], ["836", "Main jar automatically publishes to central", "Szczepan Faber", "mockitoguy", "12/19/16, 05:22:07 PM", "2.3.10 was correctly published, we're ready to pull the trigger and make mockito-core autopublish again. This change will not trigger publication because it does not change the mockito jar/pom in any way. However, the next version (2.3.11) will go automatically to central (only mockito-core, mockito-android will be pushed to 'test' repo in Bintray).\r", "NaN"], ["837", "Disabled maven central sync", "Szczepan Faber", "mockitoguy", "12/20/16, 05:30:26 AM", "I need to investigate:\r\n - release of 2.3.7 to central\r\n - errors logging in to oss.sonatype and syncing from Bintray\r\n\r\nI suspect that maven central sync does not work at the moment, anyway due to login / credentials problem.\r\n\r", "NaN"], ["839", "Fixes #838 : Adds a matches(Pattern)", "Brice Dutheil", "bric3", "12/22/16, 01:58:07 PM", "Following discussion in #838 it is sensible to add a mockito matcher that can take a `Pattern` as an argument.\r\n\r\nThe usage is the same as `matches(String)`.\r\n\r\n```java\r\nwhen(mock.oneArg(matches(Pattern.compile(\"[a-z]+\\\\d\\\\d\")))).thenReturn(...);\r\n```\r\n\r\nAlthough it allows to build more complex regex, especially with regular expression flags.", "NaN"], ["842", "Added missing Javadoc and few other tidy-ups", "Szczepan Faber", "mockitoguy", "12/23/16, 11:40:29 PM", "1. No API / no behavior changes.\r\n2. Publicly visible changes:\r\n  - Added missing Javadoc and updated an existing one for MockitoException and MockitoAssertionError classes\r\n3. Remaining changes, refactoring:\r\n - Rename job for consistency\r\n - Removed some unnecessary code\r\n - Made the tests more stable", "NaN"], ["843", "JUnit rule strictness can be tweaked per test method", "Szczepan Faber", "mockitoguy", "12/28/16, 08:05:55 AM", "See the design and rationale at #840\r\n\r\nPlease review!", "NaN"], ["844", "Automatically publish main jar to central", "Szczepan Faber", "mockitoguy", "12/26/16, 05:52:40 AM", "I'm tired of doing it manually from the Bintray web interface.\r\n\r\nNote that this does not make mockito-android published automatically.", "NaN"], ["847", "Rename compiled MockMethodDispatcher class so that it works with Robolectric", "Rafael Winterhalter", "raphw", "12/27/16, 05:49:01 PM", "Adresses #845.\r\n\r", "NaN"], ["850", "Stopped publishing java source inside main jar", "Szczepan Faber", "mockitoguy", "12/27/16, 08:10:12 PM", "Publishing java source inside the main jar does not make sense in modern world of declarative dependency management:\r\n - we didn't hear from the community that keeping the sources inside jar is useful\r\n - modern IDEs and dependency management automatically pulls sources\r\n - the feature was originally needed (2008) to help users that check in jars into VCS and do not use modern dependency management\r\n - keeping source code in main jar is very unusual and makes the jar bigger\r\n\r\nBumped minor version because the change is relatively visible", "NaN"], ["852", "Update Byte Buddy to support recent Java 9 builds", "Rafael Winterhalter", "raphw", "12/27/16, 02:41:12 PM", "The most recent version of Byte Buddy falls back on `sun.misc.Unsafe` if accessible reflection is forbidden what is required for injecting classes into class loaders. As we already rely on unsafe for invocation of instances without calling a constructor, this is no further limitation to the applicability of Mockito.", "NaN"], ["854", "Mockito JUnit Runner supports strict stubbing", "Szczepan Faber", "mockitoguy", "01/02/17, 12:04:27 AM", "Background:\r\n\r\n- Mockito \"strictness\" is explained in #769 \r\n- Since 2.3.x Mockito JUnit Rules already provide opt-in \"strict stubbing\" capability, [see the javadoc](https://static.javadoc.io/org.mockito/mockito-core/2.4.5/org/mockito/junit/MockitoRule.html#strictness(org.mockito.quality.Strictness)).\r\n\r\nThis change adds new opt-in \"strict stubbing\" support for Mockito JUnit Runner. This behavior is tentatively planned to be the default in Mockito v3. Example usage:\r\n\r\n```java\r\n//Note \"StrictStubs\" inner class:\r\n@RunWith(MockitoJUnitRunner.StrictStubs.class)\r\npublic class ExampleTest {\r\n    // ...\r\n}      \r\n```\r\n\r\nThe behavior added by the StrictStubs runner is documented in the [javadoc](https://static.javadoc.io/org.mockito/mockito-core/2.4.5/org/mockito/junit/MockitoRule.html#strictness(org.mockito.quality.Strictness)). See also Javadoc improvements in code changes for this PR. The general direction of Mockito \"strictness\" is documented in #769.", "NaN"], ["858", "Safeguard for MockitoListener API", "Szczepan Faber", "mockitoguy", "01/02/17, 12:46:20 AM", "Reminds user if he forgets about \"removeListener()\" when working with [MockitoListener API](https://static.javadoc.io/org.mockito/mockito-core/2.5.0/org/mockito/MockitoFramework.html#addListener(org.mockito.listeners.MockitoListener)).\r\n\r\n- Added a safeguard that reminds users to clean up MockitoListeners via removeListener() method. The implementation is very simple, checking if the type of the listener is already added. I found out about this problem when working on strict stubbing support without JUnit runner.\r\n- This change makes MockitoListener API safer. It's easy to leak state which we have encountered in our own test suite.\r\n- If we encounter legit use cases for adding the same listener type, we can remove the safeguard or updated it\r\n\r\nThe PR also contains a couple of refactorings and tidy-ups. I hope it's ok.", "NaN"], ["861", "Backport 'release/2.x' changes to master (20161231) + fix for #860", "Marcin Zaj\u0105czkowski", "szpak", "01/01/17, 11:00:51 PM", "Backport 'release/2.x' changes to master + the fix for #860.", "NaN"], ["864", "Updated to Byte Buddy 1.6.0", "Rafael Winterhalter", "raphw", "01/02/17, 04:44:34 PM", "Updated Byte Buddy, several performance and API improvements. Also with much better Android support.", "NaN"], ["865", "New strict stubbing API - MockitoSession", "Szczepan Faber", "mockitoguy", "01/29/17, 04:51:58 AM", "See proposed design at #857\r\n\r\nThe code is reviewable, especially new public API. Please give feedback! More work is pending.\r\n\r\nCurrent status:\r\n\r\n- [x]  address @bric3 feedback\r\n  - [x] getter\r\n  - [x] javadoc\r\n- [x] review documentation for consistency\r\n  - [x] Mockito.session()\r\n  - [x] MockitoSessionBuilder\r\n  - [x] Strictness\r\n  - [x] MockitoHint\r\n  - [x] PotentialStubbingProblem\r\n  - [x] UnnecessaryStubbingException\r\n  - [x] MockitoJUnitRunner and subclasses\r\n  - [x] MockitoSession\r\n  - [x] MockitoRule\r\n- [x] Add / update mentions in the main Mockito class\r\n- [x] add validate mockito usage (should be very easy)\r\n- [x] Try making rules/runner use the session. They already reuse the code, they just don't use the API directly. Created #898 to track this work.\r\n- [x] Address @TimvdLippe feedback\r\n- [x] Create concurrent test (multiple sessions active in different threads)\r\n- [x] (non-code change, not blocking merge) GitHub tickets linked from source code should be better documented #769, #384. Alternatively, create ticket for tracking.", "NaN"], ["867", "Fixes #866 should not throw NPE, when custom Exception fillInStackTrace returns null", "wuwen", "wuwen5", "01/04/17, 04:58:43 PM", "fixes #866.", "NaN"], ["868", "Fixes #860, jacaco synthetic fields are not anymore final in 0.7.8", "Brice Dutheil", "bric3", "01/04/17, 03:02:15 PM", "Fixes #860 \r\n\r\nThis internal assumed JaCoCo fields will always be `static final`, obviously not. JaCoCo 0.7.8 changed that. The simple fix was to make the source field _accessible_ instead of skipping this field.\r\n\r\nHence removing the test exclusion.", "NaN"], ["870", "Remove redundant defaultAnswer(RETURNS_DEFAULTS)", "Johnny Lim", "izeye", "01/10/17, 01:16:17 PM", "`withSettings()` invokes `defaultAnswer(RETURNS_DEFAULTS)` as follows:\r\n\r\n```\r\n    public static MockSettings withSettings() {\r\n        return new MockSettingsImpl().defaultAnswer(RETURNS_DEFAULTS);\r\n    }\r\n```\r\n\r\nso, invoking it again is redundant.\r\n\r\nThis PR simply removes the redundant invocation.\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["872", "Prepare Android library for publication and bump version to 2.6.0", "Tim van der Lippe", "TimvdLippe", "01/12/17, 12:38:14 PM", "References first step of #848", "NaN"], ["875", "Update Byte Buddy and enable injecting loading strategy for Android", "Rafael Winterhalter", "raphw", "01/11/17, 08:23:55 AM", "This enables Byte Buddy's new injection strategy for Android which loads types within a target class loader instead of creating a new one. Also, this updates Byte Buddy with a few bug fixes.", "NaN"], ["880", "Fixes #879: ArgumentMatchers javadoc grammar improvement", "Allon Murienik", "mureinik", "01/12/17, 08:45:03 PM", "Fixed grammar issue in `ArgumentMatchers`:\r\n\r\n> This implementation is due static type safety imposed by java compiler.\r\n\r\nShould be:\r\n\r\n> This implementation is due to static type safety imposed by java compiler.\r\n\r\nThis PR fixes issue #879.", "NaN"], ["881", "Fixed #879: ArgumentMatchers grammar fix", "Allon Murienik", "mureinik", "01/13/17, 10:54:14 AM", "Cherry-pick PR #880 to the 2.x branch\r\n\r\nThis PR should fix issue #879 on this branch too.", "NaN"], ["884", "Fixes #882: Upgrade to Objenesis 2.5", "Allon Murienik", "mureinik", "01/15/17, 09:12:32 AM", "Upgrade to Objenesis 2.5 in order to properly support Java 9.\r\n\r\nChecks performed:\r\n- build succeed\r\n- unit tests pass\r\n- no major slowdown in unit tests was observed\r\n\r\nThis PR fixes issue #882.", "NaN"], ["885", "Spy annotation reports better error message if instance creation is impossible", "Brice Dutheil", "bric3", "01/23/17, 10:07:24 AM", "This simple piece of code prevents the `SpyAnnotationEngine` to try create a spy instance for a some inner private class with different set of modifiers.\r\n\r\nWhile preventing execution it reports slightly better error messages, before, some time the cause was `null` . This should fix #878 ", "NaN"], ["886", "Fixed build for external contributors", "Szczepan Faber", "mockitoguy", "01/15/17, 07:13:01 PM", "Moved the validation of env variables required for release to further release step. We don't need to assert the variables if the release is skipped.\r\n\r\nFixes #871\r\n\r\nMerge at will. Reordering those release steps is safe. Those steps do not impact the release process in any way. Removing those steps completely would not break the release. It would  just make it fail later VS fast, and would make the failure less readable. Hence, the validation steps are useful but reordering them does not impact the release.\r\n\r\nI tested it by running \"./gradlew release -PdryRun\". If you export the variables, you can actually use above to dry run the release.", "NaN"], ["887", "Fixes #882: Upgrade to Objenesis 2.5", "Allon Murienik", "mureinik", "01/15/17, 09:03:21 PM", "Upgrade to Objenesis 2.5 in order to properly support Java 9.\r\n\r\nCherry picked from master commit d1faf7b82c9e0823ebba9b9ded6c6b179ba57102, fixed conflicts and verified.\r\n\r\nThis PR fixes #882 .", "NaN"], ["891", "Update to Byte Buddy 1.6.4: Fixes bridge method resolution for generic types", "Rafael Winterhalter", "raphw", "01/19/17, 05:06:30 PM", "Fixes #874.", "NaN"], ["893", "Add detection for Android environments and give warnings if used incorrectly. Corrected documentation.", "Rafael Winterhalter", "raphw", "02/17/17, 04:06:28 PM", "The documentation gave an incorrect configuration example. Also, warnings were added for using Android on a non-Android environment.", "NaN"], ["896", "Clarify documentation for consecutive stubbing", "Dimos Raptis", "dimosr", "01/21/17, 12:29:26 PM", "Fixes #895\r\n\r\nAs of now, the documentation does not clarify the difference of behaviour between chaining multiple .thenReturn() statements and using multiple when/thenReturn statements, when someone attempts to perform consecutive stubbing.\r\n\r\nI added a warning/clarification in the documentation with a corresponding example, so that it's more clear (especially for new users of Mockito).", "NaN"], ["897", "CleansEmpty value returns empty arrays", "Brice Dutheil", "bric3", "01/23/17, 01:48:12 PM", "Fixes #876 and do a bit more cleanup\r\n\r\n* Moves returning empty array from `ReturnsMoreEmtpyValues` to `ReturnsEmptyValues`\r\n* Cleans up javadoc\r\n* Removes reflection for Java8 types (implementation and tests)\r\n\r\nBest to review commit by commit.", "NaN"], ["902", "Fix TypeCache dead lock", "Rafael Winterhalter", "raphw", "01/23/17, 01:47:42 PM", "I could trace the problem to more eager resolution of types in Java u31 upon loading where concurrent mock creation with locking on the class level causes a dead lock. This can happen in other VM implementations but can be solved with a more granular lock on our type cache.\r\n\r\nThis fixes https://github.com/mockito/mockito/issues/892.", "NaN"], ["905", "Fixes #814 : A elements were missing the name attribute", "Brice Dutheil", "bric3", "01/23/17, 02:47:49 PM", "Meaningful links probably never worked as expected.\r\n\r\nThe `A` elements were missing the `name` attribute, so the browser couldn't find the matching part of the document.\r\n\r\nFor reference : [5.9.8 Navigating to a fragment identifier](http://www.w3.org/html/wg/drafts/html/master/browsers.html#scroll-to-fragid)\r\n\r\n> For HTML documents (and the text/html MIME type), the following processing model must be followed to determine what the indicated part of the document is.\r\n> \r\n> 1. Parse the URL, and let fragid be the <fragment> component of the URL.\r\n> 2. If fragid is the empty string, then the indicated part of the document is the top of the document.\r\n> 3. If there is an element in the DOM that has an ID exactly equal to fragid, then the first such element in tree order is the indicated part of the document; stop the algorithm here.\r\n> 4. If there is an a element in the DOM that has a name attribute whose value is exactly equal to fragid, then the first such element in tree order is the indicated part of the document; stop the algorithm here.\r\n> 5. Otherwise, there is no indicated part of the document.", "NaN"], ["907", "Unified all number of invocations checker in NumberOfInvocationsChecker", "Christian Schwarz", "ChristianSchwarz", "01/27/17, 09:58:31 PM", "fixes #426\r\n\r\nThis PR unifies the functionality of `NonGreedyNumberOfInvocationsChecker`, `NumberOfInvocationsCheckerInOrder `and `NumberOfInvocationsChecker `in static methods of the type `NumberOfInvocationsChecker`. \r\n\r\nThis saves ~50 lines of code and increases readability on the call sides.", "NaN"], ["908", "Simplified the creation of ArgumentsAreDifferent-Exceptions.", "Christian Schwarz", "ChristianSchwarz", "02/21/17, 08:38:51 PM", "relates to #426 \r\n\r\nThis PR simplifies the creation of ArgumentsAreDifferent-Exceptions. Saving 2 classes and ~40 lines of code.", "NaN"], ["909", "Upgrade Gradle Wrapper to 3.3", "Marcin Zaj\u0105czkowski", "szpak", "01/27/17, 10:25:55 AM", "Also removed the wrapper section in build.gradle.\r\nAn upgrade is with just a command line switch, e.g.:\r\n./gradlew wrapper --gradle-version=3.4-rc-1\r\n\r\nIt seems to be ~10% faster on my machine. On Travis it varies...", "NaN"], ["912", "Small improvements", "Christian Schwarz", "ChristianSchwarz", "02/06/17, 12:43:19 PM", "This PR fixes some compile errors and removes dead code:\r\n - compile error: duplicate org.mockito.package-info.java in _src/main/java_ and _src/test/java_\r\n - ~~compile error: char enconding error in MatchersTest -> relates to #765~~\r\n - dead code: Constructors -> relates to #904\r\n\r\n\r\n\r", "NaN"], ["914", "Refactored RemoveFirstLine to a static utility class.", "Christian Schwarz", "ChristianSchwarz", "01/31/17, 04:42:27 PM", "Relates to #426 \r\n\r\nRefactored `RemoveFirstLine` to a static utility class.\r\n\r\nI would like to unifiy `RemoveFirstLine`, `Decamelizer` and `StringJoiner` to a new type `StringUtil`. They all manipulate strings and contain only a few methods that are not worth to live in a dedicated classes, any thoughts?", "NaN"], ["916", "Improved release automation documentation", "Szczepan Faber", "mockitoguy", "01/30/17, 09:52:15 PM", "I plan to improve the release automation so that it's easier to troubleshoot. For now, added more docs.\r\n\r\nDriven by problem described at #915\r", "NaN"], ["920", "Added subproject for configuration-free inline mock making.", "Rafael Winterhalter", "raphw", "02/04/17, 12:01:17 PM", "Added a preconfiguration for using the inline mock maker as a convenience artifact that can be included instead of creating the plugin file. This is very helpful when creating multi-module projects where the mock maker file has to repeated many times.\r\n\r\nOnce we choose to change the mock maker to be default or enable programmatic access, we can decide to drop this artifact similar to `mockito-all` from version one.", "NaN"], ["923", "SmartPrinterTest toStirng() calls", "Allon Murienik", "mureinik", "02/02/17, 07:00:40 PM", "Calling `toStirng()` on a string just returns the same instance, making\r\nthis call quite useless.\r\nThis patch removes those calls in order to clean up the code a bit.\r", "NaN"], ["924", "Deleted dead code", "Szczepan Faber", "mockitoguy", "02/03/17, 02:03:00 PM", "buildSrc directory and the file it holds is no longer needed given that JavadocExclude class was removed some time ago. We forgot to delete this directory.", "NaN"], ["926", "Remove string concatination inside an append call", "Allon Murienik", "mureinik", "02/03/17, 03:42:55 PM", "Concatinating Strings creates a temporary StringBuilder, which is then\r\nconverted to a String. Having such an argument inside a\r\nStringBuilder#append call thus pointless. Using a chained append call\r\nwill have the exact same outcome, and would profit a slight [probably\r\nunnoticeable in this instance] performance benefit.", "NaN"], ["928", "Fix whitespace issues throughout the code", "Allon Murienik", "mureinik", "02/05/17, 08:09:20 PM", "This patch applies de-facto standards the codebsae currently has regarding whitespaces on all the java files in the project:\r\n\r\n- Newlines were added at the end of files that didn't have them.\r\n- Whitespaces at the end of source lines were removed.\r\n\r\nAll these changes were done by running `sed` on the codebase. The exact details can be found in the individual commit messages.", "NaN"], ["931", "Fixes #929: Move the resources directory to src/main", "Tsuyoshi Murakami", "tmurakami", "02/07/17, 06:09:26 PM", "Moved the resources directory to src/main so that the MockMaker file is included in mockito-inline.jar.\r\nAlso added two tests to verify plugin-type is inline.\r\n\r\nThis PR fixes #929.", "NaN"], ["932", "Checkstyle conf. to enforce whitespace rules", "Allon Murienik", "mureinik", "02/17/17, 04:04:14 PM", "After PR #928 cleaned up some whitespace issues in the codebase (see\r\ndetails there), this patch adds the checkstyle plugin to build to\r\nenforce the standard established there:\r\n1. A line may not end with trailing whitespaces\r\n2. A file must end with the newline character\r\n\r\nNote that this PR by no means intends to provide a full checkstyle configuration to the project.\r\nIt merely introduces the framework and two basic checks discussed in PR #928. Additional patches could easily add (or remove) additional checks as the dev community sees fit.\r\n\r\nUsage note:\r\nWith this change applied, checkstyle would be run as part fo the gradle build. If a line in a `.java` source file ends with trailing whitespaces, the build will fail and an error message would be printed to the console. Additionally, an HTML report with all the errors would be generated. \r\n\r\nE.g.:\r\n\r\n```\r\n[ant:checkstyle] /home/amureini/src/git/mockito/subprojects/android/src/main/java/org/mockito/android/internal/creation/AndroidByteBuddyMockMaker.java:14: Line has trailing spaces.\r\n:android:checkstyleMain FAILED\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':android:checkstyleMain'.\r\n> Checkstyle rule violations were found. See the report at: file:///home/amureini/src/git/mockito/subprojects/android/build/reports/checkstyle/main.html\r\n\r\n* Try:\r\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\r\n\r\nBUILD FAILED\r\n```\r\n\r\nFixes #903", "NaN"], ["933", "Support for return type 'Void' in DoesNothingAnswer", "Christian Schwarz", "ChristianSchwarz", "02/07/17, 03:27:32 PM", "fixes #927 \r\nThis PR allows to use `doNothing(..)` for methods with return type `java.lang.Void` like void-methods.  \r\n\r\nTo solve this `InvocationInfo.isVoid()` checks now the return type for the pseudo-type of the keyword `void` or `Void`.", "NaN"], ["934", "Fix JavaDoc generation on recent JDK 8 builds", "Tim van der Lippe", "TimvdLippe", "02/08/17, 10:10:43 AM", "Syntax was a bit tricky, but this appears to generate the correct javadoc.options file for me.\r\n\r\nFixes #894", "NaN"], ["935", "New feature - enable mocking using constructor arguments", "Allon Murienik", "mureinik", "03/05/17, 11:21:10 PM", "## Motivation and design - see #685\r\n\r\nTo quote the requirement (see in-depth design in #685):\r\n> We already support spying on abstract classes by allowing\r\nparameterless constructor. However, there is no support for\r\nconstructor parameters.\r\nThis has been asked about long time ago. Mockito API is not robust\r\nenough if it supports mocking with constructor but not when one has\r\nany constructor parameters.\r\n\r\nThis patch enhances the `MockSettings#useConstrctor()` method (as suggested in the alternative API comment in the issue) and adds\r\noptional ellipsis arguments that are passed to the constructor.\r\n\r\nThe patch streamlines the creation of mocks via constructors to a\r\nsingle flow, where using a no-arg constructor or an enclosing class\r\nare just private cases of this flow, and don't require their own\r\nspecial treatment.", "NaN"], ["938", "Fix build error for mockito-android", "Tsuyoshi Murakami", "tmurakami", "02/08/17, 07:37:03 PM", "Fixed build error for `mockito-android` subproject.\r\nRelated to #922.\r\n\r\nBy this PR\r\n- mockito-android will be unusable in Android 2.1 and below\r\n- Android SDK is required for development\r\n\r\nThe workaround for #922 is effective only on Android 2.2 and later.\r\nBecause `AndroidJUnitRunner` can only be used with Android 2.2+.\r\n\r\nAccording to [Android Dashboard](https://developer.android.com/about/dashboards/index.html), Android 2.1 and below seems to be ~1.0%.\r\n\r\nPlease note that it will not be possible to build `mockito-android` project on Travis CI because `travis.yml` has not been modified.\r\n[Here](https://docs.travis-ci.com/user/languages/android/) is the guide to building an Android project in Travis CI.\r", "NaN"], ["942", "Allow spying on interfaces so that it is convenient to work with Java 8 default methods", "Ben Yu", "fluentfuture", "02/28/17, 05:34:09 AM", "Fixes #680 \r", "NaN"], ["953", "Fix Javadocs on MockitoRule.java to correct an error on its usage.", "Stuart Blair", "stuartblair", "02/16/17, 09:12:09 PM", "Fixing the Javadoc to reflect the API for MockitoJUnitRule\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [ ] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["954", "Remove Gradle 5 depracation warning", "Marcin Zaj\u0105czkowski", "szpak", "02/17/17, 01:40:30 PM", "Pretty visible in master where the whole stacktrace is printed\r\n\r\nhttps://travis-ci.org/mockito/mockito/jobs/202440304#L357\r", "NaN"], ["955", "Display release warning only when needed", "Marcin Zaj\u0105czkowski", "szpak", "02/17/17, 06:32:22 PM", "To do not terrify the users when release is not needed.\r\n\r\nhttps://travis-ci.org/mockito/mockito/jobs/202409057#L459", "NaN"], ["959", "Fix broken build", "Allon Murienik", "mureinik", "02/19/17, 07:33:00 PM", "Commit da4e42 introduced a static import from the non-existent\r\n`org.mockito.internal.util.StringJoiner` (it exists only in the master\r\nbranch, not the release/2.x branch).\r\nThis patch fixes the build by correcting the import to reference\r\n`org.mockito.internal.util.StringUtil`.", "NaN"], ["966", "Add editor config to automatically adhere to code style guide", "Tim van der Lippe", "TimvdLippe", "02/28/17, 12:39:48 PM", "I have personally tested this by adding additional whitespace, hitting save and then verify that `git diff` does not show any changes.\r\n\r\nFixes #960", "NaN"], ["968", "Enabled local testing of release tools", "Szczepan Faber", "mockitoguy", "02/27/17, 09:15:28 PM", "- As requested by a contributor to release tools automation (https://github.com/mockito/mockito-release-tools/pull/14#issue-209252177) there is no easy way to end-to-end test release notes generation. This commit, along with some changes and documentation to the 'mockito-release-tools' repository will enable it.\r\n- Configured local maven repository to be the 1st repo in the list. This way, we can locally publish release tools and test it out with Mockito repo.\r\n\r\nFor motivation, see https://github.com/mockito/mockito-release-tools/issues/15", "NaN"], ["972", "Verifies #688: Acceptance test to prevent future regression", "Jesse Englert", "jpenglert", "03/28/17, 10:46:11 PM", "Added an acceptance test to verify #688 \r", "NaN"], ["975", "Corrected a comment in exceptions package-info", "Xin Liu", "L-KID", "03/18/17, 04:35:57 PM", "In the description comment of exceptions package-info.java, it wrote as 'Mockito configuration utilities', which should be 'Mockito exceptions utilities'.", "NaN"], ["979", "Fixes #974: Fix to get correct stubbing location with inline mocking", "Tsuyoshi Murakami", "tmurakami", "03/19/17, 05:40:43 PM", "- Fix StackTraceFilter to support inline mocking\r\n- Add one test to StackTraceFilterTest\r\n- Add StubbingLocationTest into inline subproject\r\n\r\nThis PR fixes #974.\r", "NaN"], ["980", "Fixes #976: Resolve ambiguous constructors", "Allon Murienik", "mureinik", "03/19/17, 02:03:28 PM", "With the current code (introduced in Mockito 2.7.14 by commit 6a82c03), calling `MockSettings.useConstructor` with an argument list that would be applicable to more than one constructor would fail with an `org.mockito.internal.creation.instance.InstantiationException`.\r\n\r\nThis behavior, however, is suboptimal, as described in issue #976, as it makes `useConstructor` less robust than the Java compiler, which is able to resolve such ambiguities.\r\nWith this patch, Mockito will attempt to match the constructor with the most specific parameter types. A constructor X is considered more specific than a constructor Y if:\r\n\r\n1. They are both applicable to the given argument list\r\n2. Constructor X has at least one parameter which is a further specialization of the corresponding parameter of constructor Y (i.e. `paramX.isAssignableFrom(paramY)`).\r\n3. Constructor Y has no parameter which is a further specialization of the corresponding parameter of constructor X, as defined above.\r\n\r\nE.g., consider the following class:\r\n\r\n    public class SomeClass {\r\n        SomeClass(Object o) {}\r\n        SomeClass(String s) {}\r\n    }\r\n\r\nWithout this patch, calling\r\n\r\n    mock(SomeClass.class, withSettings().useConstructor(\"string!\"))\r\n\r\nwould fail. With this patch, such a call would invoke the `SomeClass(String)` constructor.\r\n\r\n\r\nAs noted above, this PR fixes issue #976.", "NaN"], ["983", "Break cyclical compile time dependency on hideRecursiveCall", null, "paulduffin", "03/09/17, 11:56:44 AM", "Fixes #982.", "NaN"], ["985", "Fixes #981: Update Javadoc about the 'mockito-inline' artifact", "Tsuyoshi Murakami", "tmurakami", "03/10/17, 11:52:38 AM", "This PR fixes #981.\r\n\r\nIn the Javadoc, I write that the first version of `mockito-inline` is `2.7.6`.\r\nThis artifact was actually offered in version `2.7.2`, but `2.7.5` or earlier it did not work due to the issue #929, so I write like that.\r", "NaN"], ["986", "Made CaturingMatcher threadsafe", "Alex Simkin", "SimY4", "05/31/17, 07:09:29 AM", "In my tests I faced two problems with current capturing matcher.\n1. It exposes its internal store through `#getAllValues()`.\n2. Internal data store in CapturingMatcher is not threadsafe. Exposing internal store when interraction with mocked object isn't finished may produce all kind of weird exceptions in tests.", "NaN"], ["994", "fix the broken link on 1357 line in Mockito.java", "Lu Liu", "Nirvanall", "03/22/17, 07:41:29 PM", "The link 'MockitoJUnitRunner.StrictStubs' in the 40th section in Javadoc [Mockito](https://static.javadoc.io/org.mockito/mockito-core/2.7.19/org/mockito/Mockito.html) interface is broken. I fixed it by changing \r\n`{@link MockitoJUnitRunner.StrictStubs} ` \r\nto \r\n `{@link MockitoJUnitRunner.StrictStubs.class} ` .", "NaN"], ["995", "verifyZeroInteractions guarantees zero interactions instead of just delegating to verifyNoMoreInteractions", "Federico Fissore", "ffissore", "05/10/17, 07:34:33 AM", "Fixes #989\r\n\r\n`verifyZeroInteractions` no longer delegates to `verifyNoMoreInteractions`\r\nInstead, it fetches the number of invocations made to the mock and checks if\r\nthey are zero, failing otherwise\r\n\r\nI'm not sure if the style of my code complies with mockito: please let me know what to change and where to look to make it more mockitoish", "NaN"], ["996", "Add explicit mention for code style check", "Tim van der Lippe", "TimvdLippe", "03/26/17, 03:16:27 PM", "To prevent confusion, let's include it in our CONTRIBUTING.md", "NaN"], ["999", "master branch: Fix JavaDoc generation on recent JDK 8 builds (#934)", "Allon Murienik", "mureinik", "03/22/17, 07:36:11 PM", "While *most* development should not be done on the `master` branch, it's still important to keep it in a state where it could be built successfully.\r\n\r\nThis PR cherry-picks @TimvdLippe 's fix that handles javadoc creation with new Java 8 build from the `release/2.x` branch to `master`.", "NaN"], ["1001", "Fix release notes badge", "Allon Murienik", "mureinik", "03/23/17, 09:40:59 AM", "GitHub doesn't seem to render images from URLs with spaces properly,\r\nbreaking the release notes badge.\r\nThis change encodes the URL, replacing the space with `%20` to make it\r\nrender properly.\r\n\r\n[ci skip]\r", "NaN"], ["1007", "Fix test failing with Java 9-ea+146+", "Marcin Zaj\u0105czkowski", "szpak", "03/24/17, 10:46:05 PM", "Stack trace in JDK part contains also module name:\r\n\r\n```\r\njava.lang.AssertionError: \r\nExpecting:\r\n \"[MockitoHint] 1. Unused -> at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\"\r\nto match pattern:\r\n \"\\[MockitoHint\\] 1\\. Unused \\-\\> at [\\w\\.]+\\.reflect\\.NativeMethodAccessorImpl\\.invoke0\\(.*Native Method\\)\"\r\n```\r\n\r\nThe new regexp handles both variants.", "NaN"], ["1008", "Sample usage of soft assertions", "Marcin Zaj\u0105czkowski", "szpak", "03/26/17, 05:46:53 PM", "Could be propagated by the way also in other similar places.", "NaN"], ["1009", "Clean up unused imports", "Allon Murienik", "mureinik", "03/25/17, 09:13:15 AM", "During development work, orphaned, unused, imports sometime get left\r\nbehind in the code. At best, these imports are just redundant. At\r\nworst, they introduce false dependencies in places there aren't\r\nsupposed to be any dependencies.\r\n\r\nThis patch removes all those unused imports and adds a Checkstyle\r\nmodule to verify no such redundant imports will be introduced in the\r\nfuture.", "NaN"], ["1010", "Bumped version to fix CI build", "Szczepan Faber", "mockitoguy", "03/29/17, 05:18:15 PM", "Manually bumped version to unstuck the release process. This should help and get Travis CI jobs back in shape. More details about the problem and our long term plan - see mailing list discussion: https://groups.google.com/forum/#!topic/mockito/TTMuY5KdbjU", "NaN"], ["1011", "Tidy-up in build automation", "Szczepan Faber", "mockitoguy", "03/31/17, 01:04:33 AM", "In preparation to fix #911 I needed to clean up some existing build logic that we no longer need.\r\n\r\n1. Removed unnecessary 'provided' configuration. Gradle 2.12 introduced 'compileOnly' configuration that can be used instead. This way, we can clean up our build script and avoid unnecessary build logic.\r\n2. Removed unnecessary manipulation of the IDEA ipr file. We can use built-in 'vcs' method to configure the version control system for the project. This way, the build logic is simpler.\r\n\r\nTesting done:\r\n- ran build, tests pass, jars are created, things look good\r\n- ran old build and new build, compared build dirs, eyeballed binaries and javadocs, seem good.\r\n- recreated idea configuration with \u201c./gradlew cleanIdea idea\u201d, loaded to IntelliJ, rebuilt project in IDEA, ran tests from all submodules, all good.\r\n- cleaned idea configuration with \u201c./gardlew cleanIdea\u201d, then loaded to IDEA using IntelliJ-own Gradle support", "NaN"], ["1012", "Do not suppress instrumentation exceptions", "Rafael Winterhalter", "raphw", "04/18/17, 06:37:11 AM", "Rather propagate them to mock maker that attempts instrumentation. Addresses #1005.", "NaN"], ["1016", "Fixes #991: Backport MockitoV1CompatibilityMatcher from 2.x to aid in\u2026", null, "paulduffin", "04/04/17, 09:27:31 PM", "Fixes #991: Backport MockitoV1CompatibilityMatcher from 2.x to aid in migration to 2.x\r\n\r\nThe 2.x version of ArgumentMatcher<T> differs quite\r\nsignificantly from the current version:\r\n1) It is an interface not a class and no longer extends\r\n   org.hamcrest.Matcher.\r\n2) Its main method is matches(T) not matches(Object).\r\n3) It uses the toString() method to construct a description and\r\n   not the describeTo(Description) method.\r\n\r\nThis class supports the following strategy for migrating\r\nimplementations of ArgumentMatcher from 1.10.19 to 2.x:\r\n1) First migrate to a 1.x version that has\r\n   MockitoV1CompatibilityMatcher change in it. That should be\r\n   relatively simple.\r\n2) Then modify all existing implementation of ArgumentMatcher\r\n   to extend MockitoV1CompatibilityMatcher.\r\n3) Switch to use a version of 2.x that contains this change.\r\n   Everything should compile as usual.\r\n4) Modify the classes that extend MockitoV1CompatibilityMatcher\r\n   to implement ArgumentMatcher interface directly.\r\n\r\nThe above strategy is overkill when migrating a small project\r\nthat can be updated atomically but it has proven to be a good\r\napproach when upgrading a large project spread across multiple\r\ngit repositories. This is added in part because of the\r\nexperience doing exactly that with the Android Open Source\r\nPlatform.\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [ x PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r", "NaN"], ["1018", "Enabled continuous delivery via robust mockito-release-tools project", "Szczepan Faber", "mockitoguy", "04/12/17, 03:04:28 AM", "- Continuous Delivery Pipeline 2.0 (#911) almost implemented!\r\n- Removed tons of release logic complexity, now all that is a part of general purpose 'mockito release tools' project.\r\n- The new release automation should be much easier to test.", "NaN"], ["1021", "Change release build to JDK 7 with binary compatibility for Java 6", "Marcin Zaj\u0105czkowski", "szpak", "04/07/17, 01:38:49 PM", "In order to fix problems with Java 6 builds (https://github.com/mockito/mockito-release-tools/issues/60) \r\nwe have discussed the possibility of using JDK 7 for building release artifacts (#1020). We can build release artifacts with JDK7 and use animal sniffer to detect Java 6 incompatibilities.\r\n\r\nThis PR contains:\r\n - new Gradle build plugin to use animal sniffer tool (the plugin is not used by default for faster builds)\r\n - removal of Java6 build from Travis\r\n - setup the sniffer to detect compatibility issues when building release artifacts on Travis", "NaN"], ["1022", "MatchersTest numeric literals", "Allon Murienik", "mureinik", "04/06/17, 02:49:37 PM", "Use numeric literals, which are more elegant, instead of casting int literals to other primitive types.", "NaN"], ["1023", "Fix broken link in Mockito javadoc", "Allon Murienik", "mureinik", "04/07/17, 02:37:45 PM", "Commit  6a82c030756a30932406d6b807e7ca34f20631e3 (included in Mockito 2.7.14) changed\r\n`MockSetting#useConstructor`'s signature to accept an `Object...` argument. While this change is backwards compatible (as calls can continue passing an empty argument list), it broke the javadoc\r\nreference to `useConstructor()` in Mockito's javadoc.", "NaN"], ["1025", "SmartPrinterTest toString() calls", "Allon Murienik", "mureinik", "04/08/17, 05:46:42 AM", "Calling `toString()` on a String object just returns the same object, making such calls useless in most cases.\r\n\r\nThis patch removes such calls from `SmartPrinterTest`, making the code a cleaner and easier to read.", "NaN"], ["1027", "Fix some issues reported by SonarQube", "Tim van der Lippe", "TimvdLippe", "04/30/17, 12:34:13 PM", "Colleague students ran SonarQube on Mockito. These were some easy fixes I was able to do, no extreme value. I will open an issue regarding a different and potentially more serious issue.", "NaN"], ["1030", "Fixed notable version", "Szczepan Faber", "mockitoguy", "04/12/17, 05:35:56 AM", "- 2.7.0 does not exist :)\r\n- this fixes the release automation issue [reported by Travis CI](https://travis-ci.org/mockito/mockito/jobs/221198113#L709)\r", "NaN"], ["1032", "Support for Kotlin suspending functions", "Roman Elizarov", "elizarov", "05/05/17, 12:36:00 PM", "Original user problem report:\r\nhttps://discuss.kotlinlang.org/t/verifying-suspending-functions-with-mockito-or-alternatives/2492\r\n\r\nThe crux of the problem is that Kotlin compiler adds additional synthetic parameter\r\nto suspending functions that is not visible in the source as explained in the design docs:\r\nhttps://github.com/Kotlin/kotlin-coroutines/blob/master/kotlin-coroutines-informal.md#continuation-passing-style\r\n\r\nExpanded test cases in this repo pass with this patch:\r\nhttps://github.com/elizarov/CoroutinesMockitoPlayground", "NaN"], ["1034", "Fixed typo in configuration", "Szczepan Faber", "mockitoguy", "04/13/17, 09:11:41 AM", "The notable release notes files belong to the same directory.", "NaN"], ["1035", "Fix NullPointerException in JUnit test runner when test fails early in initialization", null, "yyvess", "04/16/17, 01:40:09 PM", "On case of  `MockitoAnnotations.initMocks(target)`  throw any exception `this.target` still null.\r\nAs impact to throw a **NullPointerException on all next tests** on the method `DefaultInternalRunner.testFinished`.\r\n\r\nWhat append, the method testFinished is never call on case of any error on the initialization phase as impact that the listener is not cleanup.\r\nOn next tests the method testFinished will notify the previous listener that have not been unregistered.\r\n\r\nTo avoid this issue the mockitoListener must be remove if test fail and never started.\r\n\r\n> java.lang.NullPointerException \r\nat org.mockito.internal.junit.util.TestName.getTestName(TestName.java:15)\r\n\tat org.mockito.internal.junit.MismatchReportingTestListener.testFinished(MismatchReportingTestListener.java:33)\r\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.testFinished(DefaultInternalRunner.java:60)\r\n\tat org.junit.runner.notification.SynchronizedRunListener.testFinished(SynchronizedRunListener.java:56)\r\n`\r", "NaN"], ["1036", "Remove duplicated code", null, "yyvess", "04/13/17, 09:10:58 PM", "Remove class Decamelizer.decamelizeMatcher duplicated by StringUtil.decamelizeMatcher\r\nRemove class NumberOfInvocationsInOrderChecker duplicated by NumberOfInvocationsChecker.checkNumberOfInvocations\r\n\r", "NaN"], ["1038", "Fixed glitches with notable releases", "Szczepan Faber", "mockitoguy", "04/14/17, 03:45:12 PM", "Fixed a couple of glitches:\r\n - one of the notable versions was not published to Central. I don't plan to publish it to central because it was published to wrong Bintray package in the first place. It landed in \"mockito-development\" but it should land in \"mockito\".\r\n - fixed the use of extra property for notable releasing according to release tooling api (need to request the property from the root project).\r\n - consumed new version of release tools that contains host of internal improvements (mockito/mockito-release-tools#74)", "NaN"], ["1039", "Automated publishing in Bintray, documentation", "Szczepan Faber", "mockitoguy", "04/20/17, 05:43:25 AM", "Best to review commit by commit.\r\n\r\n1. Enabled automated publishing in Bintray. It does not yet automatically push notable versions to central (let's wait and see how things work before we do that).\r\n2. Added more documentation in the release build script", "NaN"], ["1040", "Fix javadoc issues", "Allon Murienik", "mureinik", "04/17/17, 02:21:24 PM", "This PR fixes several javadoc issues reported by IntelliJ IDEA. Two types of errors are not handled in this PR:\r\n\r\n- References which gradle is unable to resolve - these references seem to be valid javadoc links, so there's either an issue with gradle itself of with the configuration this project is using, and needs a deeper look\r\n- Javadoc tags missing descriptions, which require a deeper understanding of the methods in question in order to resolve.", "NaN"], ["1041", "Backport fixes of release/2.x to master", "Tim van der Lippe", "TimvdLippe", "10/10/17, 06:49:15 PM", "Yeah, we did this quite some time ago and this merge was hell. I hope I did not screw anything up. There are still 7 test failures, but I have to get dinner now. Please review this PR very carefully, to make sure I did not introduce regressions into master :sob: ", "NaN"], ["1045", "Fixes #1044: change example for alignment of throws declaration", "Serge Bishyr", "SeriyBg", "04/19/17, 06:21:10 PM", "Fix the example that was not relating to the case that it was representing in contribution guide for code style", "NaN"], ["1048", "New notable version 2.7.22 and bumped release tools version", "Szczepan Faber", "mockitoguy", "04/24/17, 02:17:12 PM", "#### 1. Added 2.7.22 to notable version list.\r\n\r\nThis is the last version we directly published to maven central\r\nso it is our current 'official' notable version. For more information on the progress on Continuous Delivery Pipeline 2.0 see #911\r\n\r\n#### 2. Bumped version of tools\r\n\r\nUpdated the release configuration in the process. The way releasing is configured is not final so don't get hung up on this (but please provide feedback!). Most important changes (you can navigate from PR to issue with design and motivation):\r\n\r\n1. Formal extension object for configuring the releasing (mockito/mockito-release-tools#77)\r\n2. Changed travis release command (mockito/mockito-release-tools#81)", "NaN"], ["1052", "Fixed problems with releases", "Szczepan Faber", "mockitoguy", "04/29/17, 06:04:59 AM", "- fixed the logic that determines if the release is notable or not.\r\nWe shipped a couple of releases to wrong Bintray repo but we should be ok :)\r\nI plan to make this configuration simpler but now it has to be this way.\r\n- bumped to new version of tools to pick up a couple of improvements\r\nincluding the fix for #984\r\n- configured commit message postfix that will ensure that\r\ncode coverage is collected after CI automated commits (see #984)\r\n- disabled automatic publication because it's still not ready", "NaN"], ["1055", "Bumped version of release tools", "Szczepan Faber", "mockitoguy", "04/30/17, 12:46:41 AM", "- cleaner notable repository support\r\n- fixed the commit message postfix so that it includes the build number", "NaN"], ["1057", "Ensured the release actually happens automatically", "Szczepan Faber", "mockitoguy", "04/30/17, 12:33:03 PM", "New version of release tools make the release use 'dryRun' by default.\r\nThis way, we have less risk of accidental release.\r\nI updated .travis.yml file to turn off dry run in release build step.\r\n\r\nPlease prioritize this merge over other changes\r\nso that we can continue releasing automatically.\r\n\r", "NaN"], ["1058", "Test code refactoring - updated assertj test dependency from 1.x to 2.6.0", "Erhard Pointl", "epeee", "05/01/17, 03:39:47 PM", "make use of assertj 2.6.0 since java 7 is used now for building mockito and assertj 1.x is no longer under development.\r\n\r", "NaN"], ["1060", "Fixed  typos across the codebase", "Erhard Pointl", "epeee", "05/01/17, 01:55:40 AM", "NaN", "NaN"], ["1061", "Enabled automatic releasing without using skip-release keyword yet", "Szczepan Faber", "mockitoguy", "04/30/17, 10:44:17 PM", "1. This change enables automatic releases to 'mockito-development'\r\nwithout exposing us to endless loop bug I planted earlier\r\n(https://github.com/mockito/mockito/issues/1059).\r\n\r\n2. The skip-release behavior will be fixed soon, pr is open:\r\nhttps://github.com/mockito/mockito-release-tools/pull/103\r\nIf it is fixed, we can reapply the skip-release behavior for mockito,\r\nwhich will fix the codecov issue:\r\nhttps://github.com/mockito/mockito/issues/984", "NaN"], ["1062", "Bumped version of tools", "Szczepan Faber", "mockitoguy", "05/01/17, 01:44:47 AM", "Bumped version of tools, addresses issue #1059", "NaN"], ["1069", "Bumped release tools to 0.8.4 - concise release notes", "Szczepan Faber", "mockitoguy", "05/05/17, 04:17:25 AM", "1. Bumped version of tools.\r\n- The main improvement that is picked up is concise format of release notes: https://github.com/mockito/mockito-release-tools/pull/108\r\n- Also picked up some internal refactorings of release tools. The previous version number will be automatically bumped / added to version.properties file.", "NaN"], ["1073", "README.md release FAQ newlines", "Allon Murienik", "mureinik", "05/06/17, 12:43:48 PM", "Add newlines between questions and answers in the FAQ of \"How to release new version?\" at the end of README.md to make it easier to read.", "NaN"], ["1075", "Streamline assertj and junit4 usage in gradle files and update assertj (v2.7.0)", "Erhard Pointl", "epeee", "05/18/17, 01:30:42 PM", "It looks like I missed some occurrences of assertj-core 1.7.1 in #1058.\r\nTherefore I thought it might be a good idea to add a `dependencies.gradle` file which defines certain dependencies (for now assertj and junit4).\r\n\r", "NaN"], ["1076", "Fixed validation in returnArgumentAt(int) in case of type erasure on the parameter", "Christian Schwarz", "ChristianSchwarz", "05/10/17, 06:03:03 PM", "Fixes #1071 \r\n\r\nThe parameter type inference takes now the type of the actual instance\r\ninto account to avoid type erasure issues in case the parameter is\r\ngeneric.\r\n\r\nsee also: https://github.com/mockito/mockito/issues/1071#issuecomment-300091021", "NaN"], ["1079", "Fixed #1065. Add information about doNothing() method to CannotStubVo\u2026", "Serge Bishyr", "SeriyBg", "05/12/17, 01:28:54 PM", "NaN", "NaN"], ["1080", "More concise release notes and codecov issue fix", "Szczepan Faber", "mockitoguy", "05/14/17, 12:10:47 AM", "1. It should fix the codecov issue\r\n2. Improvements to release generation workflow (incremental tasks, etc)\r\n3. Cleaner release notes (more compact)\r", "NaN"], ["1084", "Bumped version of tools to pick up release automation fixes", "Szczepan Faber", "mockitoguy", "05/15/17, 01:39:52 AM", "- fix for: mockito/mockito-release-tools#143 (release needed task always returned false)\r\n- fix for: mockito/mockito-release-tools#145 (version bumps not pushed to the repo)\r\n\r\nTested by running locally (with various setup of env variables for 'branch'):\r\n\r\n```\r\n./gradlew testReleasea\r\n./gradlew ciReleasePrepare -m\r\n./gradlew assertReleaseNeeded\r\n```", "NaN"], ["1090", "Fixes #1083: Interfaces only declare toString implicitly and should t\u2026", "Rafael Winterhalter", "raphw", "05/22/17, 10:40:50 PM", "\u2026herefore override it explicitly from the inline mock maker.", "NaN"], ["1091", "Fixes #1088 : Updating documentation of verify feature to correct a s\u2026", "Tim Cooke", "trcooke", "05/27/17, 04:18:19 AM", "Updating documentation of verify feature to correct a supposed typo that results in confusing behaviour when cut, pasted, and run verbatim.\r\n\r\nThe documentation presents the following example of the verify exact number of invocations feature:\r\n\r\n    //using mock\r\n    mockedList.add(\"once\");\r\n    \r\n    mockedList.add(\"twice\");\r\n    mockedList.add(\"twice\");\r\n    \r\n    mockedList.add(\"three times\");\r\n    mockedList.add(\"three times\");\r\n    mockedList.add(\"three times\");\r\n    \r\n    //following two verifications work exactly the same - times(1) is used by default\r\n    verify(mockedList).add(\"once\");\r\n    verify(mockedList, times(1)).add(\"once\");\r\n    \r\n    //exact number of invocations verification\r\n    verify(mockedList, times(2)).add(\"twice\");\r\n    verify(mockedList, times(3)).add(\"three times\");\r\n    \r\n    //verification using never(). never() is an alias to times(0)\r\n    verify(mockedList, never()).add(\"never happened\");\r\n    \r\n    //verification using atLeast()/atMost()\r\n    verify(mockedList, atLeastOnce()).add(\"three times\");\r\n    verify(mockedList, atLeast(2)).add(\"five times\");\r\n    verify(mockedList, atMost(5)).add(\"three times\");\r\n\r\nThe last but one line says:\r\n\r\n    verify(mockedList, atLeast(2)).add(\"five times\");\r\n\r\nThis could be confusing to someone using these examples as it would result in a TooLittleActualInvocations failure being reported by Mockito. This is because in the example the `add()` method is never called with the String `five times`. In order to have this example make sense in the way I think it should I've replaced the String `five times` with `three times`, as suggested by @szczepiq \r\n\r\nCheers,\r\nTim Cooke", "NaN"], ["1092", "Fix link to Mockito JUnit rule heading", "Arend v. Reinersdorff", "arend-von-reinersdorff", "05/26/17, 04:34:56 PM", "\r", "NaN"], ["1093", "Updated build for latest release tools", "Szczepan Faber", "mockitoguy", "05/27/17, 05:18:32 AM", "- The concept of 'notable release' was removed from the tooling to keep things simple before releasing 1.0 of release tools (http://shipkit.org).\r\n- Removed the use of 'notable release' from Mockito build.\r\n- Started using 'shipkit.gradle' file to configure release automation.\r\n\r", "NaN"], ["1094", "update assertj (v2.8.0)", "Erhard Pointl", "epeee", "05/27/17, 05:26:12 AM", "assertj v2.8.0 basically contains a bugfix and a small breaking change, see http://joel-costigliola.github.io/assertj/assertj-core-news.html#assertj-core-2.8.0 for details.", "NaN"], ["1095", "Fixed bug with git push for tag during the release", "Szczepan Faber", "mockitoguy", "05/27/17, 05:57:56 AM", "Fixed bug with git push for tag during the release", "NaN"], ["1096", "InOrderImpl constructor signature", "Allon Murienik", "mureinik", "05/27/17, 11:04:12 AM", "Replace `List<? extends Object>` in the constructor's argument list with a simpler `List<?>`.\r\nThe `extends Object` adds nothing, and just serves to confuse the reader.", "NaN"], ["1098", "Moved some more dependencies to dependencies.gradle", "Erhard Pointl", "epeee", "05/28/17, 03:09:54 PM", " As a follow up of #1075 I moved another bunch of dependencies to dependencies.gradle.", "NaN"], ["1099", "update gradle to v3.5", "Erhard Pointl", "epeee", "05/28/17, 02:36:45 PM", "While working on #1098 I realized that mockito is still using gradle 2.x. Since java 7 is used now for building and a local build using gradle 3.5 was successful I think we should give 3.5 a try.", "NaN"], ["1100", "Fixed broken link in Javadoc, improved console message", "Szczepan Faber", "mockitoguy", "05/30/17, 08:54:32 AM", " - fixed broken link in Javadoc\r\n - tweaked the message emitted by release so that the log is clearer", "NaN"], ["1103", "Fixed contributor links and bintray badge in release notes", "Szczepan Faber", "mockitoguy", "05/30/17, 09:00:42 AM", "This change introduces 2 improvements:\r\n - visual badge for downloads in release notes: https://github.com/mockito/mockito-release-tools/issues/117\r\n - missing contributor links: https://github.com/mockito/mockito-release-tools/issues/184\r\n\r\nTested by:\r\n - running ```./gradlew testRelease``` in mockito\r\n - running ```./gradlew previewReleaseNotes```, the output was:\r\n\r\n```\r\n:previewReleaseNotes\r\n  Building new release notes based on /Users/sfaber/mockito/src/doc/release-notes/official.md\r\n----------------\r\n**2.8.38** - [1 commit](https://github.com/mockito/mockito/compare/v2.8.37...v2.8.38) by [Szczepan Faber](http://github.com/szczepiq) - *2017-05-29* - published to [![Bintray](https://img.shields.io/badge/Bintray-2.8.38-green.svg)](https://bintray.com/mockito/maven/mockito-development/2.8.38)\r\n - No pull requests referenced in commit messages.\r\n```", "NaN"], ["1104", "Renamed configuration extension 'releasing' into 'shipkit'", "Maciej Kuster", "NagRock", "06/02/17, 01:31:10 PM", "Bumped version of `mockito-release-tools` that contains renamed gradle extension to (`shipkit`)\r\nFixes https://github.com/mockito/mockito-release-tools/issues/172\r", "NaN"], ["1109", "Fixed Travis configuration for matrix build", "Szczepan Faber", "mockitoguy", "06/05/17, 07:55:36 AM", "Travis CI introduced a good change that unfortunately is slightly backwards incompatible.\r\nThis change to configuration file fixes our Travis configuration for updated Travis behavior wrt matrix builds.\r\nMore info, in the GitHub ticket\r\n\r\nFixes #1107\r", "NaN"], ["1115", "update to shipkit v0.8.72", "Erhard Pointl", "epeee", "06/10/17, 06:10:00 PM", "let's update to the most recent shipkit version.\r\n\r", "NaN"], ["1118", "ArgsMismatchFinder#getStubbingArgMismatches generics", "Allon Murienik", "mureinik", "06/10/17, 09:32:06 AM", "This patch allows calling `getStubbingArgMismatches` with any `Iterable`, not just an `Iterable<Object>` in order to make it more convenient to use.\r\n\r\nAs seen in `ArgMismatchFinderTest`, this saves having to cast potential arguments to raw types.", "NaN"], ["1119", "Made it possible to delay the return of a mock or spy.  (#1117)", "Myrle Krantz", "myrle-krantz", "06/12/17, 10:15:23 PM", "This is a useful aid in debugging race conditions and other synchronicity problems.\r", "NaN"], ["1120", "Updated release documentation, removed dead file", "Szczepan Faber", "mockitoguy", "06/10/17, 06:36:59 PM", "Updated release documentation, removed dead file.", "NaN"], ["1121", "Improve and develop APIs required for framework integrators", "Szczepan Faber", "mockitoguy", "09/08/17, 03:45:56 PM", "### Problem\r\n\r\nMockito does not do static mocking at the moment, Powermockito does. Powermockito uses a lot of internal Mockito APIs exposing the community to issues and wasted productivity on version upgrades. We want Mockito APIs to be easily extensible by framework integrators such us Powermockito without compromising API simplicity and consistency.\r\n\r\nAll proposed changes are backwards compatible in accordance to Mockito's compatibility contract (in short: limited changes to org.mockito.* types, freedom to change org.mockito.internal.*).\r\n\r\n### Public API changes\r\n\r\nThe full discussion on the use cases, implementation options and decisions is in #1110 ticket.\r\n\r\n1. New public method for creating mock creation settings object:\r\n\r\n```java\r\nMockito.withSettings().name(\u201cmy mock\u201d).build(Foo.class);\r\n```\r\n\r\n2. Framework integrators can now provide custom MockHandler via ```MockMaker#getMockHandler()```. Previously, it we didn\u2019t offer this capability because we didn\u2019t have convincing use cases that it was needed.\r\n\r\n### Public API considerations\r\n\r\n1. Framework integrators may **not** provide custom implementation of ```InvocationContainer``` at this stage. This part of API is accessible via public ```MockMaker#getMockHandler().getInvocationContainer()``` method. There are no convincing use cases that exposing this new public API is needed.", "NaN"], ["1122", "Made it possible to delay the return of a mock or spy (#1117)", "Marcin Zaj\u0105czkowski", "szpak", "06/12/17, 10:43:03 PM", "A cherry-picked version of #1119 for the 2.x branch.", "NaN"], ["1125", "Fix typo: Remove repeated \"a\"", "Vladislav", "VChirp", "06/13/17, 02:58:48 PM", "\r", "NaN"], ["1128", "Improve detection on non-mockable types - byte buddy 1.6.14->1.7.0", "Rafael Winterhalter", "raphw", "06/22/17, 01:45:02 PM", "Stronger assertions on class loader origin when choosing what methods are mockable.\r", "NaN"], ["1129", "Fixed issue with releases to Maven Central", "Szczepan Faber", "mockitoguy", "06/15/17, 03:41:29 PM", "After 1.0 release of Shipkit we need to figure out how to model this conditional release.\r\nThis bug leads me to believe that we need to eliminate this logic from Mockito.\r\nThis way it can be a part of Shipkit and be well tested & documented.\r\n\r\nFixes #1127\r\n\r\nTested by running command: ```./gradlew bintrayUpload -Pmaven-central-release -Pshipkit.dryRun```\r\n\r\nThe output was (note the \"Maven Central sync: true\"):\r\n```\r\n:bintrayUpload - publishing to Bintray\r\n  - dry run: true, version: 2.8.44, Maven Central sync: true\r\n  - user/org: szczepiq/mockito, repository/package: maven/mockito\r\n```\r\n\r\nThank you for reporting and the initial debugging that helped me resolve it quickly.\r\n\r\nPS. I wished build.gradle was in Kotlin, this error would not be possible ;)", "NaN"], ["1132", "make use of shipkit v0.8.92", "Erhard Pointl", "epeee", "06/18/17, 05:23:47 AM", " - speed up of `fetchAllContributors` task:\r\nwe did some performance improvements which results in a task duration of ~7s compared to ~22 sec in older versions of the plugin. \r\n\r", "NaN"], ["1133", "Simplified and documented .travis.yml file", "Szczepan Faber", "mockitoguy", "06/24/17, 05:04:41 PM", "I would love to get review of this, especially from @szpak! Please review commit-by-commit as I have commented separately on each removal from travis file.\r\n\r\nLet's get the house clean!", "NaN"], ["1136", "Fixes #1135: Properly resolve visibility bridges.", "Rafael Winterhalter", "raphw", "06/24/17, 08:29:21 AM", "Resolve the method hierarchy by Byte Buddy's method graph compiler to properly handle bridge methods which require a full method hierarchy analysis to detect.", "NaN"], ["1137", "Don't use raw rypes in UnusedStubbingsTest", "Allon Murienik", "mureinik", "06/24/17, 09:53:05 AM", "Use generic specification instead of casting to the raw List type in order to make it a bit stricter.\r\n\r\nNote that when we move to Java 8 language level these workarounds could be completely removed as the built in type inference should handle it.", "NaN"], ["1139", "org.shipkit.publications-comparator plugin applied", "Wojtek Wilk", "wwilk", "07/03/17, 04:19:47 AM", "- Shipkit version bumped and dependency renamed\r\n- Plugin org.shipkit.publications-comparator applied in all subprojects using java-library.gradle\r\n\r\nPublications comparison is important so that Shipkit task \"assertReleaseNeeded\" can fail if nothing important, from the client perspective, changed. \r\nIt is related to the issue https://github.com/mockito/shipkit/issues/156 in Shipkit. \r\n\r\nI tested it by adding System.out.println line in Java classes in root and android projects, and also adding a guava dependency in inline project. AssertReleaseNeeded identified these changes correctly. Also it identified that no changes were made if I executed it without any changes. \r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r", "NaN"], ["1141", "Bumped shipkit, simplified Travis file, removed unnecessary code", "Szczepan Faber", "mockitoguy", "07/06/17, 05:39:02 PM", "- Now when the release fails Mockito CI job will fail, too. This is really useful to acknowledge problems early. Previously, the release was a part of 'after_success' Travis configuration and any failures of release build were ignored.\r\n- Replaced Shipkit's java plugin with Gradle's vanilla 'java' plugin. This way the build is simpler.\r\n- Removed Shipkit configuration that has been discontinued (\"publishAllJavaSubprojects\"). Instead, I disabled the bintrayUpload for modules we don't want to publish at this point.", "NaN"], ["1145", "Bumped shipkit to fix unnecessary releasing problem", "Szczepan Faber", "mockitoguy", "07/07/17, 07:55:45 PM", "Addresses issue #1144 (unnecessary releasing problem).\r\n\r\nTested locally:\r\n- with change to sources:\r\n```\r\n:releaseNeeded\r\n  Environment variable SKIP_RELEASE present: false\r\n  Commit message to inspect for keyword '[ci skip-release]': <unknown commit message>\r\n  Current branch 'release/2.x' matches 'release/.+': true\r\n\r\n  Results of publications comparison:\r\n\r\n  Differences between files:\r\n  --- /Users/sfaber/mockito/src/build/previous-release-artifacts/mockito-2.8.53-sources.jar\r\n  +++ /Users/sfaber/mockito/src/build/libs/mockito-core-2.8.54-sources.jar\r\n\r\n    Modified files:\r\n    +- org/mockito/Mockito.java\r\n\r\n\r\n\r\n  Release is needed: true\r\n    - skip by env variable: false\r\n    - skip by commit message: false\r\n    - is pull request build:  false\r\n    - is releasable branch:  true\r\n    - publications changed since previous release:  true\r\n\r\nBUILD SUCCESSFUL\r\n```\r\n\r\n- without change to sources:\r\n\r\n```\r\n:releaseNeeded\r\n  Environment variable SKIP_RELEASE present: false\r\n  Commit message to inspect for keyword '[ci skip-release]': <unknown commit message>\r\n  Current branch 'release/2.x' matches 'release/.+': true\r\n\r\n  Results of publications comparison:\r\n\r\n  Release is needed: false\r\n    - skip by env variable: false\r\n    - skip by commit message: false\r\n    - is pull request build:  false\r\n    - is releasable branch:  true\r\n    - publications changed since previous release:  false\r\n\r\nBUILD SUCCESSFUL\r\n```\r\n\r\n- ```./gradlew testRelease``` was successful, too.", "NaN"], ["1146", "Enable stubOnly() on @Mock annotation", "Dennis Cheung", "hkdennis2k", "10/04/17, 11:58:15 AM", "Since Issue #86,  withSettings() has a API stubOnly() which speed up mocked stub a lots.\r\n\r\nIn my case, stubOnly() huge amount of test overhead, stacktrace and avoid invocation footprint list grow too large and cause OOM.\r\n\r\nHowever,  the API is not available with `@Mock` annotation.\r\nI had to move tens of mock annotation from `@Mock Foo foo;` into `Mockito,mock(Foo.class, withSetting().stubOnly())`.\r\n\r\n```\r\n@Mock(stubOnly=true)\r\npublic Foo lightweight;\r\n\r\n```\r\n\r\nSuggest adding the above api for convenience \r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1147", "[#1147] Provide version in release commit message", "Marcin Zaj\u0105czkowski", "szpak", "07/08/17, 10:10:40 PM", "Implemented in Shipkit: https://github.com/mockito/shipkit/issues/276\r\n\r\nTested manually with `gw testRelease -x gitPush -x bintrayUpload` and the following commit message was used:\r\n> 2.8.54 release (previous 2.8.53) + release notes updated by local build\r\n>\r\n> [ci skip-release]\r", "NaN"], ["1157", "Add tests to verify and show that @Spy can be used to allow stubbing/verification of List parameters using varargs.", "Ben Yu", "fluentfuture", "10/05/17, 10:25:08 AM", "Hi, I thought about sending an email first but then figured that I'd probably put in the test code as the example anyway, which is what this PR is all about.\r\n\r\nI'm not completely sure that there isn't already a better way to go about stubbing List params. If there are, I'm happy to learn! :)\r", "NaN"], ["1158", "Adds support for Java 9 in inline mock maker by Byte Buddy update.", "Rafael Winterhalter", "raphw", "09/04/17, 09:46:23 PM", "Byte Buddy now uses ASM 6 which enables full support for Java 9 in the inline mock maker.", "NaN"], ["1161", "Remove duplicated word in Javadoc", "Igor Conrado Alves de Lima", "igorcadelima", "08/09/17, 03:19:51 AM", "NaN", "NaN"], ["1162", "Fix for #1155 thenThrow(Class) ", "Christian Schwarz", "ChristianSchwarz", "10/07/17, 09:01:53 AM", "Fix for #1155 \r\nMockito.thenThrow(Class) now fails when the given Throwable type is not declared on the stubbed method.\r", "NaN"], ["1165", "Introduce test for mock-maker-inline with Kotlin suspend functions", "Roman Elizarov", "elizarov", "10/05/17, 07:51:42 AM", "See issue #1152\r\nThis test should pass when byte-buddy is updated with https://github.com/raphw/byte-buddy/pull/332\r", "NaN"], ["1169", "Updated to latest Shipkit, tidied up configuration", "Szczepan Faber", "mockitoguy", "08/19/17, 06:17:42 PM", "- Updated to pick up latest Shipkit. There is one particular bugfix to pick up (Shipkit's [release notes](https://github.com/mockito/shipkit/blob/master/docs/release-notes.md)).\r\n- Removed unnecessary code from Gradle's build script files.\r\n\r\nTested by running \"./gradlew testRelease\". All good!", "NaN"], ["1170", "Update objenesis version 2.5 -> 2.6 (Java9, bugfixes)", "Pascal Schumacher", "PascalSchumacher", "08/21/17, 12:17:31 AM", "To quote from http://objenesis.org/notes.html:\r\n\r\nVersion 2.6 (2017-06-20)\r\n- App Engine Java 8 Runtime support\r\n- Improve Java 9 support\r\n- Clarify serialization strategy behavior enhancement\r\n- SunReflectionFactoryInstantiator not working if parent class constructor isn't public\r\n- Validate Android O\r\n- Drop Java 5 support\r\n\r", "NaN"], ["1171", "Bumped minor version so signify new Objenesis version", "Szczepan Faber", "mockitoguy", "08/22/17, 04:21:21 AM", "Also, there were 50+ versions after last minor version so it just makes sense to bump it.\r\n\r\n[ci maven-central-release]\r\n\r\nNote that merging this PR will release to maven central (if the automation works ;)\r", "NaN"], ["1172", "Updated README.md wrt maven central release", "Szczepan Faber", "mockitoguy", "08/26/17, 04:36:46 AM", "Previous release did not ship to central, it was skipped because publications were identical. I updated the instruction on how to do that.\r\n\r\nI have also opened tickets to Shipkit project to improve this part of release automation:\r\n - support for \"[ci force-release]\" keyword in Shipkit: mockito/shipkit#353\r\n - support for custom forcing rule in Shipkit: mockito/shipkit#354\r\n\r\nI plan to merge this PR and include \"[ci maven-central-release]\" in the **merge** commit message. **Please don't merge**, just review/approve. Thank you!", "NaN"], ["1181", "#1179: Fix performance regression caused by use of method graph compiler.", "Rafael Winterhalter", "raphw", "09/04/17, 09:38:20 PM", "In order to properly discover visibility bridges, we have to run a full analysis of the method graph. The compilation of this method graph is rather expensive and we require to cache a computed graph. The caching is however non-trivial as it references classes which might be unloaded. In order to avoid a leak, we cache classes using non-strong references.\r\n\r\nThis requires some real-world experience to discover if this caching mechanism suffices.", "NaN"], ["1184", "Removed JDK7 build from CI to fix Travis regression with Jdk7", "Szczepan Faber", "mockitoguy", "09/04/17, 09:45:45 PM", "Summary:\r\n\r\n- Removed our JDK7 build from Travis CI completely\r\n- Fixed issues with Mockito Travis CI build\r\n\r\nReference:\r\n\r\n- Fixes Mockito ticket: #1182\r\n- Reference Travis CI ticket: travis-ci/travis-ci#7884\r\n\r\nDetails:\r\n\r\n- I have tried to get the build working with jdk7 but I couldn't get it to work ([example failure](https://travis-ci.org/mockito/mockito/jobs/271842699)). I kept getting: \r\n\r\n```Exception in thread \"main\" javax.net.ssl.SSLException: java.security.ProviderException.```\r\n\r\nWe remember this issue from our Jdk6 build, we could not fix it and eventually we have stopped building with Jdk6. \r\n- We still publish with Java6 compatibility and we have animal sniffer set up to catch regressions. It should be ok to build only on Jdk8.\r\n- Jdk6 and jdk7 has been deprecated years ago, we need to move on.", "NaN"], ["1186", "Compare method of graph to defined form of method.", "Rafael Winterhalter", "raphw", "09/05/17, 07:02:55 PM", "Fixes #1180: Compare against non-generic method when deciding if a method should be stubbed.", "NaN"], ["1192", "Added new public API for spring-boot use case", "Szczepan Faber", "mockitoguy", "10/14/17, 06:18:44 PM", "Not intended for merging yet, submitted for visibility.\r\n\r\n- for design and rationale, see #1191\r\n- for usage, see \"VerificationStartedListenerTest\" class\r\n\r\nThis is still experimental so refactorings, error handling, javadoc is missing.\r", "NaN"], ["1195", "Fixes #1189: Add stable module name", "Allon Murienik", "mureinik", "10/08/17, 08:16:51 AM", "This patch adds a stable module name to the produced JAR in order to\r\nbe forwards compatible to Java 9.\r", "NaN"], ["1199", "Fixes 977: Javadoc on verifyZeroInteractions", "Allon Murienik", "mureinik", "10/06/17, 07:07:54 PM", "Make the javadoc of `Mockito#verifyZeroInteractions` to make it more\r\nobvious that it does the same thing as `Mockito#verifyNoMoreInteractions`.\r\n\r\nFixes #977", "NaN"], ["1201", "Fix javadoc in PluginLoader#withAlias' javadoc", "Allon Murienik", "mureinik", "10/08/17, 06:19:06 AM", "Fix the misuse of `@Deprecated` in `PluginLoader#withAlias` - `@Deprecated` is an annotation, while the correct javadoc tag is `@deprecated`.\r", "NaN"], ["1202", "[#1202] Java 9 CI build for Mockito 2.x", "Marcin Zaj\u0105czkowski", "szpak", "10/08/17, 09:53:33 AM", "## Summary\r\n\r\nProvide Java 9 Travis build to ensure Java 9 compatibility in at least tested use cases.\r\n\r\nSupport for Java 9 was improved in Gradle 4.x and that version is being used. Due to some issues with newer Gradle versions (#1198) some other configuration changes were required. As well as JaCoCo version has been bump (https://travis-ci.org/mockito/mockito/jobs/284996316#L799-L816).\r\n\r\nFixes #1198.\r\n\r\n## Check list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r", "NaN"], ["1203", "Fixed documentation issue, added unit tests", "Szczepan Faber", "mockitoguy", "10/14/17, 03:22:41 AM", "- While working on new verification started listeners (#1191) I found an instance of incorrect documentation. I added unit tests and simplified the documentation.\r\n- Currently, contrary to what the Javadoc said, we do guarantee the order in which invocation listeners get notified. Some of our users might have started to depend on this behavior. I added unit tests and fixed the Javadoc. In general, it is seems useful to guarantee the order. This way, the API is more predictable, easier to use.\r", "NaN"], ["1208", "Updated my GitHub user name", "Szczepan Faber", "mockitoguy", "10/15/17, 07:34:07 AM", "Updated my GitHub user name from 'szczepiq' to 'mockitoguy'", "NaN"], ["1209", "Clean up JUnit imports", "Allon Murienik", "mureinik", "10/15/17, 10:03:00 PM", "Fix JUnit imports throughout the project to use the standard `org.junit.Assert` assertions instead of the obsolete `junit.framework.TestCase` assertions which just delegate to `Assert`'s methods.", "NaN"], ["1213", "Standardize JUnit imports", "Allon Murienik", "mureinik", "10/21/17, 11:49:11 AM", "This PR standardizes importing assertion methods, making the code base cleaner and easier to maintian.", "NaN"], ["1214", "Fixes #1211: Improve @deprecated JavaDoc", "Deleted user", "ghost", "10/20/17, 12:06:58 PM", "This pull request fixes #1211 by improving the `@deprecated` JavaDoc of `Mockito.debug()`, `MockitoDebugger` and `MockitoDebugger.printInvocations(Object ... mocks)` by adding the additional information on how to retrieve an actual instance of the `MockitoDebugger` interface.\r\n\r", "NaN"], ["1216", "Adresses #1206: allow opting out from annotation copying within mocks.", "Rafael Winterhalter", "raphw", "10/22/17, 02:13:02 PM", "The `MockSettings` now include an option to disable copying of annotations to mock classes.", "NaN"], ["1217", "Fixes #1183: Make override check more forgiving to accomondate Kotlin compile patterns.", "Rafael Winterhalter", "raphw", "10/22/17, 02:12:49 PM", "The override check implies Java compile patterns such that Kotlin method resolutions could fail for void return types which do not fit into Java's reference-type only generic hierarchies. This PR eases this restriction to fix this resolution for Kotlin.\r\n\r\nI added the test case of the reported issue as a reference.", "NaN"], ["1218", "Updated Byte Buddy and ASM dependencies. Fixes #1215.", "Rafael Winterhalter", "raphw", "10/22/17, 02:13:10 PM", "Updates Byte Buddy which at one point relied on a hash value to never collide which is rare but possible.", "NaN"], ["1219", "Add regression test for issue #1174", "Tim van der Lippe", "TimvdLippe", "10/29/17, 03:07:07 PM", "Regression that shows the issue of #1174. I am unable to reproduce this locally. Let's see what Travis says.\r\n\r\nCloses #1174 \r", "NaN"], ["1220", "Backport fixes from release/2.x to master", "Tim van der Lippe", "TimvdLippe", "10/22/17, 04:28:26 PM", "Because we should do this more frequent :joy: ", "NaN"], ["1221", "MockitoExtension for JUnit5 ", "Christian Schwarz", "ChristianSchwarz", "03/24/18, 03:42:21 PM", "Fixes #445\r\n\r\nDiscussion: https://groups.google.com/forum/#!topic/mockito/R1L1aG2RgBQ\r\n\r\nFirst of all, thanks to the JUnit5-Team (@sbrannen) for that great API! The implementation was straight forward and the docu is top notch. Not comparable to a JUnitRule or Runner implementation. One can feel the hard work. \r\n\r\n----\r\n\r\nThe here provided `MockitoExtension` allows to mock/spy/validate like the well known Mockito-JUnitRule/Runner. This is still \"work in progress\", feel free to comment.\r\n\r\nUsage:\r\n\r\n```Java\r\n@ExtendWith(MockitoExtension.class)\r\nclass JUnit5Test {\r\n \r\n  @Mock\r\n  private Dependency mock ;\r\n\r\n  @Test\r\n  void checkMockCreation(){\r\n    when(mock.foo()).thenReturn(\"Hello JUnit5\");\r\n    mock.foo();\r\n    verify(mock).foo();\r\n  }\r\n}\r\n```", "NaN"], ["1227", "Update license plugin and add missing license headers", "Tim van der Lippe", "TimvdLippe", "10/29/17, 02:46:09 PM", "The license plugin could be updated to later versions, as we dropped JDK6 on Travis. Moreover, quite some licenses were reported missing, so I ran `./gradlew licenseFormatMain licenseFormatTest` to add them.", "NaN"], ["1228", "Add @CheckReturnValue to stubbing/verification methods", "Tim van der Lippe", "TimvdLippe", "10/31/17, 12:40:38 PM", "Introduce a new annotation `@CheckReturnValue` and add this to methods like `when` and `verify` such that static analysis can verify the value is actually used (http://errorprone.info/bugpattern/CheckReturnValue). This makes sure developers can get warnings on build-time instead of run-time (with our internal `validateState`)\r\n\r\nFixes #1130 ", "NaN"], ["1229", "Enable jacoco coverage on subprojects", "Tim van der Lippe", "TimvdLippe", "11/02/17, 10:57:11 AM", "Inspired by http://csiebler.github.io/blog/2014/02/09/multi-project-code-coverage-using-gradle-and-jacoco/, Gradle is now configured to incorporate coverage of subprojects. This should increase our current coverage, as we now also incorporate the coverage generated from `kotlinTest`.\r\n\r\nFixes #1070", "NaN"], ["1231", "InvocationsPrinter string concatination", "Allon Murienik", "mureinik", "10/28/17, 10:42:36 AM", "Replace string concatination inside an append call with a chained `append` calls to make the code a tad easier to read, so the reader isn't left wondering why some of the concatinations are done with `append`s and some with the `+` operator.\r", "NaN"], ["1238", "Backport fixes release/2.x to master", "Tim van der Lippe", "TimvdLippe", "12/01/17, 10:02:17 PM", "- Update licenses\r\n- Remove unused `buildSrc`\r\n- Remove old gradle files\r\n- Add some more tests\r\n- Fix coverage", "NaN"], ["1242", "Enable Checkstyle for checking license headers", "Tim van der Lippe", "TimvdLippe", "11/05/17, 10:50:39 AM", "Apparently we weren't shipping license headers on the Android subproject as well :cry: \r\n\r\nFixes #1239 ", "NaN"], ["1244", "Remove service-worker from Javadoc generation", "Tim van der Lippe", "TimvdLippe", "11/03/17, 10:55:46 PM", "Essentially reverts #602. It was a nice experiment, but sadly it didn't appear to work and my expectation is that it won't for a while.\r\n\r\nFixes #1233 ", "NaN"], ["1247", "Remove several container classes and inline code", "Tim van der Lippe", "TimvdLippe", "11/28/17, 04:47:33 PM", "Remove several classes that were containers for code that is easier to be inlined. They were only referenced once, or never at all. This makes it easier to reason about the code, while also maintaining less code and classes.\r\n\r\nCloses #904 ", "NaN"], ["1250", "Fixes #1243: Support for new version number 10.", "Rafael Winterhalter", "raphw", "11/06/17, 10:14:46 PM", "Adds support for Java 10 EA builds.", "NaN"], ["1257", "Fixes #1254 and #1256: improved check for self-invocation.", "Rafael Winterhalter", "raphw", "11/28/17, 09:54:53 PM", "Better checks for recursive calls and guards internally used JDK types.\r\n\r\nFixes #1254 \r\nFixes #1256", "NaN"], ["1258", "Prevent class loading race condition", "Rafael Winterhalter", "raphw", "03/15/18, 03:38:03 PM", "Allow singleton locking in context with class loading races.\r\n\r\nFixes #1067", "NaN"], ["1263", "Update Kotlin to latest version", "Tim van der Lippe", "TimvdLippe", "11/23/17, 02:51:41 PM", "Bump Kotlin to the latest version. Also extract the version to our dependencies so we can more easily keep track of it.", "NaN"], ["1265", "Update shipkit and configure assertReleaseNeeded task", "Erhard Pointl", "epeee", "11/21/17, 02:34:00 PM", "After merging this pr the release will go out if \"[ci maven-central-release]\" keyword is present in the commit message. We no longer have to do whitespace changes in javadoc in order to convince 'assertReleaseNeeded' task that a release is needed.\r\n\r\nSee https://github.com/mockito/shipkit/issues/353 and https://github.com/mockito/shipkit/issues/354 for details.\r\n\r\nThis pr updates shipkit to the latest version and configures ReleaseNeededTask to skip the comparison of publications based on the value of 'centralRelease'.\r", "NaN"], ["1268", "Fixes #1262: update doc for Answers.CALLS_REAL_METHODS", "Serge Bishyr", "SeriyBg", "01/16/18, 12:57:08 AM", "Update the documentation for the Answers.CALLS_REAL_METHODS according to #1262 and also included a note with recommendation not to use when().thenReturn() for partial mock.\r", "NaN"], ["1270", "Cleaner code for Mockito users by better integration with static code checkers, more @CheckReturnValue", "Stephan Schroevers", "Stephan202", "04/01/18, 06:02:11 PM", "Builds on #1130, #1228.\r", "NaN"], ["1272", "Strictness configurable per mock / stubbing", "Szczepan Faber", "mockitoguy", "07/24/18, 04:14:17 AM", "Fixes #792\r\n\r\n### Problem\r\n\r\nToday we have strict stubs feature, a key enabler for cleaner tests and improved debuggability. Strict stubs don't work well with \"common stubbing\" pattern. They also don't like when we call stubbed methods with unexpected arguments - even though sometimes it is legit. For more, see #792 \r\n\r\n### Solution\r\n\r\n```java\r\n@Test public void demo() {\r\n  //1. \"lenient()\" method on MockSettings interface:\r\n  Foo mock = Mockito.mock(Foo.class, withSettings().lenient());\r\n\r\n  //2. \"lenient()\" method on Mockito class:\r\n  Mockito.lenient().when(mock.foo(1)).thenReturn(1);\r\n  Mockito.lenient().doReturn(1).when(mock).foo(1);\r\n}\r\n```\r\n\r\nFor more, see #792\r\n\r\n### Public API changes\r\n\r\n- New methods:\r\n   - Mockito#lenient()\r\n   - MockSettings#lenient()\r\n   - MockCreationSettings#isLenient()\r\n   - Stubbing#getStrictness()  \r\n- New interfaces:\r\n   - BaseStubber - extracted out from existing \"Stubber\" interface, so that we can reuse API with \"LenientStubber\"\r\n   - LenientStubber - instance returned by \"Mockito.lenient()\"\r\n- Other changes:\r\n   - Made @org.mockito.NotExtensible annotation public so that we can use it in subpackages", "NaN"], ["1280", "Update STRICT_STUBS documentation for verifyNoMoreInteractions", "Niklas Baudy", "vanniktech", "12/27/17, 04:14:11 PM", "Fixes #1086", "NaN"], ["1281", "fix VerificationWithTimout javadoc comment", "Micha\u0142 Borowiecki", "mihbor", "01/02/18, 07:36:33 PM", "as opposed to VerificationAfterDelay, VerificationWithTimout doesn't support never()\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [ ] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1282", "Extra test case, javadoc update", "Szczepan Faber", "mockitoguy", "01/16/18, 01:12:47 AM", "Let's keep adding test cases to ensure great coverage of the entire behavior.\r\n\r\nAlso updated documentation so that we consistently use the \"lenient\" vocabulary.\r\n\r\nStumbled upon it when working on #1272 \r\n  ", "NaN"], ["1290", "Clean up, removed dead code, rename job, documentation tidy up", "Szczepan Faber", "mockitoguy", "02/15/18, 05:34:26 PM", " - Removed dead method to simplify the code\r\n - Renamed iOngoingStubbing -> ongoingStubbing ('i' prefix is a relict of history)\r\n - Removed duplicated word (thanks to @kant for inspiration in #1288)", "NaN"], ["1299", "Fix link of Maven Central badge", "Arend v. Reinersdorff", "arend-von-reinersdorff", "01/27/18, 10:43:45 PM", "Link to list of mockito-core versions instead of linking to version 2.8.47\r\n\r\nEven better would be linking to the latest version in Maven Central. But I'm not aware of a way to do this.", "NaN"], ["1301", "Extend MockitoSession(Builder) API to enable usage by testing frameworks", "Marc Philipp", "marcphilipp", "02/10/18, 03:48:33 PM", "The first commit in this PR fixes #1232. In the additional commits, I've taken the liberty to implement my proposals from https://github.com/mockito/mockito/issues/445#issuecomment-358407562:\r\n\r\n- Add `MockitoSessionBuilder.name(String)` to pass a name from the testing framework to the `MockitoSession`\r\n- Add `MockitoSessionBuilder.logger(MockitoSessionLogger)` to customize the logger used for hints/warnings produced when finishing mocking (useful for testing and to connect reporting capabilities provided by testing frameworks such as JUnit Jupiter)\r\n- Add `MockitoSession.finishMocking(Throwable)` to avoid potentially confusing warnings for failing tests\r\n- Add `MockitoSession.setStrictness(Strictness)` to change the strictness of the current session (there were two test cases requiring that)\r\n\r\nEach of these changes is in a separate commit. Thus, it should be relatively easy to take only those changes that you think good, or just the first one to fix #1232.\r\n\r\nTo showcase that this new API is sufficient to implement an extension of a testing framework, I've changed the `JUnitRule` implementation to use it.", "NaN"], ["1307", "Update public API of InvocationFactory needed for Android static mocking", "Philip P. Moltmann", "moltmann", "02/09/18, 01:55:23 PM", "Fixes #1306\r\n\r\nA real method might throw a Throwable, but the invocations produced by\r\nInvocationFactory call the real method via a Callable that can only\r\nthrow a Exception.\r\n\r\nHence add a new method to InvocationFactory that allows to create\r\ninvocations with a RealMethodBehavior == a Callable that throws a\r\nThrowable.", "NaN"], ["1310", "Ensure isolation of stubbings", "Szczepan Faber", "mockitoguy", "02/12/18, 02:05:52 PM", "### Bugfix compatibility\r\n\r\nFor certain corner cases, this bugfix may be incompatible. We believe that the exposure is minimal (corner cases only, possibly incorrect tests), and the bugfix important. If your test fails after upgrading to Mockito version that contains this fix, please scrutinize the test - it is very likely that the test is incorrect. We apologize for any compatibility problems arising from this change. It is a hard decision to make when a bugfix changes the behavior in a way it may not be compatible with every Mockito test in the world.\r\n\r\n### Problem\r\n\r\nWhen stubbing with answers that call different mocked methods:\r\n```java\r\nwhen(mock.foo()).thenAnswer(() -> { otherMock.bar() }\r\n```\r\nwe need to ensure that ```mock.foo()``` and ```otherMock.bar()``` don't interfere. Prior to this bugfix, this scenario resulted in various problems like: stack overflow error, unexpected stubbings declared on different mock, unexpected invalid return type errors.\r\n\r\nFor more details, see #1279\r\n\r\n### Solution\r\n\r\nThe solution is based on great PR #1296 by @r-smirnov. **Huge thanks** to @r-smirnov for reporting the problem diligently, then digging into the bowels of Mockito to find a clean solution, providing excellent test cases that demonstrate the problem. When I initially saw the issue report, I thought that it's not fixable and we would close it as \"documented Mockito syntax caveat\". Thank you @r-smirnov for persistence and getting this fixed!", "NaN"], ["1315", "Update Kotlin version to be compatible with the IntelliJ runtime version", "Tim van der Lippe", "TimvdLippe", "02/18/18, 02:06:07 AM", "The version of the IntelliJ Kotlin runtime has been updated to 1.2.10, therefore bump our version as well.", "NaN"], ["1319", "Fixes #1314 : Include all the invocation in mock verification error message", "Serge Bishyr", "SeriyBg", "03/25/18, 12:42:15 PM", "Have changes the verify error message to include all the invocation instead of including just one undesired invocation.\r\nPreviously we have message like:\r\n```\r\nWanted 1 time:\r\n-> at ...\r\nBut was 2 times. Undesired invocation:\r\n-> at ...\r\n```\r\nThis PR changes it to \r\n```\r\nWanted 1 time:\r\n-> at ...\r\nBut was 2 times:\r\n-> at ...\r\n-> at ...\r\n```\r\nTo make the error message consistent the similar changes was made for too little invocations case.\r\nThe message:\r\n```\r\nWanted 3 times:\r\n-> at ...\r\nBut was 2 times:\r\n-> at ...\r\n```\r\nchanged to:\r\n```\r\nWanted 3 times:\r\n-> at ...\r\nBut was 2 times:\r\n-> at ...\r\n-> at ...\r\n```", "NaN"], ["1320", "Avoid bytebuddy import Issue to enable repackaging without bytebuddy", "Philip P. Moltmann", "moltmann", "03/05/18, 03:43:27 PM", "This allows libs that use alternate mockmakers do cleanly exclude the bytebuddy subdirectory.\r\n\r\nTest: grep -r -e \"import org\\.mockito\\.internal\\.creation\\.bytebuddy\\.[^\\.]*$\" src/main does not return anything\r\n\r\nOffers workaround for #1112", "NaN"], ["1321", "Prevent memory leaks with inline MockMakers by using weak refs to mocks", "Philip P. Moltmann", "moltmann", "03/13/18, 04:00:19 AM", "Fixes #1313\r\n\r\nThis is needed for mock makers that store a map<weakref<mock>, invocation>. If the invocation holds a strong reference to the mock, the key never gets gc-ed and the map keeps on growing.\r\n\r\nAs weak references cannot be serialized, temporarily create a strong reference during serialization.\r\n\r\nAs the tests use invocations without keeping references to the mock we need to keep strong references in these cases.", "NaN"], ["1324", "Improved stubbing internals and test coverage", "Dmitry Timofeev", "dmitry-timofeev", "04/04/18, 02:18:21 AM", "Some improvements in exception-stubbing code:\r\n\r\n- Clarify intentions in BaseStubbing:\r\n  - Replace an obsolete TODO with a clarifying comment and add some tests covering related test cases.\r\n  - Extract the code aborting the ongoing stubbing in a separate method that always throws. Use return `abortNullExceptionType` so that static-analysis tools (e.g., IDEA) yield no false-positives.\r\n\r\n- Clarify that ThrowsException always returns the _same_ throwable.\r\nThe previous `#answer` implementation might give an illusion that `Throwable#fillInStackTrace` produces a new throwable, but that is not correct \u2014 it always returns `this`.\r\n- Also, replace a possible NPE with a descriptive IllegalStateException.", "NaN"], ["1327", "Fixes #1326 : Reduce the allocation rate for the typical use of Locat\u2026", "Sanne Grinovero", "Sanne", "03/02/18, 03:14:40 PM", "\u2026ionImpl\r\n\r\nA trivial one, but should be very useful as I noticed this class being instantiated quite a lot.", "NaN"], ["1339", "Enable errorprone build", "Philip P. Moltmann", "moltmann", "03/31/18, 03:19:18 PM", "- fix up issues found\r\n- placate error prone warning where we know we do something funky\r\n- Ignore two tests as it is not immediately clear what is broken\r\n  - org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest#shouldNotAllowUsingAnyObjectForVarArgs\r\n  - org.mockito.internal.util.PrimitivesTest#should_check_that_value_type_is_assignable_to_wrapper_reference\r\n\r\nNOTE: Please carefully review the changes made to the code. I fixed them up as good as I could but a real mockito expert need to verify them.", "NaN"], ["1340", "Update to Byte Buddy 1.8.0", "Pascal Schumacher", "PascalSchumacher", "03/23/18, 10:33:44 PM", "\r", "NaN"], ["1341", "Update to ASM 6.1", "Pascal Schumacher", "PascalSchumacher", "03/23/18, 10:33:36 PM", "\r", "NaN"], ["1342", "Update to AssertJ 2.9.0", "Pascal Schumacher", "PascalSchumacher", "03/23/18, 08:24:17 PM", "NaN", "NaN"], ["1343", "Update gradle plugins (buildscan and animalsniffer)", "Erhard Pointl", "epeee", "03/24/18, 05:32:38 PM", " - animalsniffer-plugin\r\n - buildscan plugin\r\n\r\nI will provide a separate pr for updating shipkit soon.\r\n\r", "NaN"], ["1344", "junit jupiter extension dependencies", "Erhard Pointl", "epeee", "03/25/18, 08:57:40 AM", " - we should be fine with the api for implementing the extension, therefore let's only depend on junitJupiterApi\r\n - change junitJupiterEngine dependency to testRuntime\r\n - rename junitJupiterLauncher to junitPlatformLauncher", "NaN"], ["1347", "Update shipkit to v2.0.12", "Erhard Pointl", "epeee", "03/25/18, 12:58:52 PM", "Let's update shipkit to the latest version.\r\nThis fixes https://github.com/mockito/shipkit/issues/679.\r\n\r\nI did some local testing as well as publishing a new version in shipkit example. \r\nBoth tests were successful.", "NaN"], ["1349", "Fix #1346 - Different mocks are used for @Mock and @InjectMock in the same test class with JUnit 5 extension", "Serge Bishyr", "SeriyBg", "03/26/18, 10:28:52 AM", "Fix #1346 - fix `MockitoExtension` which has init mocks with two identical test instances which cause the mock to be initialized and injected two times", "NaN"], ["1350", "Support local parameters in test methods with JUnit Jupiter", "Tim van der Lippe", "TimvdLippe", "07/27/18, 05:32:52 AM", "Note that this implementation differs from the prototype implementation of the JUnitTeam (https://github.com/junit-team/junit5-samples/blob/7bf40178345d5ca837579c8ddb8c025401a98788/junit5-mockito-extension/src/main/java/com/example/mockito/MockitoExtension.java#L41-L73). Instead, it will do not do any parameter resolution between test methods.\r\n\r\nFixes #1348 ", "NaN"], ["1351", "Update Byte Buddy and ASM for bug fix releases", "Rafael Winterhalter", "raphw", "03/29/18, 05:16:56 AM", "This updates a few minor regressions that came with the updates of ASM and Byte Buddy.\r\n\r\nIn particular, this fixes a bug with the processing of parameter annotations caused by an API change in ASM. This also introduces a new handling for stack map frames in advice code that is used by the inline mock maker which can now translate inconsistent frames, typically caused by non-javac compilers such as Scala and Kotlin and by code obfuscators. ", "NaN"], ["1354", "Make use of shipkit v2.0.13", "Erhard Pointl", "epeee", "03/31/18, 02:10:28 PM", "The problem we headed into with 2.0.12 is fixed now, see https://github.com/mockito/shipkit/issues/680 (thx @mockitoguy !)\r\n ", "NaN"], ["1355", "Use java.lang.MethodHandles.Lookup::defineClass ", "Rafael Winterhalter", "raphw", "04/07/18, 12:00:12 PM", "Use java.lang.MethodHandles.Lookup::defineClass if this mechanism is available on the current JVM. This might not work when interoperating with foreign modules, if those modules do not open and export their types, most prominently, the Java core modules where there are introduced issues with serialization.\r\n\r\nThis introduces a change in behavior for Mockito when using Java 9+. Unfortunately, I think that this is necessary for Mockito to continue to function after introduction of the JPMS. For now, it seems like this limitation only affects working with serializability in combination with platform types what is not too bad but there is a chance that we will discover issues once this new mechanism is picked up by the community.", "NaN"], ["1356", "Add JDK 10 and 11 to the build matrix", "Tim van der Lippe", "TimvdLippe", "04/02/18, 12:22:34 PM", "Work in progress PR to try to make Mockito build on Java 10 and 11. Let's see how this goes...", "NaN"], ["1357", "Make use of shipkit v2.0.15", "Erhard Pointl", "epeee", "04/02/18, 11:46:06 AM", "We actually got rid of unnecessary hits to GitHub REST API during non-release builds (see https://github.com/mockito/shipkit/issues/345 for details).\r\n\r\nI did some manual testing using 'testRelease' in mockito project and it did work.\r\n\r", "NaN"], ["1358", "Apply errorprone to all java projects", "Erhard Pointl", "epeee", "04/02/18, 09:18:27 PM", "I thought it might be a good idea to apply the errorprone plugin to all projects using the java plugin.\r\nFurthermore, I think it is a good idea to specify the version of errorprone in the gradle file instead of always using the latest one (since this might break the build e.g. due to new checks).\r\n\r\n@TimvdLippe, @mockitoguy what do you think? ", "NaN"], ["1368", "Resolve the correct protection domain for the codegen package when using reflection.", "Rafael Winterhalter", "raphw", "04/13/18, 09:07:13 PM", "Fixes #1367.", "NaN"], ["1369", "Performance improvements", "Rafael Winterhalter", "raphw", "04/15/18, 08:50:43 PM", "Use less expensive method graph compiler for inline mock maker. Update Byte Buddy for general performance improvements and bug fixes. Fixes #1364. Also fixes javadoc warning.", "NaN"], ["1375", "Upgrade Gradle to 4.7", "Erhard Pointl", "epeee", "04/19/18, 07:28:46 PM", "In order to be able to make progress on #1372 we have to upgrade to Gradle 4.7 ([release notes](https://docs.gradle.org/4.7/release-notes.html)) first.\r", "NaN"], ["1377", "Update Byte Buddy and cache some expensive values", "Rafael Winterhalter", "raphw", "04/21/18, 10:12:05 PM", "This avoids the reallocation of certain objects that are expensive to compute. Also, Byte Buddy is updated.", "NaN"], ["1378", "Avoid circularity: avoid endless loop during mock creation", "Rafael Winterhalter", "raphw", "04/28/18, 09:39:57 AM", "If certain types a type for the first time during instrumentation while our mocking engine relies on the same types, this can cause a circularity as checking if an instance is a mock requires instances of the latter types what again returns to the latter mock checking routine what causes an endless loop. (Described in comment.) Fixes #1240.\r\n\r\nIt is a bit difficult to reproduce this issue in our tests. It mainly happens with classes generated by Kotlin or Scala and requires the inline mock maker and a JDK 9 or older. If we want to add such a test, we can copy the test from https://github.com/guenhter/mockito-final-class-kotlin-problem\r", "NaN"], ["1380", "Upgrade errorprone to 2.3.1", "Erhard Pointl", "epeee", "04/27/18, 07:31:22 AM", "see [release notes](https://github.com/google/error-prone/releases)", "NaN"], ["1387", "Fixes #1386: Adding atMostOnce(), rename ThreadVerifiesContinuoslyInteractingMockTest and one TODO", "TDurak", "Ingvir", "05/03/19, 03:36:21 PM", "Hi,\r\n\r\nI would like to make a quick contribution on this project.\r\n\r\nI add atMostOnce(), it seem's not to be a big feature. I just want to highlight the fact you have the function atLeastOnce() but nothing for the atMostOnce case.\r\n\r\nI rename the testClass ThreadVerifiesContinuoslyInteractingMockTest on ThreadVerifiesContinuouslyInteractingMockTest and the TODO on toString() from HamcrestArgumentMatcher.", "NaN"], ["1391", "Make MockitoExtension constructor public", "Anuraag Agrawal", "anuraaga", "05/17/18, 10:51:12 AM", "It is possible to register an extension for automatic use using Java's `ServiceLoader` mechanism.\r\n\r\nhttps://junit.org/junit5/docs/current/user-guide/#extensions-registration-automatic\r\n\r\nSome projects may want to provide their own `META-INF` file to avoid tediously adding `MockitoExtension` to tests since it is very common. However, `ServiceLoader` requires the class to have a no-args *public* constructor, so the current extension cannot be used with the `ServiceLoader` mechanism.\r\n\r\nFixes #1390\r\n\r\ncheck list\r\n\r\n - [X] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [X] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [X] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [X] Avoid other runtime dependencies\r\n - [X] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [X] The pull request follows coding style\r\n - [X] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [X] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1399", "Update CONTRIBUTING.md", "\u8a3e\u660e\u534e", "ziminghua", "06/05/18, 02:33:57 PM", "In my idea the config like this\r\n\r", "NaN"], ["1402", "Fixes #1401 : Correctly handle VarargsMatcher check for HamcrestMatchers", "Venkata Jaswanth", "aj-jaswanth", "06/08/18, 12:06:44 PM", "NaN", "NaN"], ["1404", "Fix wrong artifact name in javadoc, and link to proper javadoc page", "Kengo TODA", "KengoTODA", "06/11/18, 08:02:29 AM", "## motivation\r\n\r\n1. Current javadoc in `Mockito.java` uses wrong artifact name 'org.mockito.junit-jupiter', but it should be [org.mockito:mockito-junit-jupiter](https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter). To avoid user's confusion, fix it with correct name.\r\n2. The `MockitoExtension` isn't contained in `mockito-core`, so we cannot use hyper link generated by `{@link ...}`. Instead, we can use `<a>` tag to guide users to proper javadoc page.\r\n\r\n## check list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r\nThanks for your great product that really helps our daily hacking :)", "NaN"], ["1407", "removing redundent sentence", "Kayvan Najafzadeh", "kayvannj", "06/14/18, 10:57:35 AM", "There was a redundant sentence in the documentation (it was repeated 2 lines below it).", "NaN"], ["1425", "Updated documentation of timeout() and after()", "Szczepan Faber", "mockitoguy", "07/16/18, 07:00:49 AM", "While working on @ChristianSchwarz's PR, I found the current documentation confusing.\r\n\r\n- made the documentation clear, especially about the differences between timeout() and after()\r\n- removed mentions of internal API (new Timeout() constructor)\r\n\r\nFixes #91", "NaN"], ["1426", "mockito on Java 11-ea+21", "Robert Stupp", "snazy", "07/13/18, 10:20:28 PM", "Fixes #1419 \r\n\r\nRequires `-Dnet.bytebuddy.experimental=true` system property to be set to let bytebuddy use asm API version `ASM7_EXPERMIENTAL` and use the same one in `InlineBytecodeGenerator`.\r", "NaN"], ["1429", "Updated test coverage for async verification", "Szczepan Faber", "mockitoguy", "07/28/18, 01:15:47 AM", "Updated tests with after() verification mode\r\n- Some existing tests for the feature did not work due to flaws in ReplyRule. Those tests (now ignored) consistently failed but succeeded only when used with reply rule.\r\n- Some existing tests had weak assertions that did not fully cover the feature.\r\n- Suggested simpler and cleaner way of implementing delayed execution via new 'AsyncTesting' class, instead of 'DelayedExecution'. Dropping the reply rule may introduce instabilities to the CI builds, let's observe and measure before making an action.\r\n\r\nAlthough we are considering deprecating 'after()', we need good coverage for an existing feature even if it will be removed in the long run.", "NaN"], ["1430", "Allow mockito-logger to be configurable as Mockito extension", "Ivo \u0160m\u00edd", "bedla", "01/31/19, 04:23:43 PM", "Hi,\r\nwe have many of legacy tests that do over-mocking code base - lots of unused mocking there (we are cleaning it slowly). We have user `@MockitoSettings(strictness = Strictness.WARN)` switch to log and not fail in this situactions. By default all logs are printed out to console using `System.out.println` and this make us trouble because we have \"silent\" profile at CI server which is configured to silent Loggers / as you expect sith `.println` we are not trully silent in this case :]\r\nThats why I have created this PR proposal and want to know what do you think.\r\nThx,\r\nIvos", "NaN"], ["1432", "Update gradle plugins", "Erhard Pointl", "epeee", "07/20/18, 04:29:47 AM", " - gradle-animalsniffer-plugin (v1.4.4)\r\n - gradle-errorprone-plugin (v0.0.15)\r\n - build-scan-plugin (v1.15.1)\r\n\r\nI will provide another pr about updating shipkit to the latest version soon (which we'd need in order to be able to use gradle 4.8/4.9).\r", "NaN"], ["1433", "Fixed Travis build", "Szczepan Faber", "mockitoguy", "07/18/18, 03:12:08 PM", "We don't need private constructor on an 'internal' class. Internal classes can be changed at any time based on our compatibility policy.", "NaN"], ["1434", "Javadoc: Update broken code example", "Sangwoo Lee", "marchpig", "07/20/18, 11:41:27 AM", "It updates a broken code example in Javadoc.\r\nI just copied the example from [Answer.java](https://github.com/mockito/mockito/blob/release/2.x/src/main/java/org/mockito/stubbing/Answer.java#L16) to [Mockito.java](https://github.com/mockito/mockito/blob/release/2.x/src/main/java/org/mockito/Mockito.java#L525).", "NaN"], ["1435", "Update gradle (v4.9) and shipkit (v2.0.28)", "Erhard Pointl", "epeee", "07/24/18, 03:41:30 AM", "I did some local testing using dryRun:\r\n\r\n```\r\n...\r\n> Task :bintrayUpload\r\nTask ':bintrayUpload' is not up-to-date because:\r\n  Task has not declared any outputs despite executing actions.\r\n:bintrayUpload - publishing to Bintray\r\n  - dry run: true, publish: true, version: 2.19.5, Maven Central sync: false\r\n  - user/org: szczepiq/mockito, repository/package: maven/mockito-development\r\nGradle Bintray Plugin version: 1.8.3\r\nUploading to https://api.bintray.com/content/mockito/maven/mockito-development/2.19.5/org/mockito/mockito-core/2.19.5/mockito-core-2.19.5-sources.jar...\r\n(Dry run) Uploaded to 'https://api.bintray.com/content/mockito/maven/mockito-development/2.19.5/org/mockito/mockito-core/2.19.5/mockito-core-2.19.5-sources.jar'.\r\nUploading to https://api.bintray.com/content/mockito/maven/mockito-development/2.19.5/org/mockito/mockito-core/2.19.5/mockito-core-2.19.5-javadoc.jar...\r\n(Dry run) Uploaded to 'https://api.bintray.com/content/mockito/maven/mockito-development/2.19.5/org/mockito/mockito-core/2.19.5/mockito-core-2.19.5-javadoc.jar'.\r\nUploading to https://api.bintray.com/content/mockito/maven/mockito-development/2.19.5/org/mockito/mockito-core/2.19.5/mockito-core-2.19.5.jar...\r\n(Dry run) Uploaded to 'https://api.bintray.com/content/mockito/maven/mockito-development/2.19.5/org/mockito/mockito-core/2.19.5/mockito-core-2.19.5.jar'.\r\nUploading to https://api.bintray.com/content/mockito/maven/mockito-development/2.19.5/org/mockito/mockito-core/2.19.5/mockito-core-2.19.5.pom...\r\n(Dry run) Uploaded to 'https://api.bintray.com/content/mockito/maven/mockito-development/2.19.5/org/mockito/mockito-core/2.19.5/mockito-core-2.19.5.pom'.\r\n:bintrayUpload (Thread[Task worker for ':',5,main]) completed. Took 0.009 secs.\r\n:bintrayPublish (Thread[Task worker for ':' Thread 3,5,main]) started.\r\n\r\n> Task :bintrayPublish\r\nTask ':bintrayPublish' is not up-to-date because:\r\n  Task has not declared any outputs despite executing actions.\r\n(Dry run) Signed version 'mockito/maven/mockito-development/2.19.5'.\r\n(Dry run) Published version 'mockito/maven/mockito-development/2.19.5'.\r\n(Dry run) Signed version 'mockito/maven/mockito-development/2.19.5'.\r\n(Dry run) Published version 'mockito/maven/mockito-development/2.19.5'.\r\n(Dry run) Signed version 'mockito/maven/mockito-development/2.19.5'.\r\n(Dry run) Published version 'mockito/maven/mockito-development/2.19.5'.\r\n(Dry run) Signed version 'mockito/maven/mockito-development/2.19.5'.\r\n(Dry run) Published version 'mockito/maven/mockito-development/2.19.5'.\r\n:bintrayPublish (Thread[Task worker for ':' Thread 3,5,main]) completed. Took 0.014 secs.\r\n```\r\n\r", "NaN"], ["1436", "Javadoc: Update code example (ignoreStubs)", "Sangwoo Lee", "marchpig", "07/21/18, 12:42:43 PM", "It updates the code example of `ignoreStubs` in Javadoc.\r\n- Correct wrong variable\r\n: From `mock` to `list`\r\n- Change call sequence\r\n: The existing one doesn't clearly describe the use of `ignoreStubs` with `inOrder`.", "NaN"], ["1439", "Javadoc: #1438 Update ignoreStubs to include strictness", "Sangwoo Lee", "marchpig", "07/27/18, 01:56:30 PM", "It updates `ignoreStubs()` docs to include `Strictness` information. (#1438)", "NaN"], ["1440", "Javadoc: Correct wrong links and code examples", "Sangwoo Lee", "marchpig", "07/24/18, 03:06:38 AM", "Some wrong links and code examples are corrected.", "NaN"], ["1443", "Fixed a broken link in CONTRIBUTING.md", "Sangwoo Lee", "marchpig", "07/23/18, 04:00:43 PM", "It corrects a broken link(Git tips...) in the contribution guide.", "NaN"], ["1446", "Workaround for wrong artifact ids", "Szczepan Faber", "mockitoguy", "07/26/18, 04:14:16 AM", "Fixes #1444\r\n\r\nWe can remove workaround when upstream bug is fixed: https://github.com/mockito/shipkit/issues/741", "NaN"], ["1448", "Updates Byte Buddy to add preliminary support for Java 12.", "Rafael Winterhalter", "raphw", "07/27/18, 04:27:20 AM", "Adds support for Java 12 version constant. This allows to run Mockito on Java 11 and 12 when the `net.bytebuddy.experimental` property is set to `true`.", "NaN"], ["1450", "Added validation of artifact IDs", "Szczepan Faber", "mockitoguy", "07/27/18, 11:54:59 PM", "This will prevent problems such as unintentional change to artifact ids (#1444)\r\n\r\nTested by removing the workaround and running \"./gradlew generatePomFileForJavaLibraryPublication\" task. The assertions were failing.", "NaN"], ["1452", "Comprehensive test coverage for timeout() and after()", "Szczepan Faber", "mockitoguy", "07/30/18, 05:49:22 AM", "New coverage enables us to test @ChristianSchwarz's 'within'. I want to see all those tests working when we replace the internal implementation with 'within'.", "NaN"], ["1458", "Add StubbingLookupEvent and Notifier (a part of #793)", "Sangwoo Lee", "marchpig", "07/30/18, 02:37:01 AM", "This PR adds `StubbingLookupEvent` and `StubbingLookupNotifier` as a part of the issue #793.", "NaN"], ["1459", "stubOnly() must prevent verifyNoMoreInvocations()", "Sangwoo Lee", "marchpig", "07/31/18, 12:43:22 AM", "stubOnly() must prevent verifyNoMoreInvocations() otherwise the tests are not correct:\r\n\r\nPrior behavior:\r\n```java\r\nFoo stub = mock(Foo.class, withSettings().stubOnly());\r\nstub.foo();\r\nverifyNoMoreInvocations(stub); //succeeds even though there is an invocation on stub!\r\n```\r\n\r\nDesired behavior:\r\n```java\r\nFoo stub = mock(Foo.class, withSettings().stubOnly());\r\nstub.foo();\r\nverifyNoMoreInvocations(stub); //fails explaining that stubs should not be verified\r\n```", "NaN"], ["1462", "Added Gradle-based retry logic for tests", "Szczepan Faber", "mockitoguy", "07/31/18, 03:46:43 PM", "- removed JUnit Rule that was doing retries because it was too dangerous. It was hiding tests that did not work properly. Due to how Mockito works and maintains state, it is hard to safely build a retry test rule that works at the level of JUnit rules.\r\n- we still need retry logic for some of our concurrent tests. I wrote a Gradle script plugin for it. It is a pragmatic solution to the problem - having convincing unit tests for concurrent API inherently can have timing issues.\r\n\r\nThis work is preparing us for @ChristianSchwarz's within implementation.", "NaN"], ["1463", "Prevent stubOnly() from being verified (#1460)", "Sangwoo Lee", "marchpig", "11/27/18, 04:39:08 PM", "This PR adds assertion to verification methods to prevent stub-only mock from being verified (#1460)\r\n- `verify()`\r\n- `verifyNoMoreInteractions()`\r\n- `inOrder()`", "NaN"], ["1465", "Moved TestNG from the main repo into separate mockito/mockito-testng repo", "Szczepan Faber", "mockitoguy", "08/03/18, 04:53:44 AM", "New home for TestNG integration is: https://github.com/mockito/mockito-testng\r\n\r\nFor details and discussion, see: https://github.com/mockito/mockito/issues/962", "NaN"], ["1474", "Comprehensive coverage for timeout + inOrder", "Szczepan Faber", "mockitoguy", "08/19/18, 12:14:58 AM", "Preparing for merging major overhaul in the implementation of 'timeout' and 'after' APIs (#936).\r\n\r\nWe need coverage before we completely replace the existing implementation.", "NaN"], ["1475", "MockitoSession API does not clean up listener when initMocks fails", "Szczepan Faber", "mockitoguy", "08/19/18, 05:01:49 AM", "When initMocks() fails we did not clean up the session listener. This led to a confusing error message on the next attempt to create a session (next test method run). I stumbled upon this problem when attempting to configure TestNG to use strict stubbing (https://github.com/mockito/mockito-testng/issues/1).\r\n\r\nIn order to fix this cleanly I need to keep the existing functionality that protects the user from forgetting to use 'finishMocking()'. Hence, I still need to throw an exception if the user adds the same listener multiple times. However, in the event that the listener is dirty, I clean it up automatically instead of failing.", "NaN"], ["1484", "Fix some typos", "Allan Wang", "AllanWang", "08/25/18, 08:01:31 AM", "don't -> doesn't\r", "NaN"], ["1487", "Updates Byte Buddy to latest version.", "Rafael Winterhalter", "raphw", "09/05/18, 09:37:17 PM", "I did some more performance work and fixed some edge cases.", "NaN"], ["1489", "Bump minor version", "Szczepan Faber", "mockitoguy", "09/09/18, 08:38:49 PM", "We accumulated several changes worthy Maven Central release.\r\n\r\nIf you are merging please include \"[ci maven-central-release]\" incantation in the merge commit. Thanks :)", "NaN"], ["1501", "Support mocking kotlin suspend functions compiled by Kotlin 1.3 (#1500)", "Denis Zharkov", "dzharkov", "10/05/18, 11:51:15 AM", "This is an update for https://github.com/mockito/mockito/pull/1032\r\n\r\nCoroutines support is not experimental anymore and a type of continuation-parameter is renamed to `kotlin.coroutines.Continuation`\r\n\r\nThis PR is assumed to fix https://github.com/mockito/mockito/issues/1500", "NaN"], ["1505", "Updates Byte Buddy to next version for Java 11 support.", "Rafael Winterhalter", "raphw", "09/30/18, 08:57:40 AM", "Does no longer require the experimental flag to be set.", "NaN"], ["1507", "Updated contributing guide", "Morteza Adigozalpour", "mortezaadi", "10/22/18, 12:36:30 AM", "> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1508", "Fix typos", null, "jmetertea", "10/11/18, 01:09:59 AM", "Fix small typos\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [ ] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1521", "Minor improvements in the Javadoc of Mockito.java", "Bastien Jansen", "bjansen", "10/19/18, 02:02:05 PM", "This PR fixes a type and adds a reference to the JUnit5 extension.\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1523", "Added 'lenient' annotation toggle", "Szczepan Faber", "mockitoguy", "11/19/18, 01:42:28 AM", "This way we can conveniently configure an existing 'lenient' setting via an annotation. See the unit test that describes the feature.\r\n\r\n```Java\r\n@Mock(lenient = true) SomeClass mock;\r\n```", "NaN"], ["1525", "Update bytebuddy, asm and objenesis for full Java 11 support", "Ismael Juma", "ijuma", "10/31/18, 09:17:20 PM", "check list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1526", "typo fix in UnfinishedStubbingException", "Xiayun Sun", "xysun", "10/30/18, 02:55:50 PM", "A very simple typo fix. \r\n\r\n\r\ncheck list\r\n\r\n - [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [ ] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1536", "Allow delegating to non-public methods for AdditionalAnswers#delegatesTo", "Walter Scott Johnson", "li-wjohnson", "11/20/18, 11:08:19 PM", "Fixes an issue where doing \"delegatesTo(new AnonymousClass() {})\" would cause an IllegalAccessException, and other access-related issues.\r\n\r\n(See https://github.com/mockito/mockito/pull/1535 - Sorry, wasn't aware that you can't change the PR source branch.)", "NaN"], ["1539", "Improved sensitivity of potential stubbing problem", "Szczepan Faber", "mockitoguy", "11/25/18, 04:44:14 PM", "This change improves the developer experience with strict stubbing. It is now possible to stub the same method with different argument multiple times in the test. Previously, we threw PotentialStubbingProblem exception in this scenario:\r\n\r\n```java\r\nwhen(mock.foo(1)).thenReturn(1);\r\nwhen(mock.foo(2)).thenReturn(2); // <- no longer throws PotentialStubbingProblem (false negative)\r\n```\r\n\r\nThis reduces the number of false negatives reported by strict stubbing.\r\n\r\nFixes #1522, #1496, partially #769, #720", "NaN"], ["1543", "Exposed new API - StubbingLookupListener", "Szczepan Faber", "mockitoguy", "02/27/19, 06:05:20 PM", "Exposed new public API based on an internal API - StubbingLookupListener - #793.\r\n\r\nAs a rule of a thumb we try to expose the internal APIs that the top level features are built upon. Since StubbingLookupListener is useful for us to implement strictness, let's get the former exposed as public API. This way we build stronger framework with the concept of \"onion skin API\".\r\n\r\nThis PR replaces #1466 - very nice PR from @marchpig. Due to number of changes I needed to do, I decided to reimplement the feature, rather than use the original PR. @marchpig, thank you for understanding!", "NaN"], ["1544", "Fixes #1541: Prevent premature garbage collection of mock objects", "Max Grabenhorst", "maxgrabenhorst", "11/26/18, 03:59:15 PM", "Fixes #1541.\r\n\r\nIf using 'One-liner stubs' (https://static.javadoc.io/org.mockito/mockito-core/2.23.4/org/mockito/Mockito.html#one_liner_stub) the mock object may be premature cleaned up and returning the mock fails with an exception. This occurs because there is no strong reference to the mock itself.\r\n\r\nTherefore we need to maintain a strong reference to the mock until we've returned it, while making sure that the GC can still cleanup the mock correctly when needed.\r\n\r\nCause implementations of `BaseStubbing` are intended to be cleaned up after usage, we can store a strong ref to the mock there. `getMock` then uses the strong ref (instead of the weak ref provided by the invocation). After cleaning up the implementations of  `BaseStubbing` there is no strong ref to the mock itself anymore (except the one in the test class).\r\n\r\nI tried some alternative solutions but I believe this is the only way it works.\r\n\r\n----\r\n\r\nBind last mock creation to mockingProgress does not work because of this:\r\n```\r\nwhen(mock(TestClass2.class).getTestClass()).thenReturn(mock(TestClass.class)).getMock();\r\n```\r\n\r\nBind mock of last invocation for stubbing to mockingProgress does not work because of this:\r\n```\r\nwhen(mock(TestClass.class).getStuff()).thenReturn(\"X\").thenReturn(\r\n    when(mock(TestClass.class).getStuff()).thenReturn(\"XXX\").<TestClass>getMock().getStuff()\r\n).getMock();\r\n```", "NaN"], ["1546", "Enable gradle build cache", "Erhard Pointl", "epeee", "12/03/18, 04:55:29 PM", "This pr fixes #1545.\r\n\r\nI was not entirely sure about the settings to choose for the local build cache.\r\nLet's discuss if we should go for a local folder and if keeping cache entries for 30 days is ok. \r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [ ] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1548", "Bumped Gradle to last 4.x", "Szczepan Faber", "mockitoguy", "11/28/18, 04:19:51 PM", "Let's stick to 4.x for now. We will use Gradle 5 after we verify that all our plugins work with 5.x.", "NaN"], ["1549", "Fixed issue with leftover state when stubbing with bad throwables", "Szczepan Faber", "mockitoguy", "12/02/18, 03:55:09 AM", "Fixed issue with leftover state when stubbing with bad throwables. Fixes #1514", "NaN"], ["1552", "Minimal test to repro generic issue with smart nulls", "Szczepan Faber", "mockitoguy", "11/30/18, 04:48:20 PM", "Created a minimal test that reproduces bug with smart nulls and generics, see issue #1551", "NaN"], ["1554", "Fixed VerifyError when JUnit 3 is in the classpath", "Theodore Ni", "tjni", "11/29/18, 03:44:36 PM", "Mockito will throw VerifyError during its JUnit detection when JUnit 3\r\nis in the classpath, because the code only supports JUnit 4 and later.\r\nThis change will catch this error and pretend that JUnit is not there.\r\n\r\nIssue: #1553", "NaN"], ["1555", "Fixed JaCoCo build cache issue", "Szczepan Faber", "mockitoguy", "12/02/18, 09:55:10 PM", "Jacoco Gradle plugin breaks cacheability, hence we only configure the plugin on demand.\r\n\r\nBumped Build Scans plugin so that it is easier to debug build cache issues.\r\n\r\nThis PR is needed for #1546", "NaN"], ["1558", "Use errorprone gradle plugin v0.6 and extract errorprone config", "Erhard Pointl", "epeee", "12/04/18, 08:34:13 PM", "let's use latest errorprone plugin and extract errorprone configuration.\r\n\r\nThis should also make the build java11 ready.", "NaN"], ["1559", "Use jacoco 0.8.2", "Erhard Pointl", "epeee", "12/03/18, 08:22:42 PM", "jacoco 0.8.2 has experimental java 11 support.\r\n\r\nsee https://github.com/jacoco/jacoco/releases/tag/v0.8.2 for details\r\n\r", "NaN"], ["1560", " Simplify travis.yml (openjdk10 and openjdk11)", "Erhard Pointl", "epeee", "12/04/18, 09:23:49 PM", "... and remove no longer needed wget of install-jdk.sh", "NaN"], ["1565", "Prevent StackOverflowError when processing reversed generics", "Tim van der Lippe", "TimvdLippe", "12/12/18, 12:48:23 PM", "When processing the reverse method, the type parameters are actually\r\nreversed compared to the type parameters in the class. This subsequently\r\nconfuses GenericMetadataSupport, as it creates a cycle in\r\n`contextualActualTypeParameters`. In that case A resolves to B, while B\r\nresolves to A.\r\n\r\nThe root cause is that we are processing type parameters of methods,\r\nwhile we already processed them in the class declaration. Therefore,\r\nignore any type parameters if we already derived the appropriate\r\ncontextual type parameter.", "NaN"], ["1567", "Add warning to inline mock maker when running on a JRE", "Ravi van Rooijen", "HoldYourWaffle", "12/13/18, 11:35:43 AM", "I made a topic about this in the [mailing list](https://groups.google.com/forum/#!topic/mockito/vKhx3R4_doQ).\r\n\r\nLong story short: the inline mock maker doesn't work when running on just a JRE, so I added a warning in the error message if that's that case. This would've saved me a lot of headache, so I figured I'd maybe help a poor soul that encounters this in the future.", "NaN"], ["1573", "Improve eclipse project setup", "Ravi van Rooijen", "HoldYourWaffle", "01/10/19, 01:59:40 PM", "A work in progress for #1568.\r\nSadly eclipse doesn't honor encoding setting in the gradle build file, so I can't fix that.\r\nThere's also still the problem with the `java.nio.file.Path` reference by `assertj-core`. My theory is that animal sniffer doesn't check dependencies properly, because `assertj-core` explicitly states that it requires at least java 7.", "NaN"], ["1576", "Fix/bug 1551 cce on smart not null answers", null, "Patouche", "01/06/19, 08:42:30 PM", "This PR intends to fix #1551. For fix it, the `ReturnsSmartNulls` answer use now some reflection to find the correct return type instead of the `java.util.Object`.\r\n\r\nWhen the return type can be found, it will start to retrieve empty values using the answer `ReturnsMoreEmptyValues` & `ReturnsEmptyValues` before creating a new mock instance.\r\n\r\nAs you may notice in tests, there is still one case where the return type cannot be found. In this case, the `Answer` will return a `null` instead of `Object` mock.\r\n\r\nI think, it may be possible to improve this code. Any suggestion will be welcome !", "NaN"], ["1582", "Fix #1577: Refactoring naming rule for sealed packages to better work with the Java module system", "Rafael Winterhalter", "raphw", "01/14/19, 09:48:24 PM", "The Java module system consideres packages of all named modules to be sealed. This results in the naming strategy to rename classes such that they cannot subclass package-private types.", "NaN"], ["1583", "Add support for android tests using androidx.test.", null, "brettchabot", "01/08/19, 06:46:30 PM", "See https://developer.android.com/jetpack/androidx/ for more details on\r\nandroidx.\r\n\r\n\r", "NaN"], ["1585", "Fix #1584 where MultipleParentClassLoader lacks of classloaders of superclasses", "Nikolas Falco", "nfalco79", "01/29/19, 10:02:22 AM", "The MultipleParentClassLoader is now composed also with classloaders of supertypes of the mockedType so in OSGi is able to load all declared types in the hierarchy.", "NaN"], ["1586", "Add some missing `@Deprecated` annotations", "Tim van der Lippe", "TimvdLippe", "01/09/19, 10:56:03 PM", "ErrorProne caught this. We correctly had them on most of the deprecated\r\nmethods, but not on all of them.\r", "NaN"], ["1588", "Fixes #1587 : Remove unnecessary loop from InjectingAnnotationEngine", null, "LihMeh", "01/10/19, 12:40:07 PM", "Removes InjectingAnnotationEngine::processInjectMocks method that does an unnecessary loop.\r\nFixes https://github.com/mockito/mockito/issues/1587", "NaN"], ["1592", "Module fix", "Rafael Winterhalter", "raphw", "01/28/19, 09:15:16 PM", "Allows to run Mockito as an automated module and adds additional tests.", "NaN"], ["1596", "Fixes #1578: outer class mocks unavailable from inner class", "Matthew Ouyang", "mouyang", "01/31/19, 11:39:01 PM", "I opened issue #1578 a few weeks ago that went without an correspondence, so I apologize if submitting a PR isn't the ideal method of moving this issue forward.  However I am hoping I can get this fix incorporated into an official version without implementing temporary workarounds.\r\n\r\nThe PR should clearly show the issue I am trying to fix, but I had to introduce a testCompile snapshot dependency.  The dependent project has a fix required to demonstrate the issue within Mockito but it unfortunately has not been incorporated into an official release, and I can't think of another way to reproduce the issue.  I have contacted the owner of the dependent project but I haven't received a response from them either.\r\n\r\nI am looking for guidance on next steps for what I believe to be regression (reported to be working in #353).  The only other solution I can think of is to merge this without a unit test but I highly doubt that is desirable.\r\n\r\n_Git Commit Message_\r\n- problem - JUnitRule detects an unfinished mocking session when an inner class is detected\r\n- fix - if a MockitoSession has been established for JUnitRule, then use that and init mocks of the inner class.\r\n- tests - within an inner class ... ensure mocks are accessible, override outer class values when desired, retain original values if not overwritten\r\n- demonstrated with de.bechte.junit:junit-hierarchicalcontextrunner:4.12.2-SNAPSHOT", "NaN"], ["1600", "Automatic dependency update with Dependabot", "Marcin Zaj\u0105czkowski", "szpak", "02/11/19, 09:05:49 PM", "Configuration for [Dependabot](http://dependabot.com/) to evaluate automatic dependency update (via PRs).", "NaN"], ["1602", "Try to fix Javadoc generation on Java 11", "Tim van der Lippe", "TimvdLippe", "01/28/19, 09:15:17 PM", "Fixes #1595 ", "NaN"], ["1608", "typo? ... 'thenReturn' instruction if completed -> ... 'thenReturn' instruction is completed", null, "zoujinhe", "02/04/19, 11:17:11 PM", "`if` -> `is`?\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [ ] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1612", "Return null instead of causing a CCE", "Tim van der Lippe", "TimvdLippe", "02/12/19, 01:14:02 PM", "This solves a large number of edge-cases where `null` will actually\r\nremove the runtime ClassCastException. This essentially negates the\r\nwhole MockitoCast ErrorProne check. We can still not support every use\r\ncase, but causing a NPE instead of a CCE does not seem to make this\r\nworse.\r\n\r\nI am still running internal tests within Google to see if there are any\r\nregressions, but I already saw that some of the test failures we had\r\nwith ByteBuddy were resolved with this particular patch.\r\n\r\nNote that this now fully closes #357. A previous PR resolved the same\r\nissue with ReturnsSmartNulls: #1576.\r\n\r\nFixes #357", "NaN"], ["1617", "Fix issue with mocking of java.util.* classes", "Tim van der Lippe", "TimvdLippe", "02/11/19, 05:46:04 PM", "Fixes #1615\r\n\r\nI hope the test is correct. At least it failed before and succeeds now...", "NaN"], ["1619", "New API to clean up all inline mocks after test", "Xu Tan", "ttanxu", "03/05/19, 04:10:18 PM", "In certain specific, rare scenarios (issue #1614) inline mocking causes memory leaks. There is no clean way to mitigate this problem completely. Hence, we introduced a new API to explicitly clear mock state (only make sense in inline mocking!):\r\n\r\n```java\r\npublic class ExampleTest {\r\n\r\n     @After\r\n     public void clearMocks() {\r\n         Mockito.framework().clearInlineMocks();\r\n     }\r\n\r\n     @Test\r\n     public void someTest() {\r\n         //...\r\n     }\r\n }\r\n```\r\n\r\nDue to the introduction of map from weak reference from mock instance to\r\nits invocation handler, Mockito became vulnerable to memory leaks as\r\nthere are multiple situations where Mockito could unintentionally hold\r\nstrong references to mock instances in the map record. The strong\r\nreferences could be through spiedInstance for spies, and arguments used\r\nto facilitate method stubbing.\r\n\r\nMockito could never know if the arguments passed in for method stubbing\r\nare also strongly referenced somewhere else or not, so Mockito needs to\r\nsave a strong reference to these arguments to avoid premature GC.\r\nTherefore to solve cyclic strong references through arguments Mockito\r\nneeds to explicitly know when mocks are out of their life, and clean\r\nup all internal strong references associated with them.\r\n\r\n\r\n\r\nFixes #1532 and #1533.", "NaN"], ["1620", "Fixes #1618 : Fix strict stubbing profile serialization support.", "Alex Simkin", "SimY4", "02/13/19, 05:04:32 PM", "When strict stubs profile is enabled, mock serialization doesn't work.\r\n\r\nThis PR fixes this problem.", "NaN"], ["1624", "Handle terminal type var with bounds", "Brice Dutheil", "bric3", "03/04/19, 03:20:44 PM", "This PR aim to fix the issue described in #1621, the issue being that terminal type variable arguments were not looked up for their bounds.\r\n\r\nFixes #1621 ", "NaN"], ["1626", "Make use of Shipkit v2.1.3", "Marcin Stachniuk", "mstachniuk", "02/27/19, 04:06:22 PM", "After this update the site:\r\nhttps://github.com/mockito/mockito/releases\r\nwill be updated by Shipkit\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1635", "Fix handling of generics in ReturnsMocks", "Tim van der Lippe", "TimvdLippe", "02/28/19, 02:25:04 PM", "ReturnsMocks was exhibiting the same problems as we previously had with\r\nReturnsSmartNulls. Extract that common behavior into a separate class\r\nand thus fix the issues with ReturnsMocks.", "NaN"], ["1639", "Removes inaccessible links from javadocs in Mockito.java", "Pawe\u0142 Pamu\u0142a", "PawelPamula", "03/01/19, 01:11:23 PM", "The monkeyisland.pl domain is no longer available.\r\n\r\nList of inaccessible articles:\r\nhttp://monkeyisland.pl/2009/01/13/subclass-and-override-vs-partial-mocking-vs-refactoring\r\nhttp://monkeyisland.pl/2008/07/12/should-i-worry-about-the-unexpected\r\nhttp://monkeyisland.pl/2008/04/26/asking-and-telling\r\nhttp://monkeyisland.pl/2009/01/13/subclass-and-override-vs-partial-mocking-vs-refactoring", "NaN"], ["1641", "Fix returns mocks for final classes", "Tim van der Lippe", "TimvdLippe", "03/01/19, 01:13:10 PM", "The guard for final mocking was incorrect. It should have passed it on\r\nto MockitoCore. Since we have the InlineMockMaker, we can actually mock,\r\nso this check was incorrect.", "NaN"], ["1644", "VerificationCollector to handle non-matching args and other assertions", "Fr Jeremy Krieg", "kriegfrj", "03/04/19, 09:30:49 AM", "This fix for #1642 widens the catch in `VerificationCollectorImpl` so that it will catch any `AssertionError`, rather than just `MockitoAssertionError`. In this way, any comparison failures (such as the built-in argument comparison when running under JUnit) will also be collected rather than propagating through to the test framework.\r\n\r\nThere are also two commits which are more cosmetic improvements to `VerificationCollectorImplTest`:\r\n\r\n* Rename `assertAtLeastOneFailure()` to `assertExactlyOneFailure()` (more accurate description of what it does).\r\n* Change `Assert.fail()` to AssertJ's `assertBecauseExceptionWasNotThrown()` (produces better diagnostics in the case of a failure).", "NaN"], ["1646", "Add back getArgument(int, Class) to circumvent compilation issues", "Tim van der Lippe", "TimvdLippe", "03/15/19, 05:19:37 PM", "Also add `@NotExtensible` to several of our interfaces to document they\r\nare not intended to be subclassed.\r\n\r\nFixes #1609", "NaN"], ["1647", "Update shipkit plugin (v2.1.6)", "Erhard Pointl", "epeee", "03/04/19, 05:54:49 PM", "and increase the version since we already have a tag for 2.24.8.\r\n\r\nfixes #1645 \r\n\r\nshipkit v2.1.6 contains a fix for wrong task order (see https://github.com/mockito/shipkit/issues/781)\r\n\r", "NaN"], ["1648", "Prevent NPE in findTypeFromGenericInArguments", "Tim van der Lippe", "TimvdLippe", "03/05/19, 03:34:31 PM", "There was only a single test failing on this. I think the issue was RETURNS_SMART_NULLS in combination with an ArgumentCaptor, but\r\ncouldn't figure that part out. At least this fixes prevented the NPE.", "NaN"], ["1660", "Fix typo", "Jason B.", "jb08", "03/08/19, 04:48:54 PM", "small typo in checkstyle file.\r", "NaN"], ["1665", "New public API: invocation.getArgumentsAsMatchers()", "Bruno Bonanno", "bbonanno", "03/28/19, 02:32:40 PM", "- New public API: invocation.getArgumentsAsMatchers(), useful for advanced integrations, such as mockito-scala\r\n- Some internal refactorings that provide temporary help with mockito-scala integration\r\n\r\nFixes #1664", "NaN"], ["1667", "Improved IDE experience for JUnit5 - visual comparison failure", "Fr Jeremy Krieg", "kriegfrj", "03/22/19, 03:46:12 AM", "When JUnit5+Mockito is used in modern IDE (IDEA, Eclipse) we now show \"visual\" comparison failure pop-up for certain Mockito exceptions (such as ArgumentsAreDifferent).\r\n\r\nFixes #1663.", "NaN"], ["1669", "Add ErrorProne subproject", "Tim van der Lippe", "TimvdLippe", "03/20/19, 08:47:27 PM", "These checkers allow us to enforce API contracts that the Java compiler\r\notherwise would not enforce. As a first example, the added checker\r\nenforces that users can not subclass interfaces that are annotated by\r\n`@NotExtensible`.\r\n\r\nFixes #1668", "NaN"], ["1670", "Add support for Answer6 and VoidAnswer6", "Per Lundberg", "perlun", "03/22/19, 06:12:43 PM", "Regretfully, I ran into a case where I needed to mock a six-argument method. One can of course claim that such methods _ought not to exist_, but sadly, this is not always the reality and I think that some pragmatism is useful in tools like Mockito, so here is my attempt at adding support for it.\r\n\r\nOf course, it's possible to use the plain `Answer` interface in this case, but adding a dedicated `Answer6` interface makes it more convenient on the user; `Answer` is a quite raw interface.\r\n\r\n(I'm not sure if this should target the 2.x release or `master` also, but feel free to cherry-pick as needed after review/merge.)", "NaN"], ["1672", "Report initialization failures per test method", "Marc Philipp", "marcphilipp", "03/23/19, 02:43:59 PM", "Prior to this commit, `DefaultInternalRunner` threw an exception when\r\n`MockitoAnnotations.initMocks()` failed from the overridden\r\n`withBefores` method. Instead, it now returns a `Statement` that is\r\nresponsible for initializing. Potential exceptions are then handled by\r\nJUnit, regardless whether version 4.12 or 4.13-beta-2 is used. Instead\r\nof reporting a class-level error, JUnit will now report a failure for\r\neach test method in such test classes.\r\n\r\nRelated issue: junit-team/junit4#1599\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1673", "Bumped ByteBuddy to 1.9.11", "Szczepan Faber", "mockitoguy", "03/26/19, 12:53:45 AM", "Fixes #1606\r\n\r\nTested by running the build.", "NaN"], ["1676", "Pinned ByteBuddy to 1.9.10", "Szczepan Faber", "mockitoguy", "03/27/19, 02:10:44 PM", "It seems that new version of BB breaks the build for Java 9+. I'm still investigating. Opening the PR for visibility - we can see if the build is happy now.", "NaN"], ["1680", "Fix handling of generic Void type for doNothing()", "Tim van der Lippe", "TimvdLippe", "04/10/19, 10:48:51 AM", "When the return type bound to a generic type resolved to Void,\r\n`doNothing()` would still throw an exception. Update the `isVoid`\r\nimplementation to also handle generic return types.", "NaN"], ["1683", "Eagerly compute stackTraceLine in LocationImpl", "Tim van der Lippe", "TimvdLippe", "04/10/19, 04:56:38 PM", "On typical tests with large stacktraces and many invocations on mocks,\r\nthe storing of Throwable in `stackTraceHolder` would result in\r\nOutOfMemoryErrors. Eager computation of the stackTraceLine resulted in a\r\n~2/3rd memory reduction of a typical test (1.5GB -> 400MB).", "NaN"], ["1690", "Add ErrorProne MockitoInternalUsage checker", "Tim van der Lippe", "TimvdLippe", "04/30/19, 03:58:37 PM", "This checker will warn on any usage of a Mockito internal symbol. Since\r\nwe do not guarantee API stability on symbols in our internal packages,\r\nusers should not rely on them. This checker can be used to enforce that\r\nthey are unused.", "NaN"], ["1693", "Make `MockitoNotExtensible` service-loadable", "Stephan Schroevers", "Stephan202", "04/30/19, 02:57:23 PM", "This way Error Prone can find the plugin when `mockito-errorprone` is added to the annotation processor classpath.\r\n\r\nFixes #1692.", "NaN"], ["1695", "Fix javadoc typo and use HTML list", null, "Marcono1234", "05/03/19, 02:54:22 PM", "The javadoc for `InvocationOnMock.getArgument(int index, Class<T> clazz);` had two typos:\r\n- \"to directly **pas** the result\"\r\n- \"**clazz** to cast the argument to\"\r\n\r\nAdditionally I changed the list to be a proper HTML list, the current version just collapsed it into one text block: https://static.javadoc.io/org.mockito/mockito-core/2.27.0/org/mockito/invocation/InvocationOnMock.html#getArgument-int-java.lang.Class-\r\n\r\nIt might also be worth it adding the actual HTML paragraphs into the javadoc (for the other methods as well).", "NaN"], ["1698", "Fix ClonesArguments for null and arrays", null, "tombrown52", "05/01/19, 03:27:11 PM", "The ClonesArguments class works for many cases, but fails when trying to clone an argument that is an array, or is null. This PR fixes those edge cases. This does not directly resolve any open issue, but it is related to #1153, #1469\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r", "NaN"], ["1699", "Fix JaCoCo code coverage report", "Marc Philipp", "marcphilipp", "04/30/19, 07:32:20 PM", "Instead of collecting execution data of all test tasks of all\r\nsubprojects in a single file, each subproject's test task writes its own\r\nexecution data file. The `mockitoCoverage` task is configured to include\r\nall execution data files into account that exists when it starts. This\r\nis done to avoid exceptions for missing files for skipped test tasks for\r\nthe `android` and `errorprone` subprojects.\r\n\r\nFixes #1689.\r\n\r\n---\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1700", "use of capital letter at the start as a small", "\u00f6nder sezgin", "onderson", "05/01/19, 01:02:29 PM", "typo fix\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [ ] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1701", "Show multiple invocations on argumentsAreDifferent", "Tim van der Lippe", "TimvdLippe", "05/02/19, 11:01:01 PM", "This is the reconciliation of #1556 with the tests fixed and implementation rebased on `release/2.x`.\r\n\r\nFixes #1542 ", "NaN"], ["1702", "Migrate settings.gradle to settings.gradle.kts", "Erhard Pointl", "epeee", "05/03/19, 11:37:19 AM", "a new version of #1372", "NaN"], ["1703", "Use require instead of assert in settings.gradle.kts", "Erhard Pointl", "epeee", "05/05/19, 03:05:59 AM", "While migrating a very first subproject to kotlin I realized that the current implementation does not fail if e.g. the expected build file is not available.\r\nI will provide another pr with the actual migration of the first subproject once this pr is merged.", "NaN"], ["1704", "Migrate junitJupiterExtensionTest subproject to kotlin dsl", "Erhard Pointl", "epeee", "05/06/19, 09:56:26 PM", "Another step towards #1359.\r\nThis pr migrates a very first subproject to kotlin dsl.", "NaN"], ["1705", "Remove no longer relevant code from settings.gradle.kts", "Erhard Pointl", "epeee", "05/05/19, 08:06:06 PM", "No need to enable feature preview for \"STABLE_PUBLISHING\" any longer since it is default starting from gradle 5.0.", "NaN"], ["1706", "Fix a typo", "Jakub Vr\u00e1na", "vrana", "05/06/19, 04:44:05 PM", "> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1707", "Change master to release/3.x in pull request template", "Jakub Vr\u00e1na", "vrana", "05/06/19, 04:43:21 PM", "> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 2.x, make your pull request target `release/2.x`\r\n> - On next mockito version make your pull request target `master`\r\n\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1708", "Fixes #1623 : Rename TooLittleActualInvocations", "Ryan Pickett", "hdpe", "05/06/19, 05:31:56 PM", "Rename the exception TooLittleActualInvocations to\r\nTooFewActualInvocations as this is more correct English. As this\r\nexception is public API, we rename by subclassing and deprecating the\r\noriginal. Rename all tests and internal methods that were referencing\r\nthe old name by aligning with the new name.\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/2.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1714", "Fixes #1713: fix typo in Mockito.java javadoc", "David Genesis Geniza Cruz", "davidgenesiscruz", "05/22/19, 10:32:17 AM", "I was confused and tried to look for `verifyNoMoreInvocations` when I came across this javadocs.\r\nHopefully, this prevents further confusion.", "NaN"], ["1715", "Fixes #298: replaces Objenesis references from stubbing classes with plugin equivalents.", "Tom Ball", "tomball", "05/24/19, 07:17:41 PM", "This enables the iOS Mockito plugin\r\n(https://github.com/google/j2objc/tree/master/testing/mockito) to upgrade to v2.", "NaN"], ["1718", "Fixes #1717 : configure the MethodVisitor for Java 11 compatibility", "Frank Pavageau", "fpavageau", "05/24/19, 08:24:16 PM", "I'm looking into adding a unit test, if I can find how to use Byte Buddy to generate a class with a Conditional Dynamic instruction when running with Java 11.", "NaN"], ["1720", "Add missing 'be' in javadoc", "Christoph Wagner", "WagnerChristoph", "05/24/19, 11:12:57 PM", "NaN", "NaN"], ["1723", "Change implementation of ExceptionFactory to explicitly test for dependent classes", "Fr Jeremy Krieg", "kriegfrj", "07/19/19, 10:25:51 AM", "The original implementation of conditional OpenTest4J support (#1667) relied on some implicit behaviour of the Java classloader to generate and catch the exception at the right time. It seems that this behaviour is not always exactly replicated in all environments - for example, in #1716, where Mockito was being used in an instrumentation test that was being run on an Android emulator.\r\n\r\nThe new implementation is a bit more direct in how it tests for the dependent classes. The existing test cases still pass, and @matejdro confirmed that this fixed his problem.\r\n\r\nFixes #1716.", "NaN"], ["1726", "[2.x] Fix missing README logo and other broken links", "William Collishaw", "WilliamCollishaw", "06/11/19, 11:29:33 AM", "Noticed the logo in the README was a broken link. Found a few more broken links and master branch comments that needed updating:\r\n<img width=\"1061\" alt=\"Screen Shot 2019-06-10 at 6 24 27 PM\" src=\"https://user-images.githubusercontent.com/16943514/59235112-15089d80-8bad-11e9-986e-e0ddb375d128.png\">\r", "NaN"], ["1727", "[3.x] Fix missing README logo and other broken links", "William Collishaw", "WilliamCollishaw", "06/11/19, 11:30:04 AM", "Same fix as #1726 for 3.x", "NaN"], ["1733", " verifyNoInteractions guarantees no interactions with mock", "Federico Fissore", "ffissore", "07/08/19, 06:13:55 PM", "With #995 I provided a fix to #977 and #989\r\nHowever that PR targeted `master`, which eventually became `old-3.x`, and its code didn't make it into `release/3.x`.\r\n#977 and #989 should be reopened.\r\n\r\nI have back-ported that PR to target `release/3.x`.\r\n`verifyZeroInteractions` is marked as `@Deprecated` and a new `verifyNoInteractions` is added. There are no breaking changes AFAIK, so this code is backwards compatible.\r\nSince I don't know if/when this code will ship, javadocs contain a placeholder `Since 3.x.x`", "NaN"], ["1739", "Consistent punctuation in hints list for UnfinishedStubbingException", "Andrew Ash", "ash211", "07/11/19, 10:24:23 PM", "Previously the numbered list had two periods and a colon after the three numbers.\r\n\r\nAfter, it consistently uses dots like other suggestions, i.e. missingMethodInvocation", "NaN"], ["1745", "Fixes #1743: Clarify default answer in 3.0.0", "Arend v. Reinersdorff", "arend-von-reinersdorff", "07/26/19, 08:20:38 PM", "API changes postponed to 4.0.0. Default answer has not been changed in 3.0.0.", "NaN"], ["1750", "Travis: Explicit distribution of trusty", "Piotrek \u017bygie\u0142o", "pzygielo", "07/26/19, 06:49:47 PM", " - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\nFixes Travis build\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\nhttps://travis-ci.community/t/solved-oraclejdk8-installation-failing-still-again/3428\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1751", "Use OpenJDKs", "Piotrek \u017bygie\u0142o", "pzygielo", "08/11/19, 01:55:51 PM", " - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n\r\nKind of follow-up to https://github.com/mockito/mockito/pull/1749#issuecomment-515678241\r\n\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r", "NaN"], ["1752", "Remove JDK env, not corresponding with jdk used", "Piotrek \u017bygie\u0142o", "pzygielo", "08/11/19, 03:13:08 PM", " - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each  commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1760", "Minor bug fixes", "Mateusz Mrozewski", "mateuszmrozewski", "08/16/19, 02:51:44 PM", "Fixes #1747: removed typo\r\nFixes #1513: Added missing tag to fix javadoc\r\n\r\nSupersedes and closes #1748", "NaN"], ["1762", "Fixes #1758: Method GenericTypeExtractor#findGenericInterface always \u2026", "Sergey", "serssp", "08/19/19, 06:20:43 PM", "\u2026returns first interface", "NaN"], ["1765", "Update assertj (v3.13.2)", "Erhard Pointl", "epeee", "08/25/19, 02:33:26 PM", "Since mockito 3.x now has java8 as minimum requirement we could go for assertj 3.x (which also has java8 as minimum requirement).\r", "NaN"], ["1773", "Fixes #1769: Clarify default strict stubbing behaviour in 3.0.0", "Guillermo Pascual", "pasku", "09/04/19, 09:51:18 PM", "Similar to https://github.com/mockito/mockito/pull/1745 as requested by @TimvdLippe in https://github.com/mockito/mockito/issues/1769\r\n\r\nCloses #1769", "NaN"], ["1777", "Get rid of no longer used Assertor", "Erhard Pointl", "epeee", "09/10/19, 04:04:38 AM", "A minor one, remove no longer used Assertor.java.\r", "NaN"], ["1781", "Fixes #1780: Close file handle to avoid a file-handle-leak", "Dominik Stadler", "centic9", "09/17/19, 03:06:53 PM", "Fix a small file-handle-leak which pops up when running tests with [file-leak-detector](https://file-leak-detector.kohsuke.org/) \r\n\r\nFixes #1780", "NaN"], ["1783", "Cleaned up state after stubbing misuse exception", "Szczepan Faber", "mockitoguy", "09/25/19, 02:53:33 PM", "Fixes #1655", "NaN"], ["1787", "Fixes #1786 : Clarify differences between 'timeout' and 'after'", "Danny M\u00f6sch", "SimplyDanny", "09/28/19, 11:07:21 AM", "Tries to improve the JavaDoc for `timeout` to differentiate it from `after` directly in the first sentence.", "NaN"], ["1788", "Upgraded JUnit Jupiter 5.1.1 -> 5.4.2", "Szczepan Faber", "mockitoguy", "09/28/19, 07:02:43 PM", "We need higher version of JUnit Jupiter to reproduce and fix #1630\r\n\r\nAdded a test to enhance coverage", "NaN"], ["1789", "Fixed JUnit Jupiter parallel issue", "Szczepan Faber", "mockitoguy", "09/30/19, 04:51:00 PM", "Fixes #1630\r\n\r\nThis fix improves Mockito JUnit Jupiter extension. However, it does not completely resolve all kinds of parallel issues when nested test classes are used. I'll open a separate ticket for it.", "NaN"], ["1790", "Enable spotless to automatically format our source code", "Tim van der Lippe", "TimvdLippe", "10/07/19, 04:14:20 PM", "Spotless [1] has been used by various popular open source projects,\r\nincluding JUnit [2]. While working on Mockito inside of Google, I\r\ndiscovered that our formatting is inconsistent. We can use Spotless to\r\nautomatically take care of that.\r\n\r\nTo be able to format the source code, run\r\n\r\n./gradlew spotlessApply\r\n\r\nThis check runs on Travis to make sure code remains formatted. This\r\nshould also reduce the amount of trouble with the CheckStyle linter, as\r\nSpotless will automatically resolve these issues.\r\n\r\nOn purpose, the spotless configuration is quite minimal. The current\r\nconfiguration is mostly a reflection on the current state of affairs. We\r\ncan later discuss different configuration options and how we can\r\nintegrate them.\r\n\r\n[1]: https://github.com/diffplug/spotless/tree/master/plugin-gradle\r\n[2]: https://github.com/junit-team/junit5/blob/3f491f3148d2c745808fc75b0a802b60243e104e/build.gradle.kts#L124-L144", "NaN"], ["1792", "Fix grammar", "Michael Keppler", "Bananeweizen", "10/01/19, 11:54:47 AM", "Past tense of \"to nest\" is \"nested\". Also fix plenking.\r", "NaN"], ["1793", "Delete dummy-commit.txt", "Dinesh Bolkensteyn", "dbolkensteyn", "10/01/19, 04:10:13 PM", "The `--allow-empty` option of `git commit` allows one to create dummy commits without any code change.\r\n\r\nMoreover, this file was last modified 3 years ago and therefore might be a good candidate for removal.", "NaN"], ["1795", "Typos and upcoming warnings", "Dr. Thomas Tautenhahn", "DrTTom", "12/07/19, 05:57:48 PM", "Fixed some typos which where found by a spell checker.\r\n\r\ncheck list\r\n\r\n - [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [X] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1798", "Fix typo in the wiki link", "Kemal \u00d6zcan", "yekeoe", "10/05/19, 10:08:12 AM", "Fixes #1791\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1799", "Fixes placeholder `3.x.x` version in javadoc with correct `3.0.1`", "Federico Fissore", "ffissore", "10/07/19, 04:04:22 PM", "This is a small javadoc fix\r\n\r\nWhen I contributed with #1733, I didn't know which version of mockito will have included it, so I left a placeholder `3.x.x` in the javadoc. I then forgot to update the code once `3.0.1` was tagged.", "NaN"], ["1805", "Added Tidelift info to README.md", "Szczepan Faber", "mockitoguy", "10/31/19, 05:33:33 AM", "Added Tidelift blurp info to README.md. It's one of the Tidelift tasks and I think it's ok.", "NaN"], ["1806", "Fixed JUnit5 concurrency bug", "Szczepan Faber", "mockitoguy", "10/31/19, 05:51:32 AM", "Fixed JUnit Jupiter MockitoExtension so that it behaves correctly in a parallel execution with nested tests. I found this issue recently when working on the extension. ThreadLocal here is OK but I'm happy to use a different solution if someone has a better idea.\r\n\r\nAdded a new test that was failing prior to this change.", "NaN"], ["1807", "Add default implementation for VerificationMode#description", "Tim van der Lippe", "TimvdLippe", "10/23/19, 06:07:05 AM", "This method was added in Mockito 2 ([1]) and was implemented in all\r\nrelevant subclasses. However, most subclasses do not implement a custom\r\ndescription.\r\n\r\nSince we are now building on Java 8, we can ship this as a default\r\nmethod and remove all duplicate subclass implementations. As a\r\nside-effect, it allows users of Mockito 1 to migrate to Mockito 3\r\nwithout additional breakages. (They could implement it, but\r\nVerificationModeFactory is internal and would require additional\r\nboilerplate)\r\n\r\n[1]: https://github.com/mockito/mockito/pull/68", "NaN"], ["1809", "update javadoc.io link from /page/ to /doc/, which gives an extra nav\u2026", "Max Zhu", "maxcellent", "10/25/19, 01:18:31 PM", "\u2026 bar on the top so that users can easily navigate to old versions\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 3.x, make your pull request target `release/3.x`\r\n> - On mockito 2.x, make your pull request target `release/2.x` (2.x is in maintenance mode)\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1810", "Revert \"Fixes #1587 : Remove unnecessary loop from InjectingAnnotationEngine\"", "Tokuhiro Matsuno", "tokuhirom", "10/29/19, 10:37:02 AM", "Reverts mockito/mockito#1588\r\nRelated to #1631 \r\n\r\nHere's a pseudo code to describe the issues around this issue.\r\n\r\n# Before 2.23.15:\t\r\n\r\n```\r\nwhile (clazz != Object.clazz) {\r\n\tval mocks = aggregateSpyOrMockFields(clazz.getMockFields());\r\n  val fields = aggregateInjectMocksFields(clazz);\r\n\tval ret = tryConstructorInjection(clazz, fields, mock);\r\n  if (! ret.fieldWasInitializedUsingConstructorInjection()) {\r\n    trySetterOrPropertyInjection(clazz, fields, mock);\r\n  }\r\n\tclazz = clazz.getSuperclass();\r\n}\r\n```\r\n# After 2.23.15:\r\n```\r\n\tval mocks = aggregateSpyOrMockFields(clazz.getMockFields());\r\n  val fields = aggregateInjectMocksFields(clazz);\r\n\tval ret = tryConstructorInjection(clazz, fields, mock);\r\n  if (! ret.fieldWasInitializedUsingConstructorInjection()) {\r\n    trySetterOrPropertyInjection(clazz, fields, mock);\r\n  }\r\n```\r\n\r\n# Details\r\n\r\nBefore 2.23.15, if the `@InjectMocks` field has a field that not listed in the constructor argument will fill by setter/property injection at the 2nd loop \ud83d\ude03\r\nIt may not the expected behaviors by Mockito authors, but some users' code depends on this behavior.\r\n\r\nMy suggestion is to revert the [Fixes #1587 : Remove unnecessary loop from InjectingAnnotationEngine by LihMeh \u00b7 Pull Request #1588 \u00b7 mockito/mockito \u00b7 GitHub](https://github.com/mockito/mockito/pull/1588) at this time.\r", "NaN"], ["1811", "Apply consistent import ordering with spotless", "Tim van der Lippe", "TimvdLippe", "10/31/19, 03:52:29 PM", "Spotless allows us to enforce a consistent import order. Configure it\r\nsuch that static imports are first and non-static imports afterwards.\r\nWithin imports, java imports first, then javax, then all others.\r\n\r\nThis is consistent with the existing CONTRIBUTING.md guidelines, apart\r\nfrom the fact that static imports are first. (File has been updated). I\r\nwould propose that makes more sense, but happy to discuss.\r\n\r\nIn any case, spotless already found inconsistent ordering within imports\r\nthemselves, so that is already providing value for consistency.\r\n\r\nI have also updated the CONTRIBUTING guidelines to explain how\r\n`./gradlew spotlessApply` will fix a lot of issues without the\r\ndeveloper having to worry about it. That should hopefully help newcomers\r\nmake changes more confidently.\r\n\r\n(The only 2 files that are interesting to you are the `build.gradle` and\r\n`.github/CONTRIBUTING.md`. All other file changes were automatically\r\nperformed after running `./gradlew spotlessApply` locally.)", "NaN"], ["1813", "Fixes #1771: Upgrade byte-buddy to 1.10.2 (from 1.9.10)", "Tokuhiro Matsuno", "tokuhirom", "10/29/19, 10:36:09 AM", "Release notes:\r\nhttps://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.2\r\nhttps://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.1\r\nhttps://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.0\r\nhttps://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.9.16\r\nhttps://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.9.15\r\nhttps://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.9.14\r\nhttps://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.9.13\r\nhttps://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.9.12\r\nhttps://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.9.11\r\n\r\nRelevant commits:\r\nraphw/byte-buddy@byte-buddy-1.9.10...byte-buddy-1.10.2", "NaN"], ["1816", "fix document error", null, "diguage", "11/06/19, 10:46:14 AM", "`list.contains(any())` return a `boolean` value, not a `String` value.", "NaN"], ["1818", "Add Duration overloads. Fixes #1815", "Kurt Alfred Kluever", "kluever", "11/07/19, 01:59:57 PM", "Add new `java.time.Duration`-based public APIs to `Mockito`, `After`, and `Timeout` and deprecate the corresponding `long`-based public APIs.\r\nPlumb those `Duration` instances through the internals of Mockito.", "NaN"], ["1819", "Deprecate MockitoHamcrest", "Tim van der Lippe", "TimvdLippe", "11/18/19, 05:11:12 PM", "This class was used during the migration period from Mockito 1 and\r\nMockito 2, but is no longer necessary. To be able to remove our\r\ndependency on Hamcrest, we should remove MockitoHamcrest.\r\n\r\nIn response to #1817", "NaN"], ["1820", "Indent with spaces using spotless", "Tim van der Lippe", "TimvdLippe", "11/07/19, 08:27:47 PM", "Discovered in #1818 that (if new contributors are unaware of our indentation with 4 spaces), spotless did not fix the formatting. `indentWithSpaces(4)` does just that and it actually found other formatting issues.", "NaN"], ["1821", "Guard against multiple evaluations of before statement", "Marc Philipp", "marcphilipp", "11/10/19, 08:02:27 PM", "Some rules evaluate the base statement multiple times, e.g. to execute\r\ntests repeatedly. The changes made in #1672 led to an exception in such\r\ncases because the `MockitoListener` was registered multiple times. Now,\r\nwe only add the listener the first time the statement is evaluated in\r\norder to restore the old behavior.\r\n\r\nFixes #1767.", "NaN"], ["1823", "fix a word mistake", "Ser\u017c Kwiatkowski", "scadgek", "11/13/19, 01:46:18 PM", "NaN", "NaN"], ["1828", "Upgrade byte buddy to 1.10.3", "Dmitry Timofeev", "dmitry-timofeev", "11/26/19, 09:23:19 PM", "Release notes: https://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.3\r\n\r\nUpgrading to the newer version in our project fixed inline mocks, broken with Java 13 (see #1827 and https://github.com/mockito/mockito/issues/1483#issuecomment-535993240).\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 3.x, make your pull request target `release/3.x`\r\n> - On mockito 2.x, make your pull request target `release/2.x` (2.x is in maintenance mode)\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [ ] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1832", "Add matchers for incompatible type matchers", "Tim van der Lippe", "TimvdLippe", "12/07/19, 05:56:19 PM", "We discovered that users run into issues with using the wrong Mockito\r\nmatcher for arguments. Examples include `any(Integer.class)` instead of\r\n`anyInt()` and `anyInt()` instead of `anyFloat()`. Users then run into\r\ncryptic run-time errors that are difficult to understand.\r\n\r\nThese ErrorProne checkers make these a compile warning, to warn the user\r\nbefore hand. They also provide the appropriate fixes that can be\r\ndirectly applied.", "NaN"], ["1840", "Fixes #1839 : Badge improvements in README.md", "Pavel Roskin", "proski", "12/06/19, 03:25:02 PM", "```\r\n*  Fixes #1839 : Badge improvements in README.md\r\n   \r\n   Use shields.io badge for Bintray, as the Bintray hosted badge shows\r\n   \"Download\" and cannot be made to show \"Bintray\".\r\n   \r\n   Split an excessively long line for the first row of badges.\r\n   \r\n   Update the alt text for \"Release Notes\". Non-graphical users would only\r\n   see a link to the release notes.\r\n   \r\n   \"Javadoc\" was misspelled as \"Javadocs\".\r\n   \r\n   Use HTTPS for all links.\r\n   \r\n   Use direct links to the package on Maven Central and Bintray.\r\n   \r\n   Use the default color for Javadoc, red looks as an error.\r\n```", "NaN"], ["1842", "Upgrade byte buddy to 1.10.5", "Ville Saukkonen", "villesau", "12/12/19, 12:53:14 AM", "check list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r\nFixes #1841 \r\n\r\nByte buddy had a bug that prevented running tests in IntelliJ that's now fixed.", "NaN"], ["1845", "Revert \"Add Duration overloads. Fixes #1815\"", "Tim van der Lippe", "TimvdLippe", "12/16/19, 11:47:03 AM", "Reverts mockito/mockito#1818\r\n\r\nFixes #1843", "NaN"], ["1847", "Fixed undetected unused stubbing when matching previous stubbed call", "Andrei Silviu Dragnea", "andreisilviudragnea", "12/31/19, 03:09:33 AM", "Fixes #1846\r\n\r", "NaN"], ["1849", "Performance optimization by using Method.getParameterCount() where possible", "Christoph Dreis", "dreis2211", "12/31/19, 04:27:13 PM", "Hi,\r\n\r\nas described in #1848 we could make use of `Method.getParameterCount()` in order to save some overhead from unnecessary cloning caused by `Method.getParameterTypes()`.\r\n\r\nAs this is my first contribution to Mockito, let me know if I can do something to help.\r\n\r\nLet me know what you think.\r\nCheers,\r\nChristoph", "NaN"], ["1850", "Fixes  #522 : Basic test suite for OSGi framework", null, "theogimonde", "12/24/19, 08:56:07 PM", "This is a proposal for a basic test project to ensure that the Mockito artifacts can be consumed from an OSGi environment. For example, reverting the fix for #678 is caught with the following exception:\r\n\r\n```\r\njava.lang.IllegalStateException: Failed to install bundle: mockito-core-3.2.3.jar\r\n\tat org.mockito.osgitest.OsgiTest.setUp(OsgiTest.java:55)\r\n\t... (snipped)\r\nCaused by: org.osgi.framework.BundleException: Error occurred installing a bundle.\r\n\tat org.eclipse.osgi.storage.Storage.install(Storage.java:739)\r\n\tat org.eclipse.osgi.internal.framework.BundleContextImpl.installBundle(BundleContextImpl.java:187)\r\n\tat org.eclipse.osgi.internal.framework.BundleContextImpl.installBundle(BundleContextImpl.java:179)\r\n\tat org.mockito.osgitest.OsgiTest.setUp(OsgiTest.java:53)\r\n\t... 40 more\r\nCaused by: java.lang.IllegalArgumentException: invalid range \"[1.6.0\": invalid format\r\n\tat org.osgi.framework.VersionRange.<init>(VersionRange.java:173)\r\n\tat org.eclipse.osgi.container.builders.OSGiManifestBuilderFactory.addPackageImports(OSGiManifestBuilderFactory.java:373)\r\n\tat org.eclipse.osgi.container.builders.OSGiManifestBuilderFactory.getPackageImports(OSGiManifestBuilderFactory.java:352)\r\n\tat org.eclipse.osgi.container.builders.OSGiManifestBuilderFactory.createBuilder(OSGiManifestBuilderFactory.java:111)\r\n\tat org.eclipse.osgi.container.builders.OSGiManifestBuilderFactory.createBuilder(OSGiManifestBuilderFactory.java:78)\r\n\tat org.eclipse.osgi.storage.Storage.getBuilder(Storage.java:784)\r\n\tat org.eclipse.osgi.storage.Storage.getBuilder(Storage.java:766)\r\n\tat org.eclipse.osgi.storage.Storage.install(Storage.java:706)\r\n\t... 43 more\r\nCaused by: java.util.NoSuchElementException\r\n\tat java.util.StringTokenizer.nextToken(StringTokenizer.java:349)\r\n\tat org.osgi.framework.VersionRange.<init>(VersionRange.java:157)\r\n\t... 50 more\r\n```\r\n\r\nThe OSGi test project consists of three source sets:\r\n\r\n1. A regular JUnit4 `test` source set with a single class OsgiTest. Starts an OSGi framework, installs mockito-core, byte-buddy and objenesis bundles as well as two test bundles, and executes some simple Mockito test cases inside the OSGi framework.\r\n2. A source set `testBundle` that's built to an OSGi bundle using the `Bundle` task from the Bnd Gradle Plugin. Contains the test classes that run the Mockito test cases and thus depends on the Mockito bundle.\r\n3. A source set `otherBundle` that's also built to an OSGi bundle but with no other dependencies. Used for testing mocking of classes from other bundles.\r\n\r\nSome further technical details:\r\n\r\n- The `test` source set only has compile dependencies on the OSGi APIs and JUnit4, i.e. not on Mockito. The OSGi framework is created using the standard Framework API. At runtime Equinox is added as a dependency to supply an actual framework implementation, but the intention is that any framework implementation could be used.\r\n- The test cases are run by loading classes from the test bundle that all implement `Runnable`. This is to provide a simple bridge using a common JDK class. The reason for setting up such a bridge is that I want to drive the tests using a test runner that Gradle supports, for example to get good test reports, but the test bundles don't know anything about JUnit4 inside the OSGi framework. I didn't want to explore adding an OSGified version of JUnit into the mix at this point since that would also entail solving test discovery inside an OSGi framework.\r\n- The OSGi bundles are built using the [Bnd Gradle Plugin](https://github.com/bndtools/bnd/blob/master/biz.aQute.bnd.gradle/README.md#gradle-plugin-for-workspace-builds) instead of the deprecated `osgi` plugin in Gradle. The reason is both future proofing, to not impede a migration to Gradle 6.0 in this new sub project, and that I believe it better mirrors how other projects would consume the Mockito artifacts. Further it paves the way for replacing the usage of the deprecated plugin for the creating the OSGi manifests in the root project.\r\n\r\nSince this is my first contribution I'll be happy to fix anything that goes against the grains.", "NaN"], ["1854", "Fixes #1853: Allow @MockitoSettings to be inherited", "Fabian Mendez", "fabianMendez", "01/02/20, 10:43:47 PM", " - [X] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [X] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [X] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [X] Avoid other runtime dependencies\r\n - [X] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [X] The pull request follows coding style\r\n - [X] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [X] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1858", "Add TestRule to MockitoJUnit", "Tim van der Lippe", "TimvdLippe", "02/06/20, 12:46:12 PM", "JUnit has two types of test rules: MethodRule and TestRule. The existing\r\nMockitoJUnit rule returns a MockitoRule which extends MethodRule.\r\nHowever, since this is not a TestRule, some features of JUnit do not\r\nnicely integrate with Mockito. For example, the RuleChain feature of\r\nJUnit only works on TestRules.\r\n\r\nTherefore, add a separate entrypoint to MockitoJUnit which returns a\r\nTestRule that can be integrated with RuleChain. It introduces a separate\r\ninterface to make this distinction clear. If we would change the\r\nexisting MockitoRule to also extend TestRule, the JUnit logic would no\r\nlonger run the MethodRule [1] and would thus break existing users.\r\n\r\n[1]: https://github.com/junit-team/junit4/blob/2df7e0882128d551565f87f688bbe745d85aacba/src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java#L402", "NaN"], ["1859", "Add NotExtensible to OngoingStubbing", "Tim van der Lippe", "TimvdLippe", "01/15/20, 11:00:10 PM", "This interface is not intended to be subclassed and should therefore be\r\nmarked as such.", "NaN"], ["1862", "Revert \"Performance optimization by using Method.getParameterCount() where possible\"", "Tim van der Lippe", "TimvdLippe", "01/27/20, 11:07:05 AM", "Reverts mockito/mockito#1849\r\n\r\nIt breaks all downstream Android applications, see https://github.com/mockito/mockito/pull/1849#issuecomment-577139089", "NaN"], ["1863", "Adds the Official Gradle Wrapper Validation GitHub Action", "Brice Dutheil", "bric3", "01/22/20, 03:54:56 PM", "The idea is to alert when a PR introduces non official gradle wrapper\r\nto prevent _social engineering supply chain attack_.\r\n\r\nSee: https://github.com/gradle/wrapper-validation-action", "NaN"], ["1867", "Upgrade assertj-core to version 3.15.0", "Stefano Cordio", "scordio", "01/30/20, 02:50:48 PM", "\r\n\r", "NaN"], ["1868", "Update Mockito version number for deletion of deprecated classes", "Stefano Cordio", "scordio", "01/31/20, 11:43:06 AM", "NaN", "NaN"], ["1878", "Revert \"Fixed undetected unused stubbing when matching previous stubbed call\"", "Tim van der Lippe", "TimvdLippe", "02/26/20, 10:12:37 PM", "Reverts mockito/mockito#1847\r\n\r\nFixes #1877 \r\nBased on feedback in #1846", "NaN"], ["1881", "Fix UnnecessaryStubbingException javadoc", "Jean-Michel Leclercq", "LeJeanbono", "02/28/20, 10:20:06 PM", "Fix #1880 ", "NaN"], ["1890", "Fix mocks throwing same instance with throwable class", null, "dean-burdaky", "03/21/20, 02:37:30 PM", "Fixes mocks throwing the same Throwable instance consecutively after specifying the mock behaviour with `doThrow(Class)` or `thenThrow(Class)`.\r\n\r\nThis is achieved by moving the instantiation of the Throwable into a new Answer called ThrowsExceptionClass - much like ThrowsException. Then `thenThrow(Class)` calls `thenAnswer(Answer)` with a new instance of ThrowsExceptionClass rather than `thenThrow(Throwable)`. Similar for `doThrow(Class)`, `doThrow(Throwable)` and `doAnswer(Answer)`.\r\n\r\nFixes #1875 \r\n\r\n@TimvdLippe Just have a quick inquiry: The test in UninstantiableThrowableTest is failing because it expects an InstantiationError to be thrown in the middle of stubbing (check PR #1549). The new code doesn't instantiate in the middle of stubbing anymore. How do I ignore the test? Or do I just delete the test file? I'm used to using an annotation to ignore tests. The PR should be ready after that's sorted and any other suggested changes.", "NaN"], ["1892", "Make JARs build reproducibly", "Alex Wilson", "mrwilson", "03/24/20, 02:00:37 PM", "Fixes #1891 \r\n\r\n## Overview\r\n\r\nThis PR makes the java bytecode generated by this project [reproducible](https://reproducible-builds.org/). This means that under identical builds condition (for example Java version), repeated builds should provide the same output byte-for-byte.\r\n\r\nIt achieves this by:\r\n\r\n* using Gradle's [reproducible archives](https://docs.gradle.org/current/userguide/working_with_files.html#sec:reproducible_archives) functionality to fix timestamps and file ordering within JARs\r\n* re-archiving JARs that are non-deterministic because they contain timestamps in their Manifests\r\n\r\nMotivation for this change is best explained on the previously linked Reproducible Builds page.\r\n\r\n## Confirming the change\r\n\r\n```shell\r\n#!/bin/bash -e\r\n\r\nrm -f checksums*\r\n\r\n./gradlew clean build -x test --parallel\r\n\r\nfind . -name '*.jar' \\\r\n    | grep '/build/libs/' \\\r\n    | sort \\\r\n    | xargs sha256sum > checksums-1.txt\r\n\r\n./gradlew clean build -x test --parallel\r\n\r\nfind . -name '*.jar' \\\r\n    | grep '/build/libs/' \\\r\n    | sort \\\r\n    | xargs sha256sum > checksums-2.txt\r\n\r\ndiff checksums-1.txt checksums-2.txt\r\n```\r\n\r\nThe diff should be empty, that is to say, both independent runs of the build should have generated byte-for-byte identical outputs, with the exception of the JavaDocs jars\r\n\r\n## Omitting Javadocs\r\n\r\nDespite Gradle allegedly supporting `noTimestamp` through [StandardJavadocDocletOptions](https://docs.gradle.org/5.3/javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html), I was unable to actually get this to work and remove the timestamped build comment in the javadoc. \r\n\r\nI'll happily fold this into the PR if I (or someone else) can get it to work.\r\n\r\n---\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_", "NaN"], ["1893", "Fixes #id : 1888", "Shyam Sundar J ", "severussundar", "03/23/20, 05:50:14 PM", "PR to fix the typo in the documentation", "NaN"], ["1895", "Fixes #1894 checkstyle error on windows", "Marcin Miko\u0142ajczyk", "mikolajczykmarcin", "03/24/20, 08:37:34 PM", "windows has some issues with relative paths in checkstyle config files, additionally it failed with an Euro sign in code.\r\n\r\nplease verify if it also works on unix env", "NaN"], ["1896", "Feature/returns empty java8 time", "Marcin Miko\u0142ajczyk", "mikolajczykmarcin", "03/25/20, 06:07:25 PM", "Im not sure why I see the commit [https://github.com/mockito/mockito/commit/428713153a9fc38e0e2547b255b40e62e9dc8479](url) that was already merged in changes, but:\r\nwhen creating this PR I had in mind that I would merge with branch 2.x (I didnt know back then that v2.x is maintenance only) hence the reflection-based methods (also to keep the coding style of the ReturnsEmptyValues class)", "NaN"], ["1906", "[documentation] change deprecated warnings from 3.x -> 4.x", "Eitan Adler", "grimreaper", "04/12/20, 08:34:40 PM", "Problem\r\n\r\nWith the release of mockito 3.x as a purely java language version\r\nchange most of the comments referencing 3.x are wrong\r\n\r\nSolution\r\n\r\nMigrate the references to 3.x that I could find to 4.x\r\n\r\n[ci skip-release]\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_", "NaN"], ["1907", "[tests] use ArgumentMatchers over Matchers", "Eitan Adler", "grimreaper", "04/13/20, 01:12:13 PM", "Problem\nMatchers are considered deprecated but our own tests still use them.\n\nSolution\nStop using using them. Replace with ArgumentMatchers\n\n[ci skip-release]\n\ncheck list\n\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\n - [x] If possible / relevant include an example in the description, that could help all readers\n       including project members to get a better picture of the change\n - [x] Avoid other runtime dependencies\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\n       commit is meaningful and help the people that will explore a change in 2 years\n - [x] The pull request follows coding style\n - [/] Mention `Fixes #<issue number>` in the description _if relevant_\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_", "NaN"], ["1908", "[build] update gradle-errorprone-plugin to 1.1.0", "Eitan Adler", "grimreaper", "06/19/20, 09:29:16 PM", "Problem\r\nThe plugin for error-prone is out of date\r\n\r\nSolution\r\nUpdate the plugin.\r\n\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_", "NaN"], ["1911", "Fixes #1910: update description of ArgumentMatcher javadoc", null, "NanjanChung", "04/15/20, 10:18:12 AM", "For any(), the doc says that\r\n\"any() is an alias of: anyObject() and any(java.lang.Class).\"\r\nBut in the note, it says that\r\n\"Since mockito 2.1.0 any(Class) is not anymore an alias of this method.\"\r\nThis is confusing, so the alias in the doc should exclude any(java.lang.Class) to simply be\r\n\"any() is an alias of: anyObject()\"\r\nAlso update the same issue of anyObject().\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1914", "Fix Pattern matcher not matching to subregion", null, "dean-burdaky", "04/20/20, 03:44:31 PM", "Issue #1905 talked about a particular pattern using Java's Pattern class that causes Mockito to not properly match the argument (provided with an invocation) to the expected answer.\r\n\r\nIt was later discovered that the Pattern matcher matches to the entire region, not some subregion, by using Java's `Matcher.match()` (see [comment](https://github.com/mockito/mockito/issues/1905#issuecomment-615295546) in #1905). This commit fixes that by using `Matcher.find()`.\r\n\r\nFixes #1905", "NaN"], ["1920", "Update dependencies.gradle", "Improver", "netbeansuser2019", "04/30/20, 12:31:04 PM", "Upgrade byte-buddy\r\n\r", "NaN"], ["1922", "[build] add ben-manes dependency upgrade finder", "Eitan Adler", "grimreaper", "05/10/20, 10:26:35 AM", "Problem\r\n\r\nThe mockito build system has several pieces which are out of date. This\r\nincludes dependencies\r\n\r\nSolution\r\n\r\nThis plugin adds a new task dependencyUpdates which identifies\r\ndependencies which may be out of date\r", "NaN"], ["1927", "Fix import order", "Andrei Silviu Dragnea", "andreisilviudragnea", "05/08/20, 08:31:38 PM", "The import order specified in the contribution guideline does not match the actual code style used in the project.\r\n\r\nThere needs to be a blank line between Java imports and all other imports.", "NaN"], ["1928", "JUnit 5 strict stubs check should not suppress the regular test failure", "Andrei Silviu Dragnea", "andreisilviudragnea", "05/14/20, 02:46:16 PM", "If the test fails, MockitoExtension should not check for strict stubs at the end of the test, because the possible UnnecessaryStubbingException will end up as a suppressed exception on the test's initial failure.\r", "NaN"], ["1931", "Update report message to use any() instead of anyObject()", "Naoki Takezoe", "takezoe", "05/31/20, 12:38:17 PM", "Because `anyObject()` has already been deprecated, it would be better to push to use `any()` instead.\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 3.x, make your pull request target `release/3.x`\r\n> - On mockito 2.x, make your pull request target `release/2.x` (2.x is in maintenance mode)\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1934", "Use google-java-format in spotless", "Tim van der Lippe", "TimvdLippe", "06/18/20, 10:47:50 AM", "Google-java-format is an open source formatter [1]. It automatically formats\r\nsource code based on the Google Java Style.\r\n\r\nThe Mockito source code to a very large extent already adheres to this style\r\nguide. While this PR in itself is large, many of the changes are related to\r\nstring formatting and nested method calls. Most notably, google-java-format\r\nis an improvement over the current formatting strategy in that:\r\n\r\n1. It handles comment formatting (e.g. spacing between comments)\r\n2. It handles nested method calls. You can see the difference in\r\nour usage of the ByteBuddy API, which is now more consistent\r\n3. It enforces the max-line length.\r\n\r\nIt essentially automates all of the styling rules we list in\r\nhttps://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md#alignment\r\nAs such, for new contributors it should be a lot easier (and less scary)\r\nto contribute to Mockito, as they no longer have to be concerned about\r\nformatting. Hopefully, this once again lowers the bar for external contributors\r\nwho want to help the project, but would otherwise feel overwhelmed by\r\nthe rules we have to adhere to. (If we wouldn't have these rules, it would\r\nbe a lot harder for us to maintain a consistent and maintainable codebase).\r\n\r\nThe only interesting changes in this PR are those in `build.gradle`. All\r\nother changes were auto-generated by running `./gradlew spotlessApply`.\r\n\r\nNote that I disabled the formatting of Javadoc, as I think we should keep formatting\r\nthat ourselves. We normally put a lot of time and effort in our Javadoc and changing\r\nthat all at once seems like the wrong decision at this point in time.\r\n\r\n[1]: https://github.com/google/google-java-format", "NaN"], ["1938", "Update javadoc - remove deprecated class", "Vinicius Scheidegger", "vinischeidegger", "05/25/20, 03:01:44 PM", "The javadoc is misleading - pointing to the deprecated class ReturnsElementsOf that should later be internal or moved\r", "NaN"], ["1940", "[checkstyle] switch to new DTD", "Eitan Adler", "grimreaper", "05/27/20, 07:18:34 AM", "Problem\r\n\r\nThe location for the checkstyle DTD has moved.\r\n\r\nSolution\r\n\r\nUpdate DTD location", "NaN"], ["1942", "Fixes #1898 : Return mock name from toString method for deep stub mocks", null, "akluball", "05/31/20, 12:33:50 PM", "Return mock name from toString for deep stub mocks. It was previously returning null.\r\n\r\nFixes #1898", "NaN"], ["1945", "[Travis] Replace JDK 9/10 with 14", "Tim van der Lippe", "TimvdLippe", "06/17/20, 09:48:55 PM", "9/10 are EOL since September 2018. 14 is the currently supported\r\nJava version.", "NaN"], ["1946", "Move spotless check to separate build task", "Tim van der Lippe", "TimvdLippe", "06/17/20, 08:42:23 PM", "This means the tests can run in parallel of the formatting changes.\r\nTherefore, formatting changes would not block obtaining your test\r\nresults, which should hopefully reduce the amount of Travis builds\r\nnecessary to work on a community PR.\r\n\r\nThis is also in preparation of #1934 which requires spotless to\r\nrun on JDK11 minimum.", "NaN"], ["1948", "Update gradle 6", "Tim van der Lippe", "TimvdLippe", "06/16/20, 01:20:07 PM", "This included a couple of breaking changes:\r\n- The build plugin is now part of the Gradle Enterprise plugin\r\n- The osgi plugin was removed, for which we have to use the bndtools\r\nplugin instead\r\n- Kotlin version has to be updated, including their coroutine\r\nlibrary versions\r\n\r\nGradle 6 is required for us to build on Java 14.\r\n\r\nSupersedes and closes #1923", "NaN"], ["1949", "Fixes #1712 : prepend description to AssertionError thrown in verification", null, "adrianriley", "06/20/20, 04:54:36 PM", "\r\nExtended MockitoAssertionError to wrap instance of AssertionError in addition to MockitoAssertionError, so that the various possible exceptions thrown for non-matching arguments have description prepended to the message.", "NaN"], ["1950", "Use jacoco v0.8.5", "Erhard Pointl", "epeee", "06/17/20, 08:06:29 PM", "in order to get java 14 ready.\r\n\r", "NaN"], ["1951", "Use errorprone 2.4.0", "Erhard Pointl", "epeee", "06/17/20, 09:00:14 PM", "in order to get java14 ready.\r\nsee https://github.com/google/error-prone/releases/tag/v2.4.0 for details.\r\n\r\n\r", "NaN"], ["1952", "Update bnd gradle plugin to v5.1.1", "Erhard Pointl", "epeee", "06/17/20, 09:16:20 PM", "see https://github.com/bndtools/bnd/wiki/Changes-in-5.1.1\r\n\r\nAfter this change I had the very first green build locally using java 14 :tada: \r\n\r", "NaN"], ["1953", "Fix a confusing typo in subclassing error message", "Artem Prigoda", "arteam", "06/18/20, 11:09:20 AM", "NaN", "NaN"], ["1955", "Mockito #1013: Defines and implements API for static mocking.", "Rafael Winterhalter", "raphw", "07/10/20, 07:31:02 PM", "Fixes #1013 - allows for static method mocking in Mockito.", "NaN"], ["1956", "use Dependabot 2", null, "sullis", "11/30/20, 09:55:49 PM", "Reference:\r\n\r\nhttps://github.blog/2020-06-01-keep-all-your-packages-up-to-date-with-dependabot/\r\n\r\nhttps://help.github.com/en/github/administering-a-repository/about-github-dependabot\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["1957", "Update spotless Travis job name to be more descriptive", "Tim van der Lippe", "TimvdLippe", "06/20/20, 05:13:44 PM", "NaN", "NaN"], ["1958", "Update errorprone gradle plugin to v1.2.1", "Erhard Pointl", "epeee", "06/22/20, 08:40:27 PM", "see https://github.com/tbroyer/gradle-errorprone-plugin/releases for details", "NaN"], ["1961", "Document using `@Mock` with method parameters", "Jamie Tanna", "jamietanna", "06/29/20, 04:15:19 PM", "Although we've called it out in the [JUnit extension], we should also\r\nmake sure it's clear in the core documentation to make it more visible.\r\n\r\nWe can fully-quality the `@Test` annotation to make clear that it has to\r\nbe with JUnit 5.\r\n\r\nCloses #1960.\r\n\r\n[JUnit extension]: https://javadoc.io/doc/org.mockito/mockito-junit-jupiter/latest/org/mockito/junit/jupiter/MockitoExtension.html", "NaN"], ["1968", "Fixes #1967: Correctly handle mocks with limited life-cycle in listeners.", "Rafael Winterhalter", "raphw", "07/16/20, 06:26:05 PM", "Due to the limited lifetime of static mocks, they cannot be validated within a Mockito session since they might have expired when the validation is applied. This patch excludes static mocks from all validation. To support static mocks in the regular session validation, we would rather need to trigger the validation upon release of any static mock. ", "NaN"], ["1971", "Add support for creating constructors without using Objenesis (and unsafe API)", "Rafael Winterhalter", "raphw", "08/15/20, 11:13:02 PM", "This PR adds code to constructors to allow short-wiring a constructor without avoiding to call it, thus making the use of Objenesis obsolete. This is desired since Objenesis relies on Unsafe API which is deprecated and will be removed in a future release.\r\n\r\nThe idea is as follows: Any constructor for a class:\r\n\r\n```java\r\nclass Foo extends Bar {\r\n  Foo() {\r\n    super(somethingWithSideeffect());\r\n  }\r\n}\r\n```\r\n\r\nis rewritten as follows:\r\n\r\n```java\r\nclass Foo {\r\n  Foo() {\r\n    if (MockDispatcher.isMockedConstruction()) {\r\n      super(null);\r\n      return;\r\n    }\r\n    super(somethingWithSideeffect());\r\n  }\r\n}\r\n```\r\n\r\nThe mock dispatcher then applies a thead-local check to see if the current construction is supposed to be short-wired and suppresses the original construction in such a case. The check is repeated along the super class hierarchy until reaching the `Object` constructor which is by definition side-effect free. As a result, a mock was created without triggering any user code and without relying on Unsafe API.", "NaN"], ["1973", "update dependency to byte buddy version 1.10.13", "Michael Kroll", "mickroll", "07/15/20, 12:52:47 PM", "Fixes #1972 : update byte buddy to 1.10.13 to include fixes and support JDK 16\r", "NaN"], ["1974", "Fixes #1855 and #939: improve error message when the inline mock maker cannot be used.", "Rafael Winterhalter", "raphw", "07/18/20, 06:42:21 PM", "Improves the error message and does not create a hard dependency on the compiler module. It also points out that Byte Buddy can now emulate the attachment API using JNA if it's added to the class path.", "NaN"], ["1978", "Fix Javadoc invalid syntax", "Robert Chmielowiec", "chmielowiec", "07/17/20, 11:43:32 AM", "Escape @ character to html entity.\r\n\r\nFixes https://github.com/mockito/mockito/issues/1977\r\n\r", "NaN"], ["1982", "Update assertj to 3.16.1", "Erhard Pointl", "epeee", "07/19/20, 10:09:56 AM", "see\r\nhttps://assertj.github.io/doc/#assertj-core-3-16-1-release-notes\r\nand\r\nhttps://assertj.github.io/doc/#assertj-core-3-16-0-release-notes\r\nfor details.", "NaN"], ["1984", "Fix typo", "Johnny Lim", "izeye", "07/20/20, 06:47:40 AM", "This PR fixes a typo.", "NaN"], ["1986", "Fixes #1985 : Update README to refer the latest documentation", "Valery Yatsynovich", "valfirst", "07/20/20, 01:08:22 PM", "Fixes #1985 ", "NaN"], ["1989", "Do not pass static mocks to regular listener callback.", "Rafael Winterhalter", "raphw", "07/29/20, 03:22:12 PM", "Does not include static mocks in regular listener logic as it might distort existing mock collectors that do not expect scoped mocks. Fixes #1988.\r\n\r\nWe have passed `Class` objects to the listener to indicate a static mock. The class object is of course itself not a regular mock and it's cleaner to create a callback method of it's own. This way, existing listeners remain logically backwards compatible, including our own listener that is used within the JUnit runner (we have only tested the rule, I added a test for the runner, too).", "NaN"], ["1991", "Mockito.verify(): fix typo in Javadoc", "Per Lundberg", "perlun", "08/05/20, 08:05:40 PM", "I noted this while reading the Javadocs in my IDE; they were referring to a `get(0)` reference which isn't quite easy to grasp in this context. :see_no_evil: After looking at this class a bit more, I think it's just a copy-paste mistake from this line in the class-level Javadocs: https://github.com/mockito/mockito/blob/release/3.x/src/main/java/org/mockito/Mockito.java#L212", "NaN"], ["1994", "Fix typo in CONTRIBUTING.md and SpyOnInjectedFieldsHandler", "Ahmad M", "ahmadmoawad", "08/27/20, 06:22:16 PM", "Fix typo in CONTRIBUTING.md and SpyOnInjectedFieldsHandler.java", "NaN"], ["1996", "Add invoker API to allow for alternative invocation modes to better support the module system.", "Rafael Winterhalter", "raphw", "08/15/20, 11:13:01 PM", "Adds a `MemberAccessor` abstraction for accessing fields, methods and constructors where the default implementation `ReflectionMemberAccessor` implements the current behavior of using reflection and `setAccessible`. \r\n\r\nAlso, this PR adds a new implementation `ModuleMemberAccessor` where the instrumentation API is leveraged to open modules to Mockito before using method handles to access any such member. This way, module boundaries are no longer stopping Mockito from functioning on Java 9 and onwards. Since the instrumentation API is already used by the inline-mock-maker, it is enabled for this mock maker by default.", "NaN"], ["1998", "Update objenesis to 3.1", "Erhard Pointl", "epeee", "08/09/20, 11:35:34 AM", "see http://objenesis.org/notes.html\r\n\r\nfixes #1992\r\n\r", "NaN"], ["2003", "Pre release 3.5.0", "Rafael Winterhalter", "raphw", "08/15/20, 11:13:00 PM", "Merged several pull requests into a branch prior to release.", "NaN"], ["2004", "Pre release 3.5.0", "Rafael Winterhalter", "raphw", "08/15/20, 11:12:55 PM", "Merged several pull requests into a branch prior to release.", "NaN"], ["2006", "Introduce animal sniffer", "Rafael Winterhalter", "raphw", "08/18/20, 01:14:11 PM", "Introduces animal sniffer with exclusion of inline-mock-maker classes which would never be present on Android. Avoids calling invoke/invokeExact methods of handles directly but rather puts the invocations into generated code to avoid breaking Android builds.", "NaN"], ["2013", "[ci maven-central-release] Constructor dispatch", "Rafael Winterhalter", "raphw", "08/20/20, 09:31:44 PM", "Use constructor instantiation if explicitly specified.", "NaN"], ["2017", "Only enable mocking of types right before instantiation to avoid circular interception of constructor creation.", "Rafael Winterhalter", "raphw", "08/21/20, 08:50:15 AM", "Fixes #2015.", "NaN"], ["2018", "Only enable mocking of types right before instantiation to avoid circular interception of constructor creation.", "Rafael Winterhalter", "raphw", "08/21/20, 08:50:17 AM", "Fixes #2015.", "NaN"], ["2020", "Constructor dispatch", "Rafael Winterhalter", "raphw", "08/22/20, 07:48:18 PM", "Adds error message to class loader setups that do not work with the inline mock maker.", "NaN"], ["2021", "Constructor dispatch", "Rafael Winterhalter", "raphw", "08/24/20, 10:31:16 AM", "Fixes recursive constructor invocation.\r\nAvoids reflective access warning when using instrumentation-based member accessor.", "NaN"], ["2022", "Only apply argument on illegal module access for inline tests if Java version is at least 9.", "Rafael Winterhalter", "raphw", "08/24/20, 10:14:47 PM", "Build fails on Java 8 since the command line option is not supported there.", "NaN"], ["2023", "Initializes classes prior to instrumentation to avoid uncontrolled code execution.", "Rafael Winterhalter", "raphw", "08/25/20, 10:32:46 PM", "Fixes #2011 - triggeres initializers explicitly.", "NaN"], ["2024", "Fixes #2007 : Downgrade objenesis version for mockito-android", "Sinan Kozak", "kozaxinan", "09/01/20, 10:26:25 PM", "check list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r\nFixes #2007 \r\n\r\nAfter building, mockito android pom includes objenesis 2.6 while mockito-core has objenesis 3.1.\r\n\r\nLocally build version is Tested with our internal project to verify fix. \r\n\r\n```\r\n  androidTestImplementation('com.nhaarman.mockitokotlin2:mockito-kotlin:x.y.z') {\r\n    exclude group: 'org.mockito', module: 'mockito-core'\r\n  }\r\n```\r\n\r\npom of mockito-android.\r\n```\r\n<dependencies>\r\n    <dependency>\r\n      <groupId>org.mockito</groupId>\r\n      <artifactId>mockito-core</artifactId>\r\n      <version>3.5.8</version>\r\n      <scope>compile</scope>\r\n      <exclusions>\r\n        <exclusion>\r\n          <artifactId>objenesis</artifactId>\r\n          <groupId>org.objenesis</groupId>\r\n        </exclusion>\r\n      </exclusions>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>net.bytebuddy</groupId>\r\n      <artifactId>byte-buddy-android</artifactId>\r\n      <version>1.10.13</version>\r\n      <scope>compile</scope>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.objenesis</groupId>\r\n      <artifactId>objenesis</artifactId>\r\n      <version>2.6</version>\r\n      <scope>compile</scope>\r\n    </dependency>\r\n  </dependencies>\r\n```\r\n\r\nSide note: I had problem with animal sniffer on release/3.x branch. I had to disable android api 24 signature check to compile the app.\r\n```\r\norg.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker:507  Undefined reference (android-api-level-24-7.0_r2): java.lang.instrument.Instrumentation\r\norg.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker:507  Undefined reference (android-api-level-24-7.0_r2): boolean java.lang.instrument.Instrumentation.isModifiableClass(Class)\r\n```\r\n\r\nBreaking changes solutions for android modules\r\n## Solution 1\r\n\r\nIf you have motkito-kotlin with mockito-android, exclude mockito-core from mockito-kotlin.\r\n\r\n```\r\n        implementation(\"com.nhaarman.mockitokotlin2:mockito-kotlin:<version>\") {\r\n            exlcude group: \"org.mockito\", module: \"mockito-core\"\r\n        }\r\n```\r\n\r\n## Solution 2\r\nDon't add mockito-core with mockito-android\r\n\r\n## Solution 3\r\nUse dependency resolution\r\n\r\nin root build.gradle\r\n\r\n```\r\nsubprojects {\r\n  configurations.configureEach {\r\n    resolutionStrategy.eachDependency { details ->\r\n      if (details.requested.group == 'org.objenesis') { \r\n        details.useVersion '2.6'\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r", "NaN"], ["2034", "Escape mock during method dispatch on mock to avoid premature garbage collection.", "Rafael Winterhalter", "raphw", "09/03/20, 10:20:48 PM", "Under heavy optimization mocks might get garbage collected during the dispatching of a mocked method if the mock instance is not used after this method dispatch. To avoid this, we escape the mock instance during the dispatch to make sure that the GC cannot collect the object.\r\n\r\nFixes #1802.", "NaN"], ["2042", "Mock resolver plugin", "Rafael Winterhalter", "raphw", "10/19/20, 01:48:23 PM", "Adds a plugin to allow for adding one or multiple mock resolvers. This way, instances that are provided to Mockito's DSL do no longer require to be the actual mocks but can also be proxies of mocks what is something already being applied by frameworks such as Spring.\r\n\r\nThis works today with the subclass mock maker by accident as we read the mock state from the mock instance via a method which gets proxied. If we ever find a more private appraoch this would however break Spring's Mockito use and it is already broken with the inline mock maker.\r\n\r\nBy this SPI, Spring could add an unproxy resolver to its Mockito build-up and make it's proxied mocks compatible with Mockito. Other frameworks could use the same approach if desired as this SPI is generic.\r\n\r\nCloses #1980", "NaN"], ["2046", "Do not exclude synthetic constructors from instrumentation. Fixes #2040.", "Rafael Winterhalter", "raphw", "09/17/20, 09:27:52 PM", "Byte Buddy does exclude synthetic members by default as they normally provide necessary infrastructure outside of business logic (e.g. bridge methods). For constructor instrumentation, it is however crucial that no code is called during mock creation and that fields are copied during spy creation.", "NaN"], ["2047", "Fixes #1997 : make mockito-junit-jupiter workin in OSGiMockitoExtensi\u2026", "Raymond Aug\u00e9", "rotty3000", "01/03/21, 07:18:14 PM", "\u2026on\r\n\r\nwithout\r\na) giving up the internal nature of some packages\r\nb) resorting to substandard solutions like OSGi fragements\r\n\r\nSigned-off-by: Raymond Aug\u00e9 <raymond.auge@liferay.com>\r\n\r\n> Hey, \r\n> \r\n> Thanks for the contribution, this is awesome.\r\n> As you may have read, project members have somehow an opinionated view on what and how should be\r\n> Mockito, e.g. we don't want mockito to be a feature bloat.\r\n> There may be a thorough review, with feedback -> code change loop.\r\n> \r\n> Which branch : \r\n> - On mockito 3.x, make your pull request target `release/3.x`\r\n> - On mockito 2.x, make your pull request target `release/2.x` (2.x is in maintenance mode)\r\n>\r\n> _This block can be removed_\r\n> _Something wrong in the template fix it here `.github/PULL_REQUEST_TEMPLATE.md`\r\n\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2050", "Update Byte Buddy.", "Rafael Winterhalter", "raphw", "09/18/20, 11:47:07 PM", "Fixes #2039, support for Java 16 EA.", "NaN"], ["2051", "Update to OpenJDK 15.", "Rafael Winterhalter", "raphw", "11/15/20, 11:06:48 PM", "Use Java 15 in builds for most recent Java version.", "NaN"], ["2053", "Use single version for strictly in mockito-android", "Sinan Kozak", "kozaxinan", "09/24/20, 01:32:36 PM", "check list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r\nFixes #2007 \r\n\r\nIn #2024, code review suggested to use `strictly '[2.6, 3.1['` instead if `strictly '2.6'`.  [Comment](https://github.com/mockito/mockito/pull/2024#discussion_r478326102)\r\nApparently I failed to test that suggestion and it broke the fix in #2007. \r\n\r\nUsing `strictly '2.6'` works as expected. It fails the objenesis resolution and suggest to exclude mockito-core from mockito-kotlin. \r", "NaN"], ["2069", "Migrated to new Shipkit libraries", "Szczepan Faber", "mockitoguy", "10/28/20, 11:06:47 PM", "Migrated our build automation to new Shipkit libraries so that:\r\n - we no longer generate \"version bump\" commit with each release\r\n - we no longer change the release notes file in the repo (instead we push release notes to GH releases)\r\n - we now support \"concurrent\" PR merges (more info: #395)\r\n - the build configuration is explicit in Mockito's build files instead of being hidden in the original Shipkit plugin. This way, the build automation is easier to \"work with\" (fix, debug, tune). The trade-off is a little more Build code in Mockito repo (we can live with that).\r\n\r\nThis PR does not change other behavior/features of our automation. We are still able to publish to Bintray on every PR and to publish to Maven Central on demand in the typical way.\r\n\r\n### Testing\r\n- assembled Maven publications/artifacts for this branch and our main dev branch. Compared contents of the artifacts and poms - we're good.\r\n- ran build locally\r\n- published to Bintray from my local using the new tasks - all worked", "NaN"], ["2070", "Fixed typo in osgi.gradle", "Michal Szestowicki", "shestee", "10/16/20, 09:33:04 PM", "Corrected typo in osgi.gradle\r\n\r\n\r", "NaN"], ["2071", "Fixes #2061: ArgumentMatcher error messages use lambda class names", null, "Marcono1234", "10/17/20, 02:42:19 PM", "Fixes #2061", "NaN"], ["2077", "Retry 3.6.0 release", "Szczepan Faber", "mockitoguy", "10/26/20, 03:17:31 PM", "This PR is for visibility. I'm trying to retry the CI build to retry the release.", "NaN"], ["2078", "Retry the release", "Szczepan Faber", "mockitoguy", "10/26/20, 10:26:44 PM", "Troubleshooting failing releases", "NaN"], ["2084", "Fixes #2083 : Modify casing of Bundle-Version manifest header", "Joe Shannon", "joeshannon", "10/28/20, 09:46:01 PM", "OSGi specification may accept case insensitive headers but this is\r\ncausing problems for Eclipse PDE development with version constriants.\r\n\r\nSwitch to match casing of other headers and agree with name provided\r\nat: https://www.osgi.org/bundle-headers-reference/", "NaN"], ["2087", "Update links; use HTTPS for links", null, "Marcono1234", "12/01/20, 06:14:00 PM", "Uses HTTPS for links (where supported). Additionally replaces some links which are currently redirecting with their destination.\r\n\r\nEdit: I am not quite sure why Travis failed or why codecov thinks that the coverage has decreased.", "NaN"], ["2088", "Update animal-sniffer plugin", null, "Marcono1234", "11/05/20, 12:20:26 PM", "Updates the animal-sniffer plugin.\r\n\r\nThe new version fi<!-- Prevent GitHub from creating irritating issue links -->xes https://github.com/xvik/gradle-animalsniffer-plugin/issues/25 which caused build failures on Windows because class files were processed in an incorrect order causing the nested class `InlineByteBuddyMockMaker$1` (which has the forbidden access) to be processed before the enclosing class which has the `@SuppressSignatureCheck` annotation. Previously the tests failed for me with:\r\n```\r\n[Undefined reference (android-api-level-24-7.0_r2)] org.mockito.internal.creation.bytebuddy.(InlineByteBuddyMockMaker.java:507)\r\n  >> java.lang.instrument.Instrumentation\r\n\r\n[Undefined reference (android-api-level-24-7.0_r2)] org.mockito.internal.creation.bytebuddy.(InlineByteBuddyMockMaker.java:507)\r\n  >> boolean java.lang.instrument.Instrumentation.isModifiableClass(Class)\r\n```\r\n\r\n(This problem has also been mentioned in the description of https://github.com/mockito/mockito/pull/2024)", "NaN"], ["2089", "Switched CI to GH Actions", "Szczepan Faber", "mockitoguy", "11/08/20, 10:58:26 PM", "Switched from Travis CI to GH actions so that:\r\n - we get faster CI builds [~8 mins](https://github.com/mockito/mockito/actions/runs/352535985) vs. [~14 mins](https://travis-ci.com/github/mockito/mockito/builds/198439539)\r\n - faster build initiation based on my experience when working with GH actions and Travis. GH workflows are triggered almost instantaneously (almost no queuing time)\r\n - GH Actions provide better experience (familiar UI experience, visual editor of the workflow file)\r\n - bugfixes to our current CI workflow based on Travis CI (#2080)\r", "NaN"], ["2091", "Remove duplicated Gradle property setting", "Michal Szestowicki", "shestee", "11/11/20, 05:50:36 PM", "There is no need of specifying _--parallel_ explicitly as it is Gradle's default (the less code, the better).", "NaN"], ["2096", "Removed redundant CI workflow", "Szczepan Faber", "mockitoguy", "11/10/20, 04:33:50 PM", "We don't need an explicit workflow for wrapper validation. We already run this as a step in the build:\r\n\r\nhttps://github.com/mockito/mockito/runs/1380756176?check_suite_focus=true#step:4:1\r\n\r\nFixes #2094", "NaN"], ["2098", "Improve error message if initializer fails.", "Rafael Winterhalter", "raphw", "11/15/20, 10:17:35 PM", "Non-initializable classes can never be mocked, an error message should help guide on these issues.", "NaN"], ["2101", "Commit message directives for CI workflow", "Szczepan Faber", "mockitoguy", "11/12/20, 04:40:08 PM", "Added standard idioms for avoiding unnecessary jobs: [skip ci] and [skip release] directives can be added in the commit message, bypassing the CI or release from CI.\r\n\r\nFixes #2095", "NaN"], ["2103", "Avoided parallel workflow execution", "Szczepan Faber", "mockitoguy", "11/14/20, 04:21:37 PM", "Avoided parallel execution of the workflow so that:\r\n - we get better UX (the \"checks\" view in PR does not have duplicated jobs - [example](https://github.com/mockito/mockito/pull/2098))\r\n - we run less builds (conserves build quota)\r\n\r\nWe *no longer* run CI for ordinary push to any remote branch. We run CI for pushes to the main dev branch or PRs.\r\n\r\nPreventing parallel workflows is reported to GitHub and hopefully it will be resolved eventually: https://github.community/t/prevent-parallel-workflows/16370\r\n\r\nFixes #2097", "NaN"], ["2106", "Avoid CI failures in forks", "Szczepan Faber", "mockitoguy", "11/21/20, 03:56:56 PM", "When contributors fork the repo, they get GH actions that run when they push code to their forks. This change prevents GH Action \"release\" job failures. Example failure: https://github.com/shestee/mockito/actions/runs/375185562", "NaN"], ["2107", "Fixed incorrect comment type in properties file", "Michal Szestowicki", "shestee", "11/21/20, 10:16:18 AM", "There is wrong comment type used in version.properties (*.properties files use '#' for comments, not '//'). This PR fixes it with the right one.\r\n\r", "NaN"], ["2109", "Keep META-INF folder at top of published mockito-core jar", "Holger", "hdecarne", "11/24/20, 11:43:23 AM", "This solves issue #2108 by adapting the Jar entries sorting order in the OSGI plugin workaround. As a result META-INF folder is kept at the top of the Jar as expected by JarInputStream:\r\n```\r\nArchive:  build/libs/mockito-core-3.6.24.jar\r\n  Length      Date    Time    Name\r\n---------  ---------- -----   ----\r\n        0  02-01-1980 00:00   META-INF/\r\n     4619  02-01-1980 00:00   META-INF/MANIFEST.MF\r\n     1080  02-01-1980 00:00   LICENSE\r\n        0  02-01-1980 00:00   org/\r\n\r\n```\r\ninstead of:\r\n```\r\nArchive:  ~/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.6.0/48657987075fea2e2176634ae35aaa5e93c929ef/mockito-core-3.6.0.jar\r\n  Length      Date    Time    Name\r\n---------  ---------- -----   ----\r\n     1080  02-01-1980 01:00   LICENSE\r\n        0  02-01-1980 01:00   META-INF/\r\n     4606  02-01-1980 01:00   META-INF/MANIFEST.MF\r\n        0  02-01-1980 01:00   org/\r\n\r\n```", "NaN"], ["2111", "Enabled releases to Maven Central", "Szczepan Faber", "mockitoguy", "11/25/20, 02:54:05 AM", "Fixed the bug with how we controlled Maven Central releases via commit messages.\r\n\r\nTesting done: Ran the workflow in a forked repository and b) observed that the information from the commit message is passed to the environment variable.\r\n\r\nFixes #2110", "NaN"], ["2114", "Bump com.github.ben-manes.versions from 0.28.0 to 0.36.0", null, "dependabot[bot]", "11/30/20, 10:08:16 PM", "Bumps com.github.ben-manes.versions from 0.28.0 to 0.36.0.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.github.ben-manes.versions&package-manager=gradle&previous-version=0.28.0&new-version=0.36.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2115", "Bump junit-platform-launcher from 1.1.0 to 1.7.0", null, "dependabot[bot]", "11/30/20, 11:57:55 PM", "Bumps [junit-platform-launcher](https://github.com/junit-team/junit5) from 1.1.0 to 1.7.0.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/junit-team/junit5/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.junit.platform:junit-platform-launcher&package-manager=gradle&previous-version=1.1.0&new-version=1.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2116", "Bump org.eclipse.osgi from 3.15.0 to 3.16.0", null, "dependabot[bot]", "11/30/20, 11:38:48 PM", "Bumps org.eclipse.osgi from 3.15.0 to 3.16.0.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.eclipse.platform:org.eclipse.osgi&package-manager=gradle&previous-version=3.15.0&new-version=3.16.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2117", "Bump auto-service from 1.0-rc5 to 1.0-rc7", null, "dependabot[bot]", "11/30/20, 11:38:09 PM", "Bumps [auto-service](https://github.com/google/auto) from 1.0-rc5 to 1.0-rc7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google/auto/releases\">auto-service's releases</a>.</em></p>\n<blockquote>\n<h2>AutoService 1.0-rc7</h2>\n<ul>\n<li>Use <code>CLASS</code> retention to support Gradle aggregating incremental annotation processors (28a2c79)</li>\n<li>Set an Automatic-Module-Name. (61256c3)</li>\n</ul>\n<h2>AutoService 1.0-rc6</h2>\n<ul>\n<li>Actually support Gradle's incremental annotation processing</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/google/auto/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.google.auto.service:auto-service&package-manager=gradle&previous-version=1.0-rc5&new-version=1.0-rc7)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2118", "Bump opentest4j from 1.1.1 to 1.2.0", null, "dependabot[bot]", "11/30/20, 11:57:38 PM", "Bumps [opentest4j](https://github.com/ota4j-team/opentest4j) from 1.1.1 to 1.2.0.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/75136304fab712895090c9c4678dc72ccbcb5e21\"><code>7513630</code></a> Release 1.2.0</li>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/2719e294685029819623ba23cefd0de152adcc89\"><code>2719e29</code></a> Add version to module descriptor</li>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/ffcdf1584b0dc6385205afc1a3fc37a9325342c1\"><code>ffcdf15</code></a> Include Java module descriptor (<a href=\"https://github-redirect.dependabot.com/ota4j-team/opentest4j/issues/62\">#62</a>)</li>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/6eebc9d5e3dd26670d56ccb5f226c14e9739b70f\"><code>6eebc9d</code></a> Polish Javadoc</li>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/14894e43d81cf11d3f2a38304bf7bb67ed9686c2\"><code>14894e4</code></a> Include Class of Throwable in MultipleFailuresError message</li>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/f2c384f37cf1a02b32cceb1636ab1036b25938fb\"><code>f2c384f</code></a> Set EOL to LF so Spotless does not fight with Git on Windows</li>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/6ae5b1623a72846e1e789c86f5676a6498e23129\"><code>6ae5b16</code></a> Upgrade to Gradle 5.4.1</li>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/96502f5348b11dc86d5518af0c2132ed30e14525\"><code>96502f5</code></a> Change ValueWrapper.create() to not wrap another ValueWrapper</li>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/2ee4080e2a2ab3799fab39304652a33b8ee09811\"><code>2ee4080</code></a> Polish Javadoc</li>\n<li><a href=\"https://github.com/ota4j-team/opentest4j/commit/42e530d16943b8577b6bb97351fb25c173f7978d\"><code>42e530d</code></a> Capture non-serializable ephemeral value in ValueWrapper</li>\n<li>Additional commits viewable in <a href=\"https://github.com/ota4j-team/opentest4j/compare/r1.1.1...r1.2.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.opentest4j:opentest4j&package-manager=gradle&previous-version=1.1.1&new-version=1.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2122", "Bump com.diffplug.gradle.spotless from 3.24.3 to 4.5.1", null, "dependabot[bot]", "12/01/20, 06:14:29 PM", "Bumps com.diffplug.gradle.spotless from 3.24.3 to 4.5.1.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.diffplug.gradle.spotless&package-manager=gradle&previous-version=3.24.3&new-version=4.5.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2123", "Bump biz.aQute.bnd.gradle from 5.1.1 to 5.2.0", null, "dependabot[bot]", "12/01/20, 06:15:06 PM", "Bumps [biz.aQute.bnd.gradle](https://github.com/bndtools/bnd) from 5.1.1 to 5.2.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/bndtools/bnd/releases\">biz.aQute.bnd.gradle's releases</a>.</em></p>\n<blockquote>\n<h2>Bnd/Bndtools 5.2.0</h2>\n<p>See <a href=\"https://github.com/bndtools/bnd/wiki/Changes-in-5.2.0\">Release Notes</a>.</p>\n<h2>Bnd/Bndtools 5.1.2</h2>\n<p>See <a href=\"https://github.com/bndtools/bnd/wiki/Changes-in-5.1.2\">Release Notes</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/bndtools/bnd/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=biz.aQute.bnd:biz.aQute.bnd.gradle&package-manager=gradle&previous-version=5.1.1&new-version=5.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2124", "Bump junit from 4.12 to 4.13.1", null, "dependabot[bot]", "12/01/20, 06:15:11 PM", "Bumps [junit](https://github.com/junit-team/junit4) from 4.12 to 4.13.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit4/releases\">junit's releases</a>.</em></p>\n<blockquote>\n<h2>JUnit 4.13.1</h2>\n<p>Please refer to the <a href=\"https://github.com/junit-team/junit/blob/HEAD/doc/ReleaseNotes4.13.1.md\">release notes</a> for details.</p>\n<h2>JUnit 4.13</h2>\n<p>Please refer to the <a href=\"https://github.com/junit-team/junit/blob/HEAD/doc/ReleaseNotes4.13.md\">release notes</a> for details.</p>\n<h2>JUnit 4.13 RC 2</h2>\n<p>Please refer to the <a href=\"https://github.com/junit-team/junit4/wiki/4.13-Release-Notes\">release notes</a> for details.</p>\n<h2>JUnit 4.13 RC 1</h2>\n<p>Please refer to the <a href=\"https://github.com/junit-team/junit4/wiki/4.13-Release-Notes\">release notes</a> for details.</p>\n<h2>JUnit 4.13 Beta 3</h2>\n<p>Please refer to the <a href=\"https://github.com/junit-team/junit4/wiki/4.13-Release-Notes\">release notes</a> for details.</p>\n<h2>JUnit 4.13 Beta 2</h2>\n<p>Please refer to the <a href=\"https://github.com/junit-team/junit4/wiki/4.13-Release-Notes\">release notes</a> for details.</p>\n<h2>JUnit 4.13 Beta 1</h2>\n<p>Please refer to the <a href=\"https://github.com/junit-team/junit4/wiki/4.13-Release-Notes\">release notes</a> for details.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit4/commit/1b683f4ec07bcfa40149f086d32240f805487e66\"><code>1b683f4</code></a> [maven-release-plugin] prepare release r4.13.1</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/ce6ce3aadc070db2902698fe0d3dc6729cd631f2\"><code>ce6ce3a</code></a> Draft 4.13.1 release notes</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/c29dd8239d6b353e699397eb090a1fd27411fa24\"><code>c29dd82</code></a> Change version to 4.13.1-SNAPSHOT</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/1d174861f0b64f97ab0722bb324a760bfb02f567\"><code>1d17486</code></a> Add a link to assertThrows in exception testing</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/543905df72ff10364b94dda27552efebf3dd04e9\"><code>543905d</code></a> Use separate line for annotation in Javadoc</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/510e906b391e7e46a346e1c852416dc7be934944\"><code>510e906</code></a> Add sub headlines to class Javadoc</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/610155b8c22138329f0723eec22521627dbc52ae\"><code>610155b</code></a> Merge pull request from GHSA-269g-pwp5-87pp</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/b6cfd1e3d736cc2106242a8be799615b472c7fec\"><code>b6cfd1e</code></a> Explicitly wrap float parameter for consistency (<a href=\"https://github-redirect.dependabot.com/junit-team/junit4/issues/1671\">#1671</a>)</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/a5d205c7956dbed302b3bb5ecde5ba4299f0b646\"><code>a5d205c</code></a> Fix GitHub link in FAQ (<a href=\"https://github-redirect.dependabot.com/junit-team/junit4/issues/1672\">#1672</a>)</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/3a5c6b4d08f408c8ca6a8e0bae71a9bc5a8f97e8\"><code>3a5c6b4</code></a> Deprecated since jdk9 replacing constructor instance of Double and Float (<a href=\"https://github-redirect.dependabot.com/junit-team/junit4/issues/1660\">#1660</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit4/compare/r4.12...r4.13.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=junit:junit&package-manager=gradle&previous-version=4.12&new-version=4.13.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2125", "Bump versions.junitJupiter from 5.4.2 to 5.7.0", null, "dependabot[bot]", "12/01/20, 06:15:23 PM", "Bumps `versions.junitJupiter` from 5.4.2 to 5.7.0.\nUpdates `junit-jupiter-api` from 5.4.2 to 5.7.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit5/releases\">junit-jupiter-api's releases</a>.</em></p>\n<blockquote>\n<p>JUnit 5.7.0 = Platform 1.7.0 + Jupiter 5.7.0 + Vintage 5.7.0</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.0/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.7.0-RC1 = Platform 1.7.0-RC1 + Jupiter 5.7.0-RC1 + Vintage 5.7.0-RC1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.0-RC1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.7.0-M1 = Platform 1.7.0-M1 + Jupiter 5.7.0-M1 + Vintage 5.7.0-M1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.0-M1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.3 = Platform 1.6.3 + Jupiter 5.6.3 + Vintage 5.6.3</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.3/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.2 = Platform 1.6.2 + Jupiter 5.6.2 + Vintage 5.6.2</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.2/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.1 = Platform 1.6.1 + Jupiter 5.6.1 + Vintage 5.6.1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.0 = Platform 1.6.0 + Jupiter 5.6.0 + Vintage 5.6.0</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.0/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.0-RC1 = Platform 1.6.0-RC1 + Jupiter 5.6.0-RC1 + Vintage 5.6.0-RC1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.0-RC1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.0-M1 = Platform 1.6.0-M1 + Jupiter 5.6.0-M1 + Vintage 5.6.0-M1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.0-M1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.5.2 = Platform 1.5.2 + Jupiter 5.5.2 + Vintage 5.5.2</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.5.2/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.5.1 = Platform 1.5.1 + Jupiter 5.5.1 + Vintage 5.5.1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.5.1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.5.0 = Platform 1.5.0 + Jupiter 5.5.0 + Vintage 5.5.0</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.5.0/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.5.0-RC2 = Platform 1.5.0-RC2 + Jupiter 5.5.0-RC2 + Vintage 5.5.0-RC2</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit5/commit/a3528756923b588a7ecded2237cb13190229b543\"><code>a352875</code></a> Release 5.7</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/5c0008833907b2851867d180fda3cba22fb02096\"><code>5c00088</code></a> Document arguments passed to MessageFormat</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/0c2876b5ed340ca3cf3491b805330138c0f4e074\"><code>0c2876b</code></a> Remove usage of JetBrains' NotNull annotation and forbid future usage</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/7afbe902e08e78633eb770530cdf186d07f6df28\"><code>7afbe90</code></a> Polish test kit Events</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/44c6742d3d9145ddcd4c09681aae262d44eca193\"><code>44c6742</code></a> Polish TestableAnnotationTests</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/a962d5af60214485f448b6e164eecd8c1e934e8e\"><code>a962d5a</code></a> Polish Javadoc for <a href=\"https://github.com/Testable\">@Testable</a></li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/a245da0bd9132a71eda30e63fd32111e0f47c48f\"><code>a245da0</code></a> Let Testable annotation target any element type</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/23e824fa78425012d93cb86421a77f081a8f2eff\"><code>23e824f</code></a> Upgradle to 6.6.1</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/68bb2e3124da100ff00608c44fcd75dd3061f593\"><code>68bb2e3</code></a> Close resource in inverse order of addition (<a href=\"https://github-redirect.dependabot.com/junit-team/junit5/issues/2387\">#2387</a>)</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/10aef498da1fad4b1f3b9451e8f60c3d00ec3c79\"><code>10aef49</code></a> Fix link to milestone page</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit5/compare/r5.4.2...r5.7.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `junit-jupiter-engine` from 5.4.2 to 5.7.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit5/releases\">junit-jupiter-engine's releases</a>.</em></p>\n<blockquote>\n<p>JUnit 5.7.0 = Platform 1.7.0 + Jupiter 5.7.0 + Vintage 5.7.0</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.0/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.7.0-RC1 = Platform 1.7.0-RC1 + Jupiter 5.7.0-RC1 + Vintage 5.7.0-RC1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.0-RC1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.7.0-M1 = Platform 1.7.0-M1 + Jupiter 5.7.0-M1 + Vintage 5.7.0-M1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.0-M1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.3 = Platform 1.6.3 + Jupiter 5.6.3 + Vintage 5.6.3</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.3/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.2 = Platform 1.6.2 + Jupiter 5.6.2 + Vintage 5.6.2</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.2/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.1 = Platform 1.6.1 + Jupiter 5.6.1 + Vintage 5.6.1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.0 = Platform 1.6.0 + Jupiter 5.6.0 + Vintage 5.6.0</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.0/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.0-RC1 = Platform 1.6.0-RC1 + Jupiter 5.6.0-RC1 + Vintage 5.6.0-RC1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.0-RC1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.6.0-M1 = Platform 1.6.0-M1 + Jupiter 5.6.0-M1 + Vintage 5.6.0-M1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.6.0-M1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.5.2 = Platform 1.5.2 + Jupiter 5.5.2 + Vintage 5.5.2</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.5.2/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.5.1 = Platform 1.5.1 + Jupiter 5.5.1 + Vintage 5.5.1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.5.1/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.5.0 = Platform 1.5.0 + Jupiter 5.5.0 + Vintage 5.5.0</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.5.0/release-notes/\">Release Notes</a>.</p>\n<p>JUnit 5.5.0-RC2 = Platform 1.5.0-RC2 + Jupiter 5.5.0-RC2 + Vintage 5.5.0-RC2</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit5/commit/a3528756923b588a7ecded2237cb13190229b543\"><code>a352875</code></a> Release 5.7</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/5c0008833907b2851867d180fda3cba22fb02096\"><code>5c00088</code></a> Document arguments passed to MessageFormat</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/0c2876b5ed340ca3cf3491b805330138c0f4e074\"><code>0c2876b</code></a> Remove usage of JetBrains' NotNull annotation and forbid future usage</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/7afbe902e08e78633eb770530cdf186d07f6df28\"><code>7afbe90</code></a> Polish test kit Events</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/44c6742d3d9145ddcd4c09681aae262d44eca193\"><code>44c6742</code></a> Polish TestableAnnotationTests</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/a962d5af60214485f448b6e164eecd8c1e934e8e\"><code>a962d5a</code></a> Polish Javadoc for <a href=\"https://github.com/Testable\">@Testable</a></li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/a245da0bd9132a71eda30e63fd32111e0f47c48f\"><code>a245da0</code></a> Let Testable annotation target any element type</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/23e824fa78425012d93cb86421a77f081a8f2eff\"><code>23e824f</code></a> Upgradle to 6.6.1</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/68bb2e3124da100ff00608c44fcd75dd3061f593\"><code>68bb2e3</code></a> Close resource in inverse order of addition (<a href=\"https://github-redirect.dependabot.com/junit-team/junit5/issues/2387\">#2387</a>)</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/10aef498da1fad4b1f3b9451e8f60c3d00ec3c79\"><code>10aef49</code></a> Fix link to milestone page</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit5/compare/r5.4.2...r5.7.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2126", "Bump kotlinx-coroutines-core from 1.3.7 to 1.4.2-native-mt", null, "dependabot[bot]", "12/02/20, 06:48:15 PM", "Bumps [kotlinx-coroutines-core](https://github.com/Kotlin/kotlinx.coroutines) from 1.3.7 to 1.4.2-native-mt.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kotlin/kotlinx.coroutines/releases\">kotlinx-coroutines-core's releases</a>.</em></p>\n<blockquote>\n<h2>1.4.2</h2>\n<ul>\n<li>Fixed <code>StackOverflowError</code> in <code>Job.toString</code> when <code>Job</code> is observed in its intermediate state (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2371\">#2371</a>).</li>\n<li>Improved liveness and latency of <code>Dispatchers.Default</code> and <code>Dispatchers.IO</code> in low-loaded mode (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2381\">#2381</a>).</li>\n<li>Improved performance of consecutive <code>Channel.cancel</code> invocations (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2384\">#2384</a>).</li>\n<li><code>SharingStarted</code> is now <code>fun</code> interface (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2397\">#2397</a>).</li>\n<li>Additional lint settings for <code>SharedFlow</code> to catch programmatic errors early (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2376\">#2376</a>).</li>\n<li>Fixed bug when mutex and semaphore were not released during cancellation (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2390\">#2390</a>, thanks to <a href=\"https://github.com/Tilps\">@Tilps</a> for reproducing).</li>\n<li>Some corner cases in cancellation propagation between coroutines and listenable futures are repaired (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1442\">#1442</a>, thanks to <a href=\"https://github.com/vadimsemenov\">@vadimsemenov</a>).</li>\n<li>Fixed unconditional cast to <code>CoroutineStackFrame</code> in exception recovery that triggered failures of instrumented code (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2386\">#2386</a>).</li>\n<li>Platform-specific dependencies are removed from <code>kotlinx-coroutines-javafx</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2360\">#2360</a>).</li>\n</ul>\n<h2>1.4.1</h2>\n<p>This is a patch release with an important fix to the <code>SharedFlow</code> implementation.</p>\n<ul>\n<li>SharedFlow: Fix scenario with concurrent emitters and cancellation of a subscriber (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2359\">#2359</a>, thanks to <a href=\"https://github.com/vehovsky\">@vehovsky</a> for the bug report).</li>\n</ul>\n<h2>1.4.0</h2>\n<h3>Improvements</h3>\n<ul>\n<li><code>StateFlow</code>, <code>SharedFlow</code> and corresponding operators are promoted to stable API (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2316\">#2316</a>).</li>\n<li><code>Flow.debounce</code> operator with timeout selector based on each individual element is added (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1216\">#1216</a>, thanks to <a href=\"https://github.com/mkano9\">@mkano9</a>!).</li>\n<li><code>CoroutineContext.job</code> extension property is introduced (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2159\">#2159</a>).</li>\n<li><code>Flow.combine operator</code> is reworked:\n<ul>\n<li>Complete fairness is maintained for single-threaded dispatchers.</li>\n<li>Its performance is improved, depending on the use-case, by at least 50% (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2296\">#2296</a>).</li>\n<li>Quadratic complexity depending on the number of upstream flows is eliminated (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2296\">#2296</a>).</li>\n<li><code>crossinline</code> and <code>inline</code>-heavy internals are removed, fixing sporadic SIGSEGV on Mediatek Android devices (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1683\">#1683</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1743\">#1743</a>).</li>\n</ul>\n</li>\n<li><code>Flow.zip</code> operator performance is improved by 40%.</li>\n<li>Various API has been promoted to stable or its deprecation level has been raised (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2316\">#2316</a>).</li>\n</ul>\n<h3>Bug fixes</h3>\n<ul>\n<li>Suspendable <code>stateIn</code> operator propagates exception to the caller when upstream fails to produce initial value (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2329\">#2329</a>).</li>\n<li>Fix <code>SharedFlow</code> with replay for subscribers working at different speed (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2325\">#2325</a>).</li>\n<li>Do not fail debug agent installation when security manager does not provide access to system properties (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2311\">#2311</a>).</li>\n<li>Cancelled lazy coroutines are properly cleaned up from debug agent output (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2294\">#2294</a>).</li>\n<li><code>BlockHound</code> false-positives are correctly filtered out (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2302\">#2302</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2190\">#2190</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2303\">#2303</a>).</li>\n<li>Potential crash during a race between cancellation and upstream in <code>Observable.asFlow</code> is fixed (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2104\">#2104</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2299\">#2299</a>, thanks to <a href=\"https://github.com/LouisCAD\">@LouisCAD</a> and <a href=\"https://github.com/drinkthestars\">@drinkthestars</a>).</li>\n</ul>\n<h2>1.4.0-M1</h2>\n<h3>Breaking changes</h3>\n<ul>\n<li>The concept of atomic cancellation in channels is removed. All operations in channels\nand corresponding <code>Flow</code> operators are cancellable in non-atomic way (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1813\">#1813</a>).</li>\n<li>If <code>CoroutineDispatcher</code> throws <code>RejectedExecutionException</code>, cancel current <code>Job</code> and schedule its execution to <code>Dispatchers.IO</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2003\">#2003</a>).</li>\n<li><code>CancellableContinuation.invokeOnCancellation</code> is invoked if the continuation was cancelled while its resume has been dispatched (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1915\">#1915</a>).</li>\n<li><code>Flow.singleOrNull</code> operator is aligned with standard library and does not longer throw <code>IllegalStateException</code> on multiple values (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2289\">#2289</a>).</li>\n</ul>\n<h3>New experimental features</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kotlin/kotlinx.coroutines/blob/master/CHANGES.md\">kotlinx-coroutines-core's changelog</a>.</em></p>\n<blockquote>\n<h1>Change log for kotlinx.coroutines</h1>\n<h2>Version 1.4.2</h2>\n<ul>\n<li>Fixed <code>StackOverflowError</code> in <code>Job.toString</code> when <code>Job</code> is observed in its intermediate state (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2371\">#2371</a>).</li>\n<li>Improved liveness and latency of <code>Dispatchers.Default</code> and <code>Dispatchers.IO</code> in low-loaded mode (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2381\">#2381</a>).</li>\n<li>Improved performance of consecutive <code>Channel.cancel</code> invocations (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2384\">#2384</a>).</li>\n<li><code>SharingStarted</code> is now <code>fun</code> interface (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2397\">#2397</a>).</li>\n<li>Additional lint settings for <code>SharedFlow</code> to catch programmatic errors early (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2376\">#2376</a>).</li>\n<li>Fixed bug when mutex and semaphore were not released during cancellation (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2390\">#2390</a>, thanks to <a href=\"https://github.com/Tilps\">@Tilps</a> for reproducing).</li>\n<li>Some corner cases in cancellation propagation between coroutines and listenable futures are repaired (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1442\">#1442</a>, thanks to <a href=\"https://github.com/vadimsemenov\">@vadimsemenov</a>).</li>\n<li>Fixed unconditional cast to <code>CoroutineStackFrame</code> in exception recovery that triggered failures of instrumented code (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2386\">#2386</a>).</li>\n<li>Platform-specific dependencies are removed from <code>kotlinx-coroutines-javafx</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2360\">#2360</a>).</li>\n</ul>\n<h2>Version 1.4.1</h2>\n<p>This is a patch release with an important fix to the <code>SharedFlow</code> implementation.</p>\n<ul>\n<li>SharedFlow: Fix scenario with concurrent emitters and cancellation of subscriber (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2359\">#2359</a>, thanks to <a href=\"https://github.com/vehovsky\">@vehovsky</a> for the bug report).</li>\n</ul>\n<h2>Version 1.4.0</h2>\n<h3>Improvements</h3>\n<ul>\n<li><code>StateFlow</code>, <code>SharedFlow</code> and corresponding operators are promoted to stable API (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2316\">#2316</a>).</li>\n<li><code>Flow.debounce</code> operator with timeout selector based on each individual element is added (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1216\">#1216</a>, thanks to <a href=\"https://github.com/mkano9\">@mkano9</a>!).</li>\n<li><code>CoroutineContext.job</code> extension property is introduced (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2159\">#2159</a>).</li>\n<li><code>Flow.combine operator</code> is reworked:\n<ul>\n<li>Complete fairness is maintained for single-threaded dispatchers.</li>\n<li>Its performance is improved, depending on the use-case, by at least 50% (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2296\">#2296</a>).</li>\n<li>Quadratic complexity depending on the number of upstream flows is eliminated (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2296\">#2296</a>).</li>\n<li><code>crossinline</code> and <code>inline</code>-heavy internals are removed, fixing sporadic SIGSEGV on Mediatek Android devices (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1683\">#1683</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1743\">#1743</a>).</li>\n</ul>\n</li>\n<li><code>Flow.zip</code> operator performance is improved by 40%.</li>\n<li>Various API has been promoted to stable or its deprecation level has been raised (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2316\">#2316</a>).</li>\n</ul>\n<h3>Bug fixes</h3>\n<ul>\n<li>Suspendable <code>stateIn</code> operator propagates exception to the caller when upstream fails to produce initial value (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2329\">#2329</a>).</li>\n<li>Fix <code>SharedFlow</code> with replay for subscribers working at different speed (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2325\">#2325</a>).</li>\n<li>Do not fail debug agent installation when security manager does not provide access to system properties (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2311\">#2311</a>).</li>\n<li>Cancelled lazy coroutines are properly cleaned up from debug agent output (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2294\">#2294</a>).</li>\n<li><code>BlockHound</code> false-positives are correctly filtered out (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2302\">#2302</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2190\">#2190</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2303\">#2303</a>).</li>\n<li>Potential crash during a race between cancellation and upstream in <code>Observable.asFlow</code> is fixed (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2104\">#2104</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2299\">#2299</a>, thanks to <a href=\"https://github.com/LouisCAD\">@LouisCAD</a> and <a href=\"https://github.com/drinkthestars\">@drinkthestars</a>).</li>\n</ul>\n<h2>Version 1.4.0-M1</h2>\n<h3>Breaking changes</h3>\n<ul>\n<li>The concept of atomic cancellation in channels is removed. All operations in channels\nand corresponding <code>Flow</code> operators are cancellable in non-atomic way (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1813\">#1813</a>).</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/Kotlin/kotlinx.coroutines/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlinx:kotlinx-coroutines-core&package-manager=gradle&previous-version=1.3.7&new-version=1.4.2-native-mt)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2127", "Bump google-java-format from 1.8 to 1.9", null, "dependabot[bot]", "12/02/20, 06:48:07 PM", "Bumps [google-java-format](https://github.com/google/google-java-format) from 1.8 to 1.9.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google/google-java-format/releases\">google-java-format's releases</a>.</em></p>\n<blockquote>\n<h2>1.9</h2>\n<ul>\n<li>Add support for <code>yield</code> statements (<a href=\"https://github-redirect.dependabot.com/google/google-java-format/issues/489\">#489</a>)</li>\n<li>Fix a crash in expression switches (<a href=\"https://github-redirect.dependabot.com/google/google-java-format/issues/477\">#477</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/google-java-format/commit/1c45fa55b1a483314f8cb52bd0a0b21838c2bc32\"><code>1c45fa5</code></a> Bump versions to 1.9</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/062e5d2e150abee4de6640b25db963e5de4d4f13\"><code>062e5d2</code></a> Update links to Spotless' new documentation layout</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/45fb41a7bac3dfe0726601ceb87d1c17bbf494ec\"><code>45fb41a</code></a> Fix the google-java-format IDEA plugin for 2020.2 IDEs.</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/1715884a46b0953b0491039b668fdc23bb2e7788\"><code>1715884</code></a> Disable Appveyor builds on branches.</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/02a072f296802e4ca771ce4b6ad97b62af665573\"><code>02a072f</code></a> Add missing license headers.</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/c2c8a517c92fbf3553e53524057cd2ad8ae62962\"><code>c2c8a51</code></a> Update the IDEA plugin to use google-java-format 1.8.</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/1e4f14f65703e9771dcdc8db90a7d27597559164\"><code>1e4f14f</code></a> Support --skip-removing-unused-imports in google-java-format-diff.py</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/5202af98006d744aafc2ba7cba2fa19a14e9b7b1\"><code>5202af9</code></a> Add support for yield statement</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/22d8c55fb4699cf08e4c9728dc6ccc9360becd5a\"><code>22d8c55</code></a> Java 14 integration tests</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/2ddcfd392cc5e45eaa5fb30c723b7e024f5caabb\"><code>2ddcfd3</code></a> Addition of a third party: Github Actions</li>\n<li>Additional commits viewable in <a href=\"https://github.com/google/google-java-format/compare/google-java-format-1.8...google-java-format-1.9\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.google.googlejavaformat:google-java-format&package-manager=gradle&previous-version=1.8&new-version=1.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2128", "Bump gradle-errorprone-plugin from 1.2.1 to 1.3.0", null, "dependabot[bot]", "12/02/20, 06:47:53 PM", "Bumps gradle-errorprone-plugin from 1.2.1 to 1.3.0.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=net.ltgt.gradle:gradle-errorprone-plugin&package-manager=gradle&previous-version=1.2.1&new-version=1.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2129", "Bump hamcrest-core from 1.3 to 2.2", null, "dependabot[bot]", "12/03/20, 07:48:09 PM", "Bumps [hamcrest-core](https://github.com/hamcrest/JavaHamcrest) from 1.3 to 2.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/hamcrest/JavaHamcrest/releases\">hamcrest-core's releases</a>.</em></p>\n<blockquote>\n<h2>hamcrest-java-2.2</h2>\n<h3>Improvements</h3>\n<ul>\n<li>AllOf/AnyOf: Pass the matchers to constructor using varargs ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/245\">#245</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/245\">hamcrest/JavaHamcrest#245</a>))</li>\n<li>Matchers.anyOf: Fix generic bounds compatibility for JDK 11 ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/256\">#256</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/256\">hamcrest/JavaHamcrest#256</a>), [Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/257\">#257</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/257\">hamcrest/JavaHamcrest#257</a>))</li>\n<li>AssertionError message is unhelpful when match fails for byte type ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/254\">#254</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/254\">hamcrest/JavaHamcrest#254</a>), [Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/255\">#255</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/255\">hamcrest/JavaHamcrest#255</a>))</li>\n<li>Use platform specific line breaks ([PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/267\">#267</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/267\">hamcrest/JavaHamcrest#267</a>))</li>\n<li>Build now checks for consistent use of spaces ([PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/217\">#217</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/217\">hamcrest/JavaHamcrest#217</a>))</li>\n</ul>\n<h3>Bugfixes</h3>\n<ul>\n<li>Fix compatibility issue for development with Android D8 ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/246\">#246</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/246\">hamcrest/JavaHamcrest#246</a>))</li>\n<li>Fix typo in license name ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/247\">#247</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/247\">hamcrest/JavaHamcrest#247</a>))</li>\n<li>1.3 compatible constructors for string matchers ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/259\">#259</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/259\">hamcrest/JavaHamcrest#259</a>), [Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/260\">#260</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/260\">hamcrest/JavaHamcrest#260</a>))</li>\n<li>Fix for split packages with Java 9 modules ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/269\">#269</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/269\">hamcrest/JavaHamcrest#269</a>), [PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/270\">#270</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/270\">hamcrest/JavaHamcrest#270</a>))</li>\n</ul>\n<h2>hamcrest-java-2.2-rc1</h2>\n<h3>Improvements</h3>\n<ul>\n<li>AllOf/AnyOf: Pass the matchers to constructor using varargs ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/245\">#245</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/245\">hamcrest/JavaHamcrest#245</a>))</li>\n<li>Matchers.anyOf: Fix generic bounds compatibility for JDK 11 ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/256\">#256</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/256\">hamcrest/JavaHamcrest#256</a>), [Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/257\">#257</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/257\">hamcrest/JavaHamcrest#257</a>))</li>\n<li>AssertionError message is unhelpful when match fails for byte type ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/254\">#254</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/254\">hamcrest/JavaHamcrest#254</a>), [Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/255\">#255</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/255\">hamcrest/JavaHamcrest#255</a>))</li>\n<li>Use platform specific line breaks ([PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/267\">#267</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/267\">hamcrest/JavaHamcrest#267</a>))</li>\n<li>Build now checks for consistent use of spaces ([PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/217\">#217</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/217\">hamcrest/JavaHamcrest#217</a>))</li>\n</ul>\n<h3>Bugfixes</h3>\n<ul>\n<li>Fix compatibility issue for development with Android D8 ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/246\">#246</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/246\">hamcrest/JavaHamcrest#246</a>))</li>\n<li>Fix typo in license name ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/247\">#247</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/247\">hamcrest/JavaHamcrest#247</a>))</li>\n<li>1.3 compatible constructors for string matchers ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/259\">#259</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/259\">hamcrest/JavaHamcrest#259</a>), [Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/260\">#260</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/260\">hamcrest/JavaHamcrest#260</a>))</li>\n<li>Fix for split packages with Java 9 modules ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/269\">#269</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/269\">hamcrest/JavaHamcrest#269</a>), [PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/270\">#270</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/270\">hamcrest/JavaHamcrest#270</a>))</li>\n</ul>\n<h2>hamcrest-java-2.1</h2>\n<h2>Overview</h2>\n<p>After a long hiatus without releases, this version simplifies the packaging of\nHamcrest into a single jar: <code>hamcrest-2.1.jar</code>. Other big changes include\nJava 9 module compatibility, along with numerous other improvements and bug\nfixes.</p>\n<h2>Breaking Changes</h2>\n<ul>\n<li>Although the class API has not changed since Hamcrest 1.3, the way that the\nproject is packaged has changed. Refer to the <a href=\"http://hamcrest.org/JavaHamcrest/distributables.html\">Hamcrest Distributables</a>\ndocumentation for more information, and in particular the section on\n<a href=\"http://hamcrest.org/JavaHamcrest/distributables#upgrading-from-hamcrest-1x\">Upgrading from Hamcrest 1.x</a></li>\n<li>The <code>org.hamcrest.Factory</code> annotation has been removed (it should not be used in client code)</li>\n</ul>\n<h2>Changes</h2>\n<ul>\n<li>Publish a single jar hamcrest-2.1.jar</li>\n<li>Documentation updates</li>\n<li>Add implementation for CharSequence length matcher</li>\n<li>Fix for TypeSafeDiagnosingMatcher can't detect generic types for subclass</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/hamcrest/JavaHamcrest/blob/master/CHANGES.md\">hamcrest-core's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 2.2 (17th October 2019)</h2>\n<h3>Improvements</h3>\n<ul>\n<li>AllOf/AnyOf: Pass the matchers to constructor using varargs ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/245\">#245</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/245\">hamcrest/JavaHamcrest#245</a>))</li>\n<li>Matchers.anyOf: Fix generic bounds compatibility for JDK 11 ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/256\">#256</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/256\">hamcrest/JavaHamcrest#256</a>), [Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/257\">#257</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/257\">hamcrest/JavaHamcrest#257</a>))</li>\n<li>AssertionError message is unhelpful when match fails for byte type ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/254\">#254</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/254\">hamcrest/JavaHamcrest#254</a>), [Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/255\">#255</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/255\">hamcrest/JavaHamcrest#255</a>))</li>\n<li>Use platform specific line breaks ([PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/267\">#267</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/267\">hamcrest/JavaHamcrest#267</a>))</li>\n<li>Build now checks for consistent use of spaces ([PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/217\">#217</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/217\">hamcrest/JavaHamcrest#217</a>))</li>\n</ul>\n<h3>Bugfixes</h3>\n<ul>\n<li>Fix compatibility issue for development with Android D8 ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/246\">#246</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/246\">hamcrest/JavaHamcrest#246</a>))</li>\n<li>Fix typo in license name ([Issue <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/247\">#247</a>](<a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/pull/247\">hamcrest/JavaHamcrest#247</a>))</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/60454d3c3e2eac8f3049dfbef2900a989a8b8624\"><code>60454d3</code></a> Version 2.2</li>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/070613874ab85fdd2da2e7e3ec7e5c1426388a65\"><code>0706138</code></a> Version 2.2-SNAPSHOT</li>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/e049297f8e1ddf539d5625d6134cd8727f3e3267\"><code>e049297</code></a> Version 2.2-rc1</li>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/052acf3c117ba6abc9bb841e22f3a9477382e95f\"><code>052acf3</code></a> Clean up readme</li>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/c5e9c506cfcc12e6a075dc38ba1f4e376c56ed45\"><code>c5e9c50</code></a> Start checkstyle setup</li>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/7f10c5574d54c07bee96d15dc755c46c11b0b8d0\"><code>7f10c55</code></a> Add PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/270\">#270</a> to changes</li>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/dc4c0123583737a955846b4aef3b3b476100f613\"><code>dc4c012</code></a> Add PR <a href=\"https://github-redirect.dependabot.com/hamcrest/JavaHamcrest/issues/267\">#267</a> to changes</li>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/2951069fbd7afcb65457db30dde9dc0fd8ce5f80\"><code>2951069</code></a> Use platform-specific line separators</li>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/c1ea49a115a381c92b27513d59eeea38ba5ae1c0\"><code>c1ea49a</code></a> Use different module names for hamcrest jars.</li>\n<li><a href=\"https://github.com/hamcrest/JavaHamcrest/commit/976a60ffc3464ede33a9f0fc66977a051468b127\"><code>976a60f</code></a> Update copyright year to say 2019</li>\n<li>Additional commits viewable in <a href=\"https://github.com/hamcrest/JavaHamcrest/compare/hamcrest-java-1.3...v2.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.hamcrest:hamcrest-core&package-manager=gradle&previous-version=1.3&new-version=2.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2130", "Bump kotlin-stdlib from 1.3.72 to 1.4.20", null, "dependabot[bot]", "12/02/20, 06:47:38 PM", "Bumps [kotlin-stdlib](https://github.com/JetBrains/kotlin) from 1.3.72 to 1.4.20.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/releases\">kotlin-stdlib's releases</a>.</em></p>\n<blockquote>\n<h2>Kotlin 1.4.20</h2>\n<h2>CHANGELOG</h2>\n<h3>Android</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42121\"><code>KT-42121</code></a> Deprecate Kotlin Android Extensions compiler plugin</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42267\"><code>KT-42267</code></a> <code>Platform declaration clash</code> error in IDE when using <code>kotlinx.android.parcel.Parcelize</code></li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42406\"><code>KT-42406</code></a> Long or infinite code analysis on simple files modification</li>\n</ul>\n<h3>Backend. Native</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-27534\"><code>KT-27534</code></a> Bridges to Nothing-returning methods have incorrect signature</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-30284\"><code>KT-30284</code></a> Native: Nothing? type for expression override and crash</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-36430\"><code>KT-36430</code></a> Optimize when with in range cases</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-38787\"><code>KT-38787</code></a> Missing optimization for &quot;in range&quot; check</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-39100\"><code>KT-39100</code></a> Make Native behaviour of property initialization consistent with JVM</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-39798\"><code>KT-39798</code></a> Override equals/hashCode in functional interface wrappers on Native</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-39800\"><code>KT-39800</code></a> equals/hashCode on adapted function references on Native</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41394\"><code>KT-41394</code></a> Compilation failed: Backend Internal error: Exception during IR lowering</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41907\"><code>KT-41907</code></a> Framework test segfaults on GC on watchos_x86 compiled with -opt</li>\n</ul>\n<h3>Compiler</h3>\n<h4>New Features</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-21147\"><code>KT-21147</code></a> JEP 280: Indify String Concatenation (StringConcatFactory)</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-34178\"><code>KT-34178</code></a> Scripts should be able to access imports objects</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35549\"><code>KT-35549</code></a> Support kotlin-android-extensions in JVM IR backend (for use with Jetpack Compose projects)</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-31567\"><code>KT-31567</code></a> Support special semantics for underscore-named catch block parameters</li>\n</ul>\n<h4>Performance Improvements</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-20571\"><code>KT-20571</code></a> Coroutines: Reduce number of local variables stored at suspension point</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-28016\"><code>KT-28016</code></a> Coroutine state-machines spill/unspill shall be optimized using data-flow analysis</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-33394\"><code>KT-33394</code></a> UI freezes triggered by QualifiedExpressionResolver.resolveToPackageOrClassPrefix</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-36814\"><code>KT-36814</code></a> Support optimized delegated properties in JVM_IR</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-36829\"><code>KT-36829</code></a> Optimize 'in' expressions (operator fun contains) in JVM_IR</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41741\"><code>KT-41741</code></a> NI: &quot;AssertionError: Empty intersection for types&quot; with generic Java collection</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42195\"><code>KT-42195</code></a> NI: prohibitively long compilation time for values of nested data structures with type inference</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42221\"><code>KT-42221</code></a> Native compiler never finishes frontend phase after migrating to Kotlin 1.4.10</li>\n</ul>\n<h4>Fixes</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-11713\"><code>KT-11713</code></a> Refine visibility check for synthetic property with protected setter</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-16222\"><code>KT-16222</code></a> Coroutine should be clearing any internal state as soon as possible to avoid memory leaks</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-25519\"><code>KT-25519</code></a> Extra inline marks inside suspending function callable reference bytecode</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-33226\"><code>KT-33226</code></a> Object INSTANCE field not annotated with NotNull in generated bytecode</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35495\"><code>KT-35495</code></a> FIR: forbid non-Java synthetic properties</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35651\"><code>KT-35651</code></a> Kotlin stdlib has greater resolution priority than jars added via <a href=\"https://github.com/file\">@file</a>:DependsOn annotation</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35716\"><code>KT-35716</code></a> Using <a href=\"https://github.com/JvmOverloads\">@JvmOverloads</a> in <a href=\"https://github.com/JvmStatic\">@JvmStatic</a> functions in interface companion objects causes a ClassFormatError</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/blob/v1.4.20/ChangeLog.md\">kotlin-stdlib's changelog</a>.</em></p>\n<blockquote>\n<h2>1.4.20</h2>\n<h3>Android</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42121\"><code>KT-42121</code></a> Deprecate Kotlin Android Extensions compiler plugin</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42267\"><code>KT-42267</code></a> <code>Platform declaration clash</code> error in IDE when using <code>kotlinx.android.parcel.Parcelize</code></li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42406\"><code>KT-42406</code></a> Long or infinite code analysis on simple files modification</li>\n</ul>\n<h3>Backend. Native</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-27534\"><code>KT-27534</code></a> Bridges to Nothing-returning methods have incorrect signature</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-30284\"><code>KT-30284</code></a> Native: Nothing? type for expression override and crash</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-36430\"><code>KT-36430</code></a> Optimize when with in range cases</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-38787\"><code>KT-38787</code></a> Missing optimization for &quot;in range&quot; check</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-39100\"><code>KT-39100</code></a> Make Native behaviour of property initialization consistent with JVM</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-39798\"><code>KT-39798</code></a> Override equals/hashCode in functional interface wrappers on Native</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-39800\"><code>KT-39800</code></a> equals/hashCode on adapted function references on Native</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41394\"><code>KT-41394</code></a> Compilation failed: Backend Internal error: Exception during IR lowering</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41907\"><code>KT-41907</code></a> Framework test segfaults on GC on watchos_x86 compiled with -opt</li>\n</ul>\n<h3>Compiler</h3>\n<h4>New Features</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-21147\"><code>KT-21147</code></a> JEP 280: Indify String Concatenation (StringConcatFactory)</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-34178\"><code>KT-34178</code></a> Scripts should be able to access imports objects</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35549\"><code>KT-35549</code></a> Support kotlin-android-extensions in JVM IR backend (for use with Jetpack Compose projects)</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-31567\"><code>KT-31567</code></a> Support special semantics for underscore-named catch block parameters</li>\n</ul>\n<h4>Performance Improvements</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-20571\"><code>KT-20571</code></a> Coroutines: Reduce number of local variables stored at suspension point</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-28016\"><code>KT-28016</code></a> Coroutine state-machines spill/unspill shall be optimized using data-flow analysis</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-33394\"><code>KT-33394</code></a> UI freezes triggered by QualifiedExpressionResolver.resolveToPackageOrClassPrefix</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-36814\"><code>KT-36814</code></a> Support optimized delegated properties in JVM_IR</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-36829\"><code>KT-36829</code></a> Optimize 'in' expressions (operator fun contains) in JVM_IR</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41741\"><code>KT-41741</code></a> NI: &quot;AssertionError: Empty intersection for types&quot; with generic Java collection</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42195\"><code>KT-42195</code></a> NI: prohibitively long compilation time for values of nested data structures with type inference</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42221\"><code>KT-42221</code></a> Native compiler never finishes frontend phase after migrating to Kotlin 1.4.10</li>\n</ul>\n<h4>Fixes</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-11713\"><code>KT-11713</code></a> Refine visibility check for synthetic property with protected setter</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-16222\"><code>KT-16222</code></a> Coroutine should be clearing any internal state as soon as possible to avoid memory leaks</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-25519\"><code>KT-25519</code></a> Extra inline marks inside suspending function callable reference bytecode</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-33226\"><code>KT-33226</code></a> Object INSTANCE field not annotated with NotNull in generated bytecode</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35495\"><code>KT-35495</code></a> FIR: forbid non-Java synthetic properties</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35651\"><code>KT-35651</code></a> Kotlin stdlib has greater resolution priority than jars added via <a href=\"https://github.com/file\">@file</a>:DependsOn annotation</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35716\"><code>KT-35716</code></a> Using <a href=\"https://github.com/JvmOverloads\">@JvmOverloads</a> in <a href=\"https://github.com/JvmStatic\">@JvmStatic</a> functions in interface companion objects causes a ClassFormatError</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35730\"><code>KT-35730</code></a> FIR: consider creating fake overrides for objects</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/d0c005400b1d2e220e16fea1343e6dd0e074f086\"><code>d0c0054</code></a> Update changelog for 1.4.20 release</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/49a7e0068569df3039b22a69ddd31c8839ae82b5\"><code>49a7e00</code></a> Run tests AS42 under JDK 11</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/0e75999ce1b77dc2974b8b584aad94e33c76b552\"><code>0e75999</code></a> Clean up non failed tests in AS42</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/995df014e391a269c88e7c03ea064b54c2ebb401\"><code>995df01</code></a> Don't set KOTLIN_BUNDLED in unit tests in AS42</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/90305141cd8eeaf42c8d8494d2f234096dd037d6\"><code>9030514</code></a> Use absolute path to the project in test in AS 4.2</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/8aea0139b049dd8ac450990c4b2493d0333629ca\"><code>8aea013</code></a> Fix ClassNotFoundException: org.w3c.dom.ElementTraversal</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/c37d269225c1ff56a24d9fadf1469d5a5ab759d8\"><code>c37d269</code></a> Fix compilation</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/53e74af304accd4b6e2d657967a9765f8aebec89\"><code>53e74af</code></a> Register DumpUtil if it has not been registered yet in AS42</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/5cc229cfb3ed6691e4d78fa82a247b7dd3c46b53\"><code>5cc229c</code></a> Fix compilation in AS 4.2</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/be71a871ae7b79c9291ca5685aec3c335ed731e5\"><code>be71a87</code></a> Fix tests for as42.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/JetBrains/kotlin/compare/v1.3.72...v1.4.20\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlin:kotlin-stdlib&package-manager=gradle&previous-version=1.3.72&new-version=1.4.20)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2131", "Bump biz.aQute.bnd.builder from 5.1.0 to 5.2.0", null, "dependabot[bot]", "12/03/20, 07:40:41 PM", "Bumps biz.aQute.bnd.builder from 5.1.0 to 5.2.0.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=biz.aQute.bnd.builder&package-manager=gradle&previous-version=5.1.0&new-version=5.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2132", "Bump assertj-core from 3.16.1 to 3.18.1", null, "dependabot[bot]", "12/03/20, 07:41:03 PM", "Bumps [assertj-core](https://github.com/assertj/assertj-core) from 3.16.1 to 3.18.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/5cbaded0a80ea44765d656d4b535a384be7b309b\"><code>5cbaded</code></a> [maven-release-plugin] prepare release assertj-core-3.18.1</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/4e04c29ce67b712af1661aae4706c883c20d2c7e\"><code>4e04c29</code></a> Make isElementOfCustomAssert protected</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/e78f410fdcb4454971a775470cb7ab0f582d52bd\"><code>e78f410</code></a> Fix error mesage of ShouldNotHaveSameClass and test naming convention of same...</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/4dca4e74d81de5c7e5f038b0d69877922bf5212b\"><code>4dca4e7</code></a> Bump verify.bndrun junit version</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/4b500d2fec3e61c6700dc54247c49b7cf893d283\"><code>4b500d2</code></a> Add map(\u2026) and flatMap(\u2026) to iterable assertions as aliases of extracting/fla...</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/41a6c4208f93f29327142d30a3cdaa1e49c329f4\"><code>41a6c42</code></a> Code cleanup and minor test refactoring</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/c11e82f6ea6fb4ef3f933657c38b187723acbc88\"><code>c11e82f</code></a> Bump verify.bndrun assertj-core version</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/1b823e353b1b7b1c49a5b2424ac1fb0d1fb833d0\"><code>1b823e3</code></a> Bump byte-buddy.version from 1.10.17 to 1.10.18 (<a href=\"https://github-redirect.dependabot.com/assertj/assertj-core/issues/2031\">#2031</a>)</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/0f103046e074a13efd177361e4763f9b6e11a5d5\"><code>0f10304</code></a> Bump junit-jupiter.version from 5.6.2 to 5.6.3</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/b4b8b583dd2ab6a5c573988de3636ba42fb72125\"><code>b4b8b58</code></a> Bump mockito.version from 3.5.15 to 3.6.0</li>\n<li>Additional commits viewable in <a href=\"https://github.com/assertj/assertj-core/compare/assertj-core-3.16.1...assertj-core-3.18.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.assertj:assertj-core&package-manager=gradle&previous-version=3.16.1&new-version=3.18.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2135", "Add void static method mocking example", "G\u00e1bor Lipt\u00e1k", "gliptak", "12/08/20, 11:18:11 AM", "Signed-off-by: G\u00e1bor Lipt\u00e1k <gliptak@gmail.com>\r\n\r\nhttps://github.com/mockito/mockito/issues/2027", "NaN"], ["2136", "Bump osgi.core from 7.0.0 to 8.0.0", null, "dependabot[bot]", "12/08/20, 11:15:39 AM", "Bumps osgi.core from 7.0.0 to 8.0.0.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.osgi:osgi.core&package-manager=gradle&previous-version=7.0.0&new-version=8.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2137", "Bump kotlin-stdlib from 1.4.20 to 1.4.21", null, "dependabot[bot]", "12/08/20, 11:14:16 AM", "Bumps [kotlin-stdlib](https://github.com/JetBrains/kotlin) from 1.4.20 to 1.4.21.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/releases\">kotlin-stdlib's releases</a>.</em></p>\n<blockquote>\n<h2>Kotlin 1.4.21</h2>\n<h2>CHANGELOG</h2>\n<h3>IDE. Gradle Integration</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42561\"><code>KT-42561</code></a> &quot;Could not get unknown property 'sourceSets' for project&quot; when running JVM module with included MPP module</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43511\"><code>KT-43511</code></a> Task 'MainKt.main()' not found in root project</li>\n</ul>\n<h3>Libraries</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43586\"><code>KT-43586</code></a> Source documentation:  ExperimentalPathAPI misspelt</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43745\"><code>KT-43745</code></a> <code>replace</code> for strings ignores case of locale characters</li>\n</ul>\n<h3>Native. C and ObjC Import</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43265\"><code>KT-43265</code></a> Kotlin/Native fails to generate alias for C enum entry</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43530\"><code>KT-43530</code></a> Kotlin/Native compilation fails with &quot;Symbol for public kotlin/Array.size.<!-- raw HTML omitted -->|-8255337774232345969[0] is unbound&quot;</li>\n</ul>\n<h3>Native</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43517\"><code>KT-43517</code></a> On Kotlin 1.4.20 we got kotlin.NotImplementedError when try compile iOS framework</li>\n</ul>\n<h3>Tools. Gradle. JS</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43668\"><code>KT-43668</code></a> PackageJson task use file dependencies as is (files and directories), but only files necessary</li>\n</ul>\n<h2>Checksums</h2>\n<table>\n<thead>\n<tr>\n<th>File</th>\n<th>Sha256</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>kotlin-compiler-1.4.21.zip</td>\n<td>46720991a716e90bfc0cf3f2c81b2bd735c14f4ea6a5064c488e04fd76e6b6c7</td>\n</tr>\n<tr>\n<td>kotlin-native-linux-1.4.21.tar.gz</td>\n<td>140c06ede7d4c23ff65fb8de507aff117e96d8330dbb9b910a730bfb70bca59c</td>\n</tr>\n<tr>\n<td>kotlin-native-macos-1.4.21.tar.gz</td>\n<td>e7a13b3138e2769a1ab0b9eb8187b56f8874380cdd96479702f1063ce7de69ca</td>\n</tr>\n<tr>\n<td>kotlin-native-windows-1.4.21.zip</td>\n<td>e97242bb79a945f20ebc749200f30b80865b725054b098d9c2dec3e09a98a3d</td>\n</tr>\n</tbody>\n</table>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md\">kotlin-stdlib's changelog</a>.</em></p>\n<blockquote>\n<h1>CHANGELOG</h1>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/d6330337a988200443c66c23ec6f2ed194e502a3\"><code>d633033</code></a> FIR IDE: introduce param for enabling disabled tests</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/a671054fa32f991bb4ebde2cf5aa1ac915f0337e\"><code>a671054</code></a> FIR IDE: change until-build to 203.* in plugin.xml</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/b6d80a11498483b9c2fb7b66cb25159a918b15ab\"><code>b6d80a1</code></a> Build: Fix kotlin-compiler-internal-test-framework empty sources jar</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/1d51dffd768340e00893585f8b62aba300a9ea56\"><code>1d51dff</code></a> Reminder about -Pidea.fir.plugin=true for running fir-idea tests</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/e5c62c38389232da0f889ab887ddeb344b80d940\"><code>e5c62c3</code></a> [JS] Disable special checks in labeled-block-to-do-while</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/7ca54ec4058e4de0a96b86faa1057faa74672be1\"><code>7ca54ec</code></a> [JS IR] unmute test arraySort.kt</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/4c69f78de8aa7f05f8d362619c4c82adfd84c0da\"><code>4c69f78</code></a> [JS] Replace J2V8 based ScriptEngine with a process-based version</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/39cc149da0c313abf046af957aa24d6fe951fa3d\"><code>39cc149</code></a> [JS] Revert disabling running ES6 tests on all platforms except linux</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/2cb4a4906f9482d0aeff727eb5d0b38cc6ec7168\"><code>2cb4a49</code></a> [JS] Remove j2v8 from dependencies</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/f4431a21fc681b4580d6fbbaed1c52a9a78ea8aa\"><code>f4431a2</code></a> [JS] Make all JS test tasks depending on setupV8</li>\n<li>Additional commits viewable in <a href=\"https://github.com/JetBrains/kotlin/compare/v1.4.20...v1.4.21\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlin:kotlin-stdlib&package-manager=gradle&previous-version=1.4.20&new-version=1.4.21)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2138", "use GITHUB_TOKEN for shipkit", "Slawomir Jaranowski", "slawekjaranowski", "12/08/20, 10:57:28 PM", "replace hardcoded key and GH_WRITE_TOKEN by built-in GITHUB_TOKEN\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [ ] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2140", "Endorsed MockitoTestNGListener in the documentation", "Slawomir Jaranowski", "slawekjaranowski", "01/06/21, 03:23:47 AM", "After the latest changes in MockitoTestNGListener I sure that can be used without worry.\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2145", "Fix in the doc for \"Mocking object construction\"", "Daniel Kroening", "kroening", "01/03/21, 07:14:46 PM", "This is a suggestion for changing the documentation for \"Mocking object\r\nconstruction\".  Previously, the documentation has suggested that\r\n`MockedConstruction` can define mock behavior and to verify static method\r\ninvocations.  However, it is meant for defining mock behavior and verifying\r\nnon-static method invocations.\r\n\r\n - [X] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [X] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [ ] Avoid other runtime dependencies\r\n - [X] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [X] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2148", "Apply new Shipkit Auto Version plugin property", "Michal Szestowicki", "shestee", "12/17/20, 01:15:56 PM", "Mockito uses Shipkit Gradle plugins. The Shipkit Auto Version plugin exposes now new 'ext' property for getting previous revision: project.ext.'shipkit-auto-version.previous-tag'. This property is easier to use than earlier used 'shipkit-auto-version.previous-version'; using it makes also code clearer.\r\nEarlier to get previous revision (e.g. for generating chengelog with Shipkit Changelog plugin) concatenation and possible conditional had to be used. Now it requires just to refer to 'shipkit-auto-version.previous-tag' alone.\r\n\r", "NaN"], ["2150", "Bump org.eclipse.osgi from 3.16.0 to 3.16.100", null, "dependabot[bot]", "12/17/20, 07:39:30 AM", "Bumps org.eclipse.osgi from 3.16.0 to 3.16.100.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.eclipse.platform:org.eclipse.osgi&package-manager=gradle&previous-version=3.16.0&new-version=3.16.100)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2152", "Bump versions.bytebuddy from 1.10.18 to 1.10.19", null, "dependabot[bot]", "12/21/20, 08:15:55 AM", "Bumps `versions.bytebuddy` from 1.10.18 to 1.10.19.\nUpdates `byte-buddy` from 1.10.18 to 1.10.19\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.10.19</h2>\n<ul>\n<li>Fix constructor type resolution in <code>MethodCall</code>.</li>\n<li>Add support for incremental builds to Byte Buddy Maven plugin.</li>\n<li>Correctly handle empty, primitive arrays as annotation properties in <code>TypePool</code>.</li>\n<li>Improve matching of rebaseale methods by using signature tokens rather then full tokens.</li>\n<li>Use <em>get</em> as prefix for getters of <code>Boolean</code> wrapper properties.</li>\n<li>Consider types in <code>net.bytebuddy.renamed</code> package in Byte Buddy agent.</li>\n<li>Set names for all cached variables.</li>\n<li>Do not fail validation for generic properties in Java 1.4 class files since they can be legally contained due to JSR14.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy's changelog</a>.</em></p>\n<blockquote>\n<h3>21. December 2020: version 1.10.19</h3>\n<ul>\n<li>Fix constructor type resolution in <code>MethodCall</code>.</li>\n<li>Add support for incremental builds to Byte Buddy Maven plugin.</li>\n<li>Correctly handle empty, primitive arrays as annotation properties in <code>TypePool</code>.</li>\n<li>Improve matching of rebaseale methods by using signature tokens rather then full tokens.</li>\n<li>Use <em>get</em> as prefix for getters of <code>Boolean</code> wrapper properties.</li>\n<li>Consider types in <code>net.bytebuddy.renamed</code> package in Byte Buddy agent.</li>\n<li>Set names for all cached variables.</li>\n<li>Do not fail validation for generic properties in Java 1.4 class files since they can be legally contained due to JSR14.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c437aa8ae7e080adbf2eabd3d790b5593644ced5\"><code>c437aa8</code></a> [maven-release-plugin] prepare release byte-buddy-1.10.19</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/d6163a7341f3c849585ee105494e5a8ee1f97707\"><code>d6163a7</code></a> [release] new release</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/b4245f830c0a89e5762e5b7c377f5c24d0943de1\"><code>b4245f8</code></a> Remove unused import.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/e02a2f997b9e5185dec6324eb32b909b6724db79\"><code>e02a2f9</code></a> Add names for generated cache variables.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/16b5411f4e99b7112920d8ed641f0add58519966\"><code>16b5411</code></a> Add tests for method list properties.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/7e0a874e423835bf30425a7e2136f8e52eed260e\"><code>7e0a874</code></a> Use signature token rather then method token to avoid matching based on non-e...</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/2738fbccd1c8d851c4fbb89833dfa7c3d483a1c3\"><code>2738fbc</code></a> Add JSR14 class file and adjust verification to allow for their implementation.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/745d77e1389094d5693cd802120074903ceda94a\"><code>745d77e</code></a> Adjust build to support Java 17.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/92629e397c69f9aeee3dd14f349afc17c729fe2b\"><code>92629e3</code></a> Make Maven work with Java 16.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/6fb6a77975576bbc73e2dff3a5aa72277046cbfb\"><code>6fb6a77</code></a> Guard invocation handler adapter against static method.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.10.18...byte-buddy-1.10.19\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-agent` from 1.10.18 to 1.10.19\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-agent's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.10.19</h2>\n<ul>\n<li>Fix constructor type resolution in <code>MethodCall</code>.</li>\n<li>Add support for incremental builds to Byte Buddy Maven plugin.</li>\n<li>Correctly handle empty, primitive arrays as annotation properties in <code>TypePool</code>.</li>\n<li>Improve matching of rebaseale methods by using signature tokens rather then full tokens.</li>\n<li>Use <em>get</em> as prefix for getters of <code>Boolean</code> wrapper properties.</li>\n<li>Consider types in <code>net.bytebuddy.renamed</code> package in Byte Buddy agent.</li>\n<li>Set names for all cached variables.</li>\n<li>Do not fail validation for generic properties in Java 1.4 class files since they can be legally contained due to JSR14.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-agent's changelog</a>.</em></p>\n<blockquote>\n<h3>21. December 2020: version 1.10.19</h3>\n<ul>\n<li>Fix constructor type resolution in <code>MethodCall</code>.</li>\n<li>Add support for incremental builds to Byte Buddy Maven plugin.</li>\n<li>Correctly handle empty, primitive arrays as annotation properties in <code>TypePool</code>.</li>\n<li>Improve matching of rebaseale methods by using signature tokens rather then full tokens.</li>\n<li>Use <em>get</em> as prefix for getters of <code>Boolean</code> wrapper properties.</li>\n<li>Consider types in <code>net.bytebuddy.renamed</code> package in Byte Buddy agent.</li>\n<li>Set names for all cached variables.</li>\n<li>Do not fail validation for generic properties in Java 1.4 class files since they can be legally contained due to JSR14.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c437aa8ae7e080adbf2eabd3d790b5593644ced5\"><code>c437aa8</code></a> [maven-release-plugin] prepare release byte-buddy-1.10.19</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/d6163a7341f3c849585ee105494e5a8ee1f97707\"><code>d6163a7</code></a> [release] new release</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/b4245f830c0a89e5762e5b7c377f5c24d0943de1\"><code>b4245f8</code></a> Remove unused import.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/e02a2f997b9e5185dec6324eb32b909b6724db79\"><code>e02a2f9</code></a> Add names for generated cache variables.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/16b5411f4e99b7112920d8ed641f0add58519966\"><code>16b5411</code></a> Add tests for method list properties.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/7e0a874e423835bf30425a7e2136f8e52eed260e\"><code>7e0a874</code></a> Use signature token rather then method token to avoid matching based on non-e...</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/2738fbccd1c8d851c4fbb89833dfa7c3d483a1c3\"><code>2738fbc</code></a> Add JSR14 class file and adjust verification to allow for their implementation.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/745d77e1389094d5693cd802120074903ceda94a\"><code>745d77e</code></a> Adjust build to support Java 17.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/92629e397c69f9aeee3dd14f349afc17c729fe2b\"><code>92629e3</code></a> Make Maven work with Java 16.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/6fb6a77975576bbc73e2dff3a5aa72277046cbfb\"><code>6fb6a77</code></a> Guard invocation handler adapter against static method.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.10.18...byte-buddy-1.10.19\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-android` from 1.10.18 to 1.10.19\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-android's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.10.19</h2>\n<ul>\n<li>Fix constructor type resolution in <code>MethodCall</code>.</li>\n<li>Add support for incremental builds to Byte Buddy Maven plugin.</li>\n<li>Correctly handle empty, primitive arrays as annotation properties in <code>TypePool</code>.</li>\n<li>Improve matching of rebaseale methods by using signature tokens rather then full tokens.</li>\n<li>Use <em>get</em> as prefix for getters of <code>Boolean</code> wrapper properties.</li>\n<li>Consider types in <code>net.bytebuddy.renamed</code> package in Byte Buddy agent.</li>\n<li>Set names for all cached variables.</li>\n<li>Do not fail validation for generic properties in Java 1.4 class files since they can be legally contained due to JSR14.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-android's changelog</a>.</em></p>\n<blockquote>\n<h3>21. December 2020: version 1.10.19</h3>\n<ul>\n<li>Fix constructor type resolution in <code>MethodCall</code>.</li>\n<li>Add support for incremental builds to Byte Buddy Maven plugin.</li>\n<li>Correctly handle empty, primitive arrays as annotation properties in <code>TypePool</code>.</li>\n<li>Improve matching of rebaseale methods by using signature tokens rather then full tokens.</li>\n<li>Use <em>get</em> as prefix for getters of <code>Boolean</code> wrapper properties.</li>\n<li>Consider types in <code>net.bytebuddy.renamed</code> package in Byte Buddy agent.</li>\n<li>Set names for all cached variables.</li>\n<li>Do not fail validation for generic properties in Java 1.4 class files since they can be legally contained due to JSR14.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c437aa8ae7e080adbf2eabd3d790b5593644ced5\"><code>c437aa8</code></a> [maven-release-plugin] prepare release byte-buddy-1.10.19</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/d6163a7341f3c849585ee105494e5a8ee1f97707\"><code>d6163a7</code></a> [release] new release</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/b4245f830c0a89e5762e5b7c377f5c24d0943de1\"><code>b4245f8</code></a> Remove unused import.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/e02a2f997b9e5185dec6324eb32b909b6724db79\"><code>e02a2f9</code></a> Add names for generated cache variables.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/16b5411f4e99b7112920d8ed641f0add58519966\"><code>16b5411</code></a> Add tests for method list properties.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/7e0a874e423835bf30425a7e2136f8e52eed260e\"><code>7e0a874</code></a> Use signature token rather then method token to avoid matching based on non-e...</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/2738fbccd1c8d851c4fbb89833dfa7c3d483a1c3\"><code>2738fbc</code></a> Add JSR14 class file and adjust verification to allow for their implementation.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/745d77e1389094d5693cd802120074903ceda94a\"><code>745d77e</code></a> Adjust build to support Java 17.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/92629e397c69f9aeee3dd14f349afc17c729fe2b\"><code>92629e3</code></a> Make Maven work with Java 16.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/6fb6a77975576bbc73e2dff3a5aa72277046cbfb\"><code>6fb6a77</code></a> Guard invocation handler adapter against static method.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.10.18...byte-buddy-1.10.19\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2157", "Bump kotlin-stdlib from 1.4.21 to 1.4.21-2", null, "dependabot[bot]", "01/03/21, 07:18:43 PM", "Bumps [kotlin-stdlib](https://github.com/JetBrains/kotlin) from 1.4.21 to 1.4.21-2.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/JetBrains/kotlin/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlin:kotlin-stdlib&package-manager=gradle&previous-version=1.4.21&new-version=1.4.21-2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2158", "Add field type in @Mock example", "Piotrek \u017bygie\u0142o", "pzygielo", "12/31/20, 03:11:17 AM", "javadoc-only change\r\n<sup>(IMO not worth separate issue nor RN mentioning.)</sup>", "NaN"], ["2160", "Avoid Gradle module files", "Szczepan Faber", "mockitoguy", "12/30/20, 10:00:34 PM", "Avoid Gradle module files until there is a use case for them. The less we publish the less complexity.\r\n\r\nFixes: #2159\r\n\r\nTested by running `./gradlew publishToMavenLocal' and inspecting files / poms.", "NaN"], ["2161", "Fixed build on Java 15", "Szczepan Faber", "mockitoguy", "12/30/20, 09:54:10 PM", "Attempted to fix the build by removing dead link that Javadoc generation was complaining about.", "NaN"], ["2163", "Apply new Shipkit Changelog plugin properties", "Michal Szestowicki", "shestee", "12/31/20, 01:08:42 AM", "Two new properties has been recently added to **Shipkit Changelog** plugin that is used by Mockito:\r\n1. `newTagRevision` eliminates problem with wrong tagging, when release is tagged with revision reference that the release does not come from, but is the latest one on master branch. To get the commit SHA that triggered the workflow _'GITHUB_SHA'_ env var is used.\r\n2. `githubToken` is used both to fetch and post via GH API, instead of `readOnlyToken` and `writeToken`. As the token assigned to _'githubToken'_ should have write access to the repository, it should be supplied by the env variable to keep things safe. Using this property simplifies configuration. Deprecated properties should be replaced with the new one.\r\n\r", "NaN"], ["2165", "Publish new minor version to Maven central", "Tim van der Lippe", "TimvdLippe", "01/04/21, 03:47:27 PM", "[ci maven-central-release]\r\n\r\n@mockitoguy is this still the correct way to publish a new minor version?", "NaN"], ["2168", "Gradle build script tidy-up - renamed plugin name", "Michal Szestowicki", "shestee", "01/05/21, 04:01:30 PM", "Due to recent Github related naming convention applied to Shipkit Changelog plugin, the referenced _'org.shipkit.shipkit-gh-release'_ package should be changed for _'org.shipkit.shipkit-github-release'_.\r\n\r", "NaN"], ["2170", "Bump Shipkit plugins versions", "Michal Szestowicki", "shestee", "01/11/21, 03:30:52 AM", "Recently new versions of Shipkit Auto Version and Shipkit Changelog were released. The plugins' versions in the project can now be bumped.", "NaN"], ["2172", "Travis -> GH Actions", "Szczepan Faber", "mockitoguy", "01/12/21, 03:37:06 AM", "Removed Travis configuration file as we have moved to GH Actions", "NaN"], ["2175", "ArgumentMatches: fix Javadoc typo/grammar", "Per Lundberg", "perlun", "01/15/21, 11:03:38 AM", "I started out with noticing the \"safer that it was\" part which felt like a typo. Then I realized there were perhaps more errors in this sentence (which was duplicated in multiple places in this file). Please verify that I understood the intent of this comment correctly, but my hope is that this is now the more correct way to express this.\r\n\r\nAgain, thanks for a great framework! :bow: ", "NaN"], ["2176", "Bump versions.errorprone from 2.4.0 to 2.5.1", null, "dependabot[bot]", "01/15/21, 12:08:27 PM", "Bumps `versions.errorprone` from 2.4.0 to 2.5.1.\nUpdates `error_prone_core` from 2.4.0 to 2.5.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google/error-prone/releases\">error_prone_core's releases</a>.</em></p>\n<blockquote>\n<h2>Error Prone 2.5.1</h2>\n<p>Changes</p>\n<p>NoSuchMethodError: 'com.sun.tools.javac.util.List com.sun.tools.javac.code.Symbol$TypeSymbol.getEnclosedElements</p>\n<ul>\n<li>Fixed <code>NoSuchMethodError</code> crash in <code>HidingField</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2092\">#2092</a>)</li>\n<li>Fixed <code>NoSuchElementException</code> crash in <code>RestrictedApiChecker</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2099\">#2099</a>)</li>\n<li>False positive in <code>DifferentNameButSame</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2094\">#2094</a>)</li>\n<li>False positive in <code>UnnecessaryOptionalGet</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2101\">#2101</a>)</li>\n<li>False positive in <code>UnnecessaryMethodReference</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2102\">#2102</a>)</li>\n<li>Fixed a regression in JDK 16-EA support (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2105\">#2105</a>)</li>\n</ul>\n<h2>Error Prone 2.5.0</h2>\n<p>New checks:</p>\n<ul>\n<li><a href=\"http://errorprone.info/bugpattern/BanSerializableRead\">BanSerializableRead</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/CatchingUnchecked\">CatchingUnchecked</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ComputeIfAbsentAmbiguousReference\">ComputeIfAbsentAmbiguousReference</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DangerousLiteralNull\">DangerousLiteralNull</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DateChecker\">DateChecker</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DifferentNameButSame\">DifferentNameButSame</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DoNotCallSuggester\">DoNotCallSuggester</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DoNotClaimAnnotations\">DoNotClaimAnnotations</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DoNotMockAutoValue\">DoNotMockAutoValue</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerFormatString\">FloggerFormatString</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerLogVarargs\">FloggerLogVarargs</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerLogWithCause\">FloggerLogWithCause</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerMessageFormat\">FloggerMessageFormat</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerPassedAround\">FloggerPassedAround</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerRedundantIsEnabled\">FloggerRedundantIsEnabled</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerRequiredModifiers\">FloggerRequiredModifiers</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerSplitLogStatement\">FloggerSplitLogStatement</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerWithCause\">FloggerWithCause</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerWithoutCause\">FloggerWithoutCause</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/HashCodeToString\">HashCodeToString</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/IdentityHashMapUsage\">IdentityHashMapUsage</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ImmutableMemberCollection\">ImmutableMemberCollection</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ImmutableSetForContains\">ImmutableSetForContains</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/InitializeInline\">InitializeInline</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/InvalidThrowsLink\">InvalidThrowsLink</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/IsInstanceIncompatibleType\">IsInstanceIncompatibleType</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/JavaUtilDate\">JavaUtilDate</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/JodaConstructors\">JodaConstructors</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/JodaDateTimeConstants\">JodaDateTimeConstants</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/LongFloatConversion\">LongFloatConversion</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/MemberName\">MemberName</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/MisplacedScopeAnnotations\">MisplacedScopeAnnotations</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ObjectEqualsForPrimitives\">ObjectEqualsForPrimitives</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/OptionalMapUnusedValue\">OptionalMapUnusedValue</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ReturnsNullCollection\">ReturnsNullCollection</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/error-prone/commit/5e733ac0210893496c2e1eb7cb9e27b69ef3ae75\"><code>5e733ac</code></a> Release Error Prone 2.5.1</li>\n<li><a href=\"https://github.com/google/error-prone/commit/4f69766fb4693baf089963c3221590c0705f960e\"><code>4f69766</code></a> Support pre-JDK-8044853 early-desugaring of <code>JCNewClass</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/68614030bb176ecd3855bd5e1cb642c2a1df95d1\"><code>6861403</code></a> Don't set checks as <code>disableable = false</code> in external</li>\n<li><a href=\"https://github.com/google/error-prone/commit/a7f3413fe9c510dd434432cd616c1b8a81c53b0a\"><code>a7f3413</code></a> Handle classes with explicit enclosing instances in <code>DifferentNameButSame</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/7a651175436a0cf9a522a297ad252b3e85bc7111\"><code>7a65117</code></a> <code>Symbol.isLocal</code> was renamed in JDK 16</li>\n<li><a href=\"https://github.com/google/error-prone/commit/fb6d0492afb4827904772097c40b2c8e40033d7d\"><code>fb6d049</code></a> Don't suggest private constructors for abstract classes</li>\n<li><a href=\"https://github.com/google/error-prone/commit/7d93df418e7fd59d68931a19acb6bc913dba0e40\"><code>7d93df4</code></a> Fix handling of <code>super::</code> method references in <code>UnnecessaryMethodReference</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/b1eaa17a7d29d40d8a0a3d00196bf7fbab414d06\"><code>b1eaa17</code></a> Only report <code>UnnecessaryOptionalGet</code> findings if the receivers are identical</li>\n<li><a href=\"https://github.com/google/error-prone/commit/144c76057fe170d12269a4f5e44d34ab24c9e8b3\"><code>144c760</code></a> Address a <code>VisibleForTestingUsed</code> finding</li>\n<li><a href=\"https://github.com/google/error-prone/commit/0951985c7d55e5041f2f1a363c587644a9a66175\"><code>0951985</code></a> Generate Javadoc in CI pipeline</li>\n<li>Additional commits viewable in <a href=\"https://github.com/google/error-prone/compare/v2.4.0...v2.5.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `error_prone_test_helpers` from 2.4.0 to 2.5.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google/error-prone/releases\">error_prone_test_helpers's releases</a>.</em></p>\n<blockquote>\n<h2>Error Prone 2.5.1</h2>\n<p>Changes</p>\n<p>NoSuchMethodError: 'com.sun.tools.javac.util.List com.sun.tools.javac.code.Symbol$TypeSymbol.getEnclosedElements</p>\n<ul>\n<li>Fixed <code>NoSuchMethodError</code> crash in <code>HidingField</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2092\">#2092</a>)</li>\n<li>Fixed <code>NoSuchElementException</code> crash in <code>RestrictedApiChecker</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2099\">#2099</a>)</li>\n<li>False positive in <code>DifferentNameButSame</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2094\">#2094</a>)</li>\n<li>False positive in <code>UnnecessaryOptionalGet</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2101\">#2101</a>)</li>\n<li>False positive in <code>UnnecessaryMethodReference</code> (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2102\">#2102</a>)</li>\n<li>Fixed a regression in JDK 16-EA support (<a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2105\">#2105</a>)</li>\n</ul>\n<h2>Error Prone 2.5.0</h2>\n<p>New checks:</p>\n<ul>\n<li><a href=\"http://errorprone.info/bugpattern/BanSerializableRead\">BanSerializableRead</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/CatchingUnchecked\">CatchingUnchecked</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ComputeIfAbsentAmbiguousReference\">ComputeIfAbsentAmbiguousReference</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DangerousLiteralNull\">DangerousLiteralNull</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DateChecker\">DateChecker</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DifferentNameButSame\">DifferentNameButSame</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DoNotCallSuggester\">DoNotCallSuggester</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DoNotClaimAnnotations\">DoNotClaimAnnotations</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/DoNotMockAutoValue\">DoNotMockAutoValue</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerFormatString\">FloggerFormatString</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerLogVarargs\">FloggerLogVarargs</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerLogWithCause\">FloggerLogWithCause</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerMessageFormat\">FloggerMessageFormat</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerPassedAround\">FloggerPassedAround</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerRedundantIsEnabled\">FloggerRedundantIsEnabled</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerRequiredModifiers\">FloggerRequiredModifiers</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerSplitLogStatement\">FloggerSplitLogStatement</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerWithCause\">FloggerWithCause</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/FloggerWithoutCause\">FloggerWithoutCause</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/HashCodeToString\">HashCodeToString</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/IdentityHashMapUsage\">IdentityHashMapUsage</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ImmutableMemberCollection\">ImmutableMemberCollection</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ImmutableSetForContains\">ImmutableSetForContains</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/InitializeInline\">InitializeInline</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/InvalidThrowsLink\">InvalidThrowsLink</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/IsInstanceIncompatibleType\">IsInstanceIncompatibleType</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/JavaUtilDate\">JavaUtilDate</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/JodaConstructors\">JodaConstructors</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/JodaDateTimeConstants\">JodaDateTimeConstants</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/LongFloatConversion\">LongFloatConversion</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/MemberName\">MemberName</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/MisplacedScopeAnnotations\">MisplacedScopeAnnotations</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ObjectEqualsForPrimitives\">ObjectEqualsForPrimitives</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/OptionalMapUnusedValue\">OptionalMapUnusedValue</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/ReturnsNullCollection\">ReturnsNullCollection</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/error-prone/commit/5e733ac0210893496c2e1eb7cb9e27b69ef3ae75\"><code>5e733ac</code></a> Release Error Prone 2.5.1</li>\n<li><a href=\"https://github.com/google/error-prone/commit/4f69766fb4693baf089963c3221590c0705f960e\"><code>4f69766</code></a> Support pre-JDK-8044853 early-desugaring of <code>JCNewClass</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/68614030bb176ecd3855bd5e1cb642c2a1df95d1\"><code>6861403</code></a> Don't set checks as <code>disableable = false</code> in external</li>\n<li><a href=\"https://github.com/google/error-prone/commit/a7f3413fe9c510dd434432cd616c1b8a81c53b0a\"><code>a7f3413</code></a> Handle classes with explicit enclosing instances in <code>DifferentNameButSame</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/7a651175436a0cf9a522a297ad252b3e85bc7111\"><code>7a65117</code></a> <code>Symbol.isLocal</code> was renamed in JDK 16</li>\n<li><a href=\"https://github.com/google/error-prone/commit/fb6d0492afb4827904772097c40b2c8e40033d7d\"><code>fb6d049</code></a> Don't suggest private constructors for abstract classes</li>\n<li><a href=\"https://github.com/google/error-prone/commit/7d93df418e7fd59d68931a19acb6bc913dba0e40\"><code>7d93df4</code></a> Fix handling of <code>super::</code> method references in <code>UnnecessaryMethodReference</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/b1eaa17a7d29d40d8a0a3d00196bf7fbab414d06\"><code>b1eaa17</code></a> Only report <code>UnnecessaryOptionalGet</code> findings if the receivers are identical</li>\n<li><a href=\"https://github.com/google/error-prone/commit/144c76057fe170d12269a4f5e44d34ab24c9e8b3\"><code>144c760</code></a> Address a <code>VisibleForTestingUsed</code> finding</li>\n<li><a href=\"https://github.com/google/error-prone/commit/0951985c7d55e5041f2f1a363c587644a9a66175\"><code>0951985</code></a> Generate Javadoc in CI pipeline</li>\n<li>Additional commits viewable in <a href=\"https://github.com/google/error-prone/compare/v2.4.0...v2.5.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2179", "Fix reversed order of verify parameters", "Stefan Bohn", "bohni", "01/16/21, 10:14:07 AM", "For consistency the parameters of the method\r\nMockedStatic.verify(VerificationMode, Verification)\r\nhave been swapped to\r\nMockedStatic.verify(Verification, VerificationMode)\r\nas this order is already used in\r\nMockito.verify(T, VerificationMode)\r\n\r\nFixes: #2173\r\n\r\ncheck list\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_", "NaN"], ["2180", "Fix typo in Javadocs of MockedConstruction", "Kim In Hoi", "hotire", "01/17/21, 01:52:46 PM", "Hi \ud83d\udd90\r\n\r\nI noted this while reading the Javadocs of MockedConstruction.\r\n\r\nThey were referring to static method and out of scope variable. It isn't quite easy to grasp in this context.\r\n \r\nI think it's just a copy-paste mistake.\r\n\r", "NaN"], ["2189", "Bump assertj-core from 3.18.1 to 3.19.0", null, "dependabot[bot]", "01/27/21, 07:35:37 PM", "Bumps [assertj-core](https://github.com/assertj/assertj-core) from 3.18.1 to 3.19.0.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/54e2bcae01429f43fdc135e36e4ccc2349e52da7\"><code>54e2bca</code></a> [maven-release-plugin] prepare release assertj-core-3.19.0</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/133719e9e7a4df7e4c4e03b57c3483b3a3d5f051\"><code>133719e</code></a> Minor javadoc edit</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/fd77d821299cfdaf2d4edd746714cb22e19e4266\"><code>fd77d82</code></a> Deprecate isXmlEqualToContentOf in favor of XML Unit</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/52c6a284bb8ce0c9063782df84f4fcc06b7c5a29\"><code>52c6a28</code></a> Javadoc improvements</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/bb13aac7fdc73558544453e7c3f0f1db8a526619\"><code>bb13aac</code></a> Rename isEmpty/isNotEmpty to isEmptyFile/isNotEmptyFile</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/3b85988540abcf9d1d3ce6e8267b238fea03c70e\"><code>3b85988</code></a> Bump equalsverifier from 3.5.1 to 3.5.2 (<a href=\"https://github-redirect.dependabot.com/assertj/assertj-core/issues/2104\">#2104</a>)</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/67822a4b6ccb63a2639c3d78cb5fa54938c01fbd\"><code>67822a4</code></a> Javadoc fixes and improvements</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/89292201d295dd7fbf4848b79bf0395ca26b16ba\"><code>8929220</code></a> Prepare 3.19.0 version</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/81ba1cc4fd88f91b98e8c88666747c164d70df9e\"><code>81ba1cc</code></a> Fix javadoc warning</li>\n<li><a href=\"https://github.com/assertj/assertj-core/commit/7827265a7b90db7875747857e6e4cb03fa883c51\"><code>7827265</code></a> Remove &lt;&gt; from ShouldBeEqualByComparingOnlyGivenFields, ShouldBeEqualToIgnori...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/assertj/assertj-core/compare/assertj-core-3.18.1...assertj-core-3.19.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.assertj:assertj-core&package-manager=gradle&previous-version=3.18.1&new-version=3.19.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2190", "Bump shipkit-changelog from 1.1.1 to 1.1.4", null, "dependabot[bot]", "02/02/21, 10:35:39 PM", "Bumps shipkit-changelog from 1.1.1 to 1.1.4.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-changelog&package-manager=gradle&previous-version=1.1.1&new-version=1.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2193", "Fixes #2154 : java.lang.Object is now instrumented again", "Jan Mosig", "JanMosigItemis", "02/01/21, 07:25:15 PM", "Seems like \r\n\r\n```\r\n// The object type does not ever need instrumentation.\r\ntargets.remove(Object.class);\r\n```\r\n\r\nin `org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(Set<Class<?>>, boolean)` was a bit over the top, i. e. it does seem to break mocking of `toString` when inherited from `java.lang.Object`.\r\n\r\nI added a test for this which should have been there in the first place. Due to this, I am still not sure if removing the line is safe, even if the whole test suite is green. Please review carefully.\r\n\r", "NaN"], ["2194", "Add API for clearing mocks.", "Rafael Winterhalter", "raphw", "02/11/21, 07:12:42 PM", "By clearing mocks, caches are emptied and instrumentations are reversed.", "NaN"], ["2195", "Bump versions.bytebuddy from 1.10.19 to 1.10.20", null, "dependabot[bot]", "02/04/21, 03:31:32 PM", "Bumps `versions.bytebuddy` from 1.10.19 to 1.10.20.\nUpdates `byte-buddy` from 1.10.19 to 1.10.20\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy, 1.10.20</h2>\n<ul>\n<li>Reuse simple but commonly used matchers as constants to avoid repeated allocation.</li>\n<li>Allow build plugins to be discovered from a plugin's class path.</li>\n<li>Do not use cached version of classes that are currently transformed.</li>\n<li>Allow using an incremental class path for build plugins in Gradle.</li>\n<li>Fix filter applied to declared, non-virtual methods in <code>MethodCall</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy's changelog</a>.</em></p>\n<blockquote>\n<h3>3. February 2021: version 1.10.20</h3>\n<ul>\n<li>Reuse simple but commonly used matchers as constants to avoid repeated allocation.</li>\n<li>Allow build plugins to be discovered from a plugin's class path.</li>\n<li>Do not use cached version of classes that are currently transformed.</li>\n<li>Allow using an incremental class path for build plugins in Gradle.</li>\n<li>Fix filter applied to declared, non-virtual methods in <code>MethodCall</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c1fb9efa2f4c1390d6efb794bee57511b74333dc\"><code>c1fb9ef</code></a> [maven-release-plugin] prepare release byte-buddy-1.10.20</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/83cebfa4d349e91a3926e18fa2348273e7c5ea15\"><code>83cebfa</code></a> [release] New release</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/d30e96897195b607784da3bd58d98db1035e1f17\"><code>d30e968</code></a> Add matcher filter for declared methods.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/636c274333744ff3d44cb5ace1da926a400e02a2\"><code>636c274</code></a> Add support for incremental class path in Byte Buddy Gradle task.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/bf3ad4e3c8c416e3cd19d0b95f9ad3dabeea014f\"><code>bf3ad4e</code></a> Do not discover plugins that were explicitly configured or previously discove...</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/84a5c4037199fedc6f0fa4392321a6c6567f1462\"><code>84a5c40</code></a> Correct variable.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/ca89db87f2213f1e8c8cf9b34acc058b0149b63b\"><code>ca89db8</code></a> Add info in readme.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/0b7dcdf676493cd857f5ed66a34c461423e96af6\"><code>0b7dcdf</code></a> Fixing variable name.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/2650208f83400dfe6c58d362f223244c90c20c7b\"><code>2650208</code></a> Fix logging and update dependencies.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/37c8969a043e5d5eb8cd4eb838d15908cda0ba1e\"><code>37c8969</code></a> Use correct class loader for discovered plugins.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.10.19...byte-buddy-1.10.20\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-agent` from 1.10.19 to 1.10.20\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-agent's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy, 1.10.20</h2>\n<ul>\n<li>Reuse simple but commonly used matchers as constants to avoid repeated allocation.</li>\n<li>Allow build plugins to be discovered from a plugin's class path.</li>\n<li>Do not use cached version of classes that are currently transformed.</li>\n<li>Allow using an incremental class path for build plugins in Gradle.</li>\n<li>Fix filter applied to declared, non-virtual methods in <code>MethodCall</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-agent's changelog</a>.</em></p>\n<blockquote>\n<h3>3. February 2021: version 1.10.20</h3>\n<ul>\n<li>Reuse simple but commonly used matchers as constants to avoid repeated allocation.</li>\n<li>Allow build plugins to be discovered from a plugin's class path.</li>\n<li>Do not use cached version of classes that are currently transformed.</li>\n<li>Allow using an incremental class path for build plugins in Gradle.</li>\n<li>Fix filter applied to declared, non-virtual methods in <code>MethodCall</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c1fb9efa2f4c1390d6efb794bee57511b74333dc\"><code>c1fb9ef</code></a> [maven-release-plugin] prepare release byte-buddy-1.10.20</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/83cebfa4d349e91a3926e18fa2348273e7c5ea15\"><code>83cebfa</code></a> [release] New release</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/d30e96897195b607784da3bd58d98db1035e1f17\"><code>d30e968</code></a> Add matcher filter for declared methods.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/636c274333744ff3d44cb5ace1da926a400e02a2\"><code>636c274</code></a> Add support for incremental class path in Byte Buddy Gradle task.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/bf3ad4e3c8c416e3cd19d0b95f9ad3dabeea014f\"><code>bf3ad4e</code></a> Do not discover plugins that were explicitly configured or previously discove...</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/84a5c4037199fedc6f0fa4392321a6c6567f1462\"><code>84a5c40</code></a> Correct variable.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/ca89db87f2213f1e8c8cf9b34acc058b0149b63b\"><code>ca89db8</code></a> Add info in readme.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/0b7dcdf676493cd857f5ed66a34c461423e96af6\"><code>0b7dcdf</code></a> Fixing variable name.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/2650208f83400dfe6c58d362f223244c90c20c7b\"><code>2650208</code></a> Fix logging and update dependencies.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/37c8969a043e5d5eb8cd4eb838d15908cda0ba1e\"><code>37c8969</code></a> Use correct class loader for discovered plugins.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.10.19...byte-buddy-1.10.20\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-android` from 1.10.19 to 1.10.20\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-android's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy, 1.10.20</h2>\n<ul>\n<li>Reuse simple but commonly used matchers as constants to avoid repeated allocation.</li>\n<li>Allow build plugins to be discovered from a plugin's class path.</li>\n<li>Do not use cached version of classes that are currently transformed.</li>\n<li>Allow using an incremental class path for build plugins in Gradle.</li>\n<li>Fix filter applied to declared, non-virtual methods in <code>MethodCall</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-android's changelog</a>.</em></p>\n<blockquote>\n<h3>3. February 2021: version 1.10.20</h3>\n<ul>\n<li>Reuse simple but commonly used matchers as constants to avoid repeated allocation.</li>\n<li>Allow build plugins to be discovered from a plugin's class path.</li>\n<li>Do not use cached version of classes that are currently transformed.</li>\n<li>Allow using an incremental class path for build plugins in Gradle.</li>\n<li>Fix filter applied to declared, non-virtual methods in <code>MethodCall</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c1fb9efa2f4c1390d6efb794bee57511b74333dc\"><code>c1fb9ef</code></a> [maven-release-plugin] prepare release byte-buddy-1.10.20</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/83cebfa4d349e91a3926e18fa2348273e7c5ea15\"><code>83cebfa</code></a> [release] New release</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/d30e96897195b607784da3bd58d98db1035e1f17\"><code>d30e968</code></a> Add matcher filter for declared methods.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/636c274333744ff3d44cb5ace1da926a400e02a2\"><code>636c274</code></a> Add support for incremental class path in Byte Buddy Gradle task.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/bf3ad4e3c8c416e3cd19d0b95f9ad3dabeea014f\"><code>bf3ad4e</code></a> Do not discover plugins that were explicitly configured or previously discove...</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/84a5c4037199fedc6f0fa4392321a6c6567f1462\"><code>84a5c40</code></a> Correct variable.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/ca89db87f2213f1e8c8cf9b34acc058b0149b63b\"><code>ca89db8</code></a> Add info in readme.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/0b7dcdf676493cd857f5ed66a34c461423e96af6\"><code>0b7dcdf</code></a> Fixing variable name.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/2650208f83400dfe6c58d362f223244c90c20c7b\"><code>2650208</code></a> Fix logging and update dependencies.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/37c8969a043e5d5eb8cd4eb838d15908cda0ba1e\"><code>37c8969</code></a> Use correct class loader for discovered plugins.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.10.19...byte-buddy-1.10.20\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2196", "Bump kotlin-stdlib from 1.4.21-2 to 1.4.30", null, "dependabot[bot]", "02/04/21, 03:31:15 PM", "Bumps [kotlin-stdlib](https://github.com/JetBrains/kotlin) from 1.4.21-2 to 1.4.30.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/releases\">kotlin-stdlib's releases</a>.</em></p>\n<blockquote>\n<h2>Kotlin 1.4.30</h2>\n<h2>CHANGELOG</h2>\n<h3>Android</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42383\"><code>KT-42383</code></a> HMPP: Bad IDEA dependencies: Missing dependency from p1:jvmAndAndroid to p2:jvmAndAndroid</li>\n</ul>\n<h3>Backend. Native</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-38772\"><code>KT-38772</code></a> Native: support non-reified type parameters in typeOf</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42234\"><code>KT-42234</code></a> Move LLVM optimization parameters into konan.properties</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42649\"><code>KT-42649</code></a> IndexOutOfBoundsException during InlineClassTransformer lowering</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42942\"><code>KT-42942</code></a> Native: optimize peak backend memory by clearing BindingContext after psi2ir</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43198\"><code>KT-43198</code></a> Native: support <code>init</code> blocks inside inline classes</li>\n</ul>\n<h3>Compiler</h3>\n<h4>New Features</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-28055\"><code>KT-28055</code></a> Support <code>init</code> blocks inside inline classes</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-28056\"><code>KT-28056</code></a> Consider supporting non-public primary constructors for inline classes</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41265\"><code>KT-41265</code></a> Support noarg compiler plugin for JVM IR</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42094\"><code>KT-42094</code></a> Allow open callable members in expect interfaces</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43129\"><code>KT-43129</code></a> FIR: Support OverloadResolutionByLambdaReturnType</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43592\"><code>KT-43592</code></a> Promote JVM IR compiler backend to Beta</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43919\"><code>KT-43919</code></a> Support loading Java annotations on base classes and implementing interfaces'  type arguments</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-44021\"><code>KT-44021</code></a> Enable JVM IR backend by default in 1.5</li>\n</ul>\n<h4>Performance Improvements</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41352\"><code>KT-41352</code></a> JVM IR: reduce bytecode size in for loops and range checks with 'until' by not using inclusive end</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41644\"><code>KT-41644</code></a> NI: Infinite compilation</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42791\"><code>KT-42791</code></a> OutOfMemoryError on compilation using kotlin 1.4 on a class with a lot of type inference</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42920\"><code>KT-42920</code></a> NI: Improve performance around adding constraints</li>\n</ul>\n<h4>Fixes</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-11454\"><code>KT-11454</code></a> Load annotations on TYPE_USE/TYPE_PARAMETER positions from Java class-files</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-11732\"><code>KT-11732</code></a> Verify error for generic interface method invocation with default parameters</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-14612\"><code>KT-14612</code></a> &quot;ISE: Recursive call in a lazy value&quot; during processing of a (weakly) recursive type alias</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-18344\"><code>KT-18344</code></a> Upper bound of a typealias type parameter is not reported correctly if it contains the typealias itself</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-18768\"><code>KT-18768</code></a> <a href=\"https://github.com/Notnull\"><code>@Notnull</code></a> annotation from Java does not work with varargs</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-20548\"><code>KT-20548</code></a> java.lang.IllegalStateException: Illegal class container on simple Java code parsing</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-22465\"><code>KT-22465</code></a> Excessive synthetic method for private setter from superclass</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-23816\"><code>KT-23816</code></a> Inline classes: constants and annotations</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-24158\"><code>KT-24158</code></a> AE: No receiver found on incomplete code with $-signs</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-24392\"><code>KT-24392</code></a> Nullability of Java arrays is read incorrectly if <a href=\"https://github.com/Nullable\"><code>@Nullable</code></a> annotation has both targets TYPE_USE and VALUE_PARAMETER</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-26229\"><code>KT-26229</code></a> Lambda/anonymous function argument in parentheses is not supported for callsInPlace effect</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-29735\"><code>KT-29735</code></a> KNPE at <code>KtEnumEntrySuperclassReferenceExpression.getReferencedElement</code> with explicit type argument inside enum member constructor</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-31389\"><code>KT-31389</code></a> ClassFormatError with companion object in annotation with <a href=\"https://github.com/JvmStatic\"><code>@JvmStatic</code></a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md\">kotlin-stdlib's changelog</a>.</em></p>\n<blockquote>\n<h1>CHANGELOG</h1>\n<h2>1.4.30-M1</h2>\n<h3>Android</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42383\"><code>KT-42383</code></a> HMPP: Bad IDEA dependencies: Missing dependency from p1:jvmAndAndroid to p2:jvmAndAndroid</li>\n</ul>\n<h3>Backend. Native</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-38772\"><code>KT-38772</code></a> Native: support non-reified type parameters in typeOf</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42234\"><code>KT-42234</code></a> Move LLVM optimization parameters into konan.properties</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42649\"><code>KT-42649</code></a> IndexOutOfBoundsException during InlineClassTransformer lowering</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42942\"><code>KT-42942</code></a> Native: optimize peak backend memory by clearing BindingContext after psi2ir</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43198\"><code>KT-43198</code></a> init blocks inside inline classes</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-31072\"><code>KT-31072</code></a> Don't use non-reified arguments to specialize type operations in IR inliner</li>\n</ul>\n<h3>Backend. JS</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41227\"><code>KT-41227</code></a> KJS IR: don't copy to child's prototype references to the function from parent</li>\n</ul>\n<h3>Backend. IR</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41227\"><code>KT-41227</code></a> KJS IR: don't copy to child's prototype references to the function from parent</li>\n</ul>\n<h3>Compiler</h3>\n<h4>New Features</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-28055\"><code>KT-28055</code></a> Consider supporting <code>init</code> blocks inside inline classes</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-28056\"><code>KT-28056</code></a> Consider supporting non-public primary constructors for inline classes</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42094\"><code>KT-42094</code></a> Allow open callable members in expect interfaces</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-43129\"><code>KT-43129</code></a> FIR: Support OverloadResolutionByLambdaReturnType</li>\n</ul>\n<h4>Performance Improvements</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41352\"><code>KT-41352</code></a> JVM IR: reduce bytecode size in for loops and range checks with 'until' by not using inclusive end</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41644\"><code>KT-41644</code></a> NI: Infinite compilation</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42791\"><code>KT-42791</code></a> OutOfMemoryError on compilation using kotlin 1.4 on a class with a lot of type inference</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-42920\"><code>KT-42920</code></a> NI: Improve performance around adding constraints</li>\n</ul>\n<h4>Fixes</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-22465\"><code>KT-22465</code></a> Excessive synthetic method for private setter from superclass</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-26229\"><code>KT-26229</code></a> Lambda/anonymous function argument in parentheses is not supported for callsInPlace effect</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-32228\"><code>KT-32228</code></a> Inconsistent boxing/unboxing for inline classes when interface is specialized by object expression</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-32450\"><code>KT-32450</code></a> Inline class incorrectly gets re-wrapped when provided to a function</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35849\"><code>KT-35849</code></a> Missing nullability assertion on lambda return value if expected type has generic return value type</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-35902\"><code>KT-35902</code></a> Kotlin generates a private parameterless constructor for constructors taking inline class arguments with default values</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-36769\"><code>KT-36769</code></a> JVM IR: Missing LVT entries for inline function (default) parameters at call site</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-36982\"><code>KT-36982</code></a> JVM IR: SAM adapter classes are generated as synthetic</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/90ecf0fd4506293e3fc1775fe15a24635818f546\"><code>90ecf0f</code></a> Revert &quot;[notification] add notification about new jvm ir backend&quot;</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/8d2706ad8f3afdbfad485cc1d7b1b93456e8f40b\"><code>8d2706a</code></a> Update Kotlin/Native: 1.4.30-release-115</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/fd948c0d31e235b7fb9cde1faadd7bbbe6eedd5f\"><code>fd948c0</code></a> Add change-notes for 1.4.30 release</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/2d8c18bc9b271d1e88ec2272352280a0c47b1ea7\"><code>2d8c18b</code></a> Update Kotlin/Native: 1.4.30-dev-112</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/f71f16292eb96308ed5a8bdeba7a064efc3af3db\"><code>f71f162</code></a> Add API version 1.5 to accepted values in MPP language settings</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/63b35c7600d58ac54fb3eef0b2d5e00887aa8fa6\"><code>63b35c7</code></a> Introduce ApiVersion.KOTLIN_1_5</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/4d6a1a8fb6d4ecfd21051acaabec9c5074fd511b\"><code>4d6a1a8</code></a> JVM IR: Fix inline class mangling for calls to internal functions</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/5a7c34517e59e6f65df59cd62c95a66af99ef994\"><code>5a7c345</code></a> [notification] add notification about new jvm ir backend</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/f9dd87890f5de119433a8934c00a92e7a0836182\"><code>f9dd878</code></a> Propagate all annotations during creating simple functional types</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/5a686eac9e118421798d0fbf7b89018f283fec67\"><code>5a686ea</code></a> [JVM_IR] Reduce the amount of <code>super</code> suffixes on accesibility bridges.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/JetBrains/kotlin/compare/v1.4.21-2...v1.4.30\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlin:kotlin-stdlib&package-manager=gradle&previous-version=1.4.21-2&new-version=1.4.30)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2198", "Bump junit-platform-launcher from 1.7.0 to 1.7.1", null, "dependabot[bot]", "02/05/21, 11:44:10 AM", "Bumps [junit-platform-launcher](https://github.com/junit-team/junit5) from 1.7.0 to 1.7.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/junit-team/junit5/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.junit.platform:junit-platform-launcher&package-manager=gradle&previous-version=1.7.0&new-version=1.7.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2199", "Bump versions.junitJupiter from 5.7.0 to 5.7.1", null, "dependabot[bot]", "02/05/21, 11:43:57 AM", "Bumps `versions.junitJupiter` from 5.7.0 to 5.7.1.\nUpdates `junit-jupiter-api` from 5.7.0 to 5.7.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit5/releases\">junit-jupiter-api's releases</a>.</em></p>\n<blockquote>\n<p>JUnit 5.7.1 = Platform 1.7.1 + Jupiter 5.7.1 + Vintage 5.7.1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.1/release-notes/\">Release Notes</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit5/commit/b5227801590b3a0758c46a4890e6784f7b04649c\"><code>b522780</code></a> Release 5.7.1</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/f8c6d4ab7919781ea7401eac2caeac55c5d99d59\"><code>f8c6d4a</code></a> Finalize release notes for 5.7.1</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/8b3d5aa0885f1e0a38283de71c7431a77f234cde\"><code>8b3d5aa</code></a> Fix container failure XML reporting (<a href=\"https://github-redirect.dependabot.com/junit-team/junit5/issues/2542\">#2542</a>)</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/b394ef08ad2493494032ef9179cbd050e21a614c\"><code>b394ef0</code></a> Use jOOX to test XML reports</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/2b7d5b12c19da96eebd37e11ef90df4ebfc0fbed\"><code>2b7d5b1</code></a> Use Java 9 collection factory methods</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/5c42adb2b44b3532f5e8563d19d044597e4d8c4f\"><code>5c42adb</code></a> Fix typos</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/beddaf450158fd81bf0da9400efb5e1d25eedba9\"><code>beddaf4</code></a> Remove unnecessary throws clause</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/85ee2126196c403dab7e05b904a84c05bf58f0db\"><code>85ee212</code></a> Simplify assertions</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/c704713e51ddfc3e2a7f811db939702a4350fb65\"><code>c704713</code></a> Fix assertion</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/7d6edad19aedae80ce5484dc8677390baac768f8\"><code>7d6edad</code></a> Convert field to local variable</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit5/compare/r5.7.0...r5.7.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `junit-jupiter-engine` from 5.7.0 to 5.7.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit5/releases\">junit-jupiter-engine's releases</a>.</em></p>\n<blockquote>\n<p>JUnit 5.7.1 = Platform 1.7.1 + Jupiter 5.7.1 + Vintage 5.7.1</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.1/release-notes/\">Release Notes</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit5/commit/b5227801590b3a0758c46a4890e6784f7b04649c\"><code>b522780</code></a> Release 5.7.1</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/f8c6d4ab7919781ea7401eac2caeac55c5d99d59\"><code>f8c6d4a</code></a> Finalize release notes for 5.7.1</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/8b3d5aa0885f1e0a38283de71c7431a77f234cde\"><code>8b3d5aa</code></a> Fix container failure XML reporting (<a href=\"https://github-redirect.dependabot.com/junit-team/junit5/issues/2542\">#2542</a>)</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/b394ef08ad2493494032ef9179cbd050e21a614c\"><code>b394ef0</code></a> Use jOOX to test XML reports</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/2b7d5b12c19da96eebd37e11ef90df4ebfc0fbed\"><code>2b7d5b1</code></a> Use Java 9 collection factory methods</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/5c42adb2b44b3532f5e8563d19d044597e4d8c4f\"><code>5c42adb</code></a> Fix typos</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/beddaf450158fd81bf0da9400efb5e1d25eedba9\"><code>beddaf4</code></a> Remove unnecessary throws clause</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/85ee2126196c403dab7e05b904a84c05bf58f0db\"><code>85ee212</code></a> Simplify assertions</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/c704713e51ddfc3e2a7f811db939702a4350fb65\"><code>c704713</code></a> Fix assertion</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/7d6edad19aedae80ce5484dc8677390baac768f8\"><code>7d6edad</code></a> Convert field to local variable</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit5/compare/r5.7.0...r5.7.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2205", "Bump junit from 4.13.1 to 4.13.2", null, "dependabot[bot]", "02/15/21, 02:49:43 PM", "Bumps [junit](https://github.com/junit-team/junit4) from 4.13.1 to 4.13.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit4/releases\">junit's releases</a>.</em></p>\n<blockquote>\n<h2>JUnit 4.13.2</h2>\n<p>Please refer to the <a href=\"https://github.com/junit-team/junit/blob/HEAD/doc/ReleaseNotes4.13.2.md\">release notes</a> for details.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit4/commit/05fe2a64f59127c02135be22f416e91260d6ede6\"><code>05fe2a6</code></a> [maven-release-plugin] prepare release r4.13.2</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/ff57344f7171ea8b0935c4f842cacf1097266592\"><code>ff57344</code></a> Add build for JDK 17-ea</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/02aaa01b8f74c0eb496d76685ec49fddeb311087\"><code>02aaa01</code></a> Improve check that thread is stopped</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/e9a75f4be71a4d5a794ccd063522eea4b0f3194f\"><code>e9a75f4</code></a> Merge test for exception type and message</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/d27ad5259228e84c235dac24cd62f974ac0a8e1d\"><code>d27ad52</code></a> Rename DelegateStatement to DelegatingStatement</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/b83dc2e8c4ff06cf233cd347f1280bb417482985\"><code>b83dc2e</code></a> Better name for test that stops statement</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/527f3a3d0d71ad6dc66ede6f68f6fc316904ed2a\"><code>527f3a3</code></a> Replace InfiniteLoop with RunForASecond</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/2db63942882d91020b46d7333285e5c94f1d1e52\"><code>2db6394</code></a> Tidy up FailOnTimeoutTest</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/64634e1c3e357251a84278c26b73b04fc3450ea3\"><code>64634e1</code></a> Update 4.13.2 release notes to document pull 1654</li>\n<li><a href=\"https://github.com/junit-team/junit4/commit/f8ee412316b1a94d3dc35498359cc2f0ca273216\"><code>f8ee412</code></a> Fix serialization of AssumptionViolatedException (<a href=\"https://github-redirect.dependabot.com/junit-team/junit4/issues/1654\">#1654</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit4/compare/r4.13.1...r4.13.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=junit:junit&package-manager=gradle&previous-version=4.13.1&new-version=4.13.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2207", "Fixes #2204: Ignore Groovy methods annotated with Internal", "Ryan Tandy", "rtandy", "02/15/21, 07:23:26 PM", "Starting from Groovy 3.0, compiler-generated methods such as `getMetaClass()` [are no longer marked synthetic](https://issues.apache.org/jira/browse/GROOVY-8495), therefore ByteBuddy stopped automatically ignoring them. Instead they are now annotated with `@groovy.transform.Internal`. Update `isGroovyMethod()` to also check this new annotation.\r\n\r\n#2204 has a test case, and this change fixes it.", "NaN"], ["2213", "Publish new minor version to Maven central", "Tim van der Lippe", "TimvdLippe", "02/22/21, 06:55:38 PM", "Closes #2212", "NaN"], ["2214", "Bump biz.aQute.bnd.builder from 5.2.0 to 5.3.0", null, "dependabot[bot]", "02/23/21, 11:28:33 AM", "Bumps biz.aQute.bnd.builder from 5.2.0 to 5.3.0.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=biz.aQute.bnd.builder&package-manager=gradle&previous-version=5.2.0&new-version=5.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2216", "Bump shipkit-changelog from 1.1.4 to 1.1.8", null, "dependabot[bot]", "02/26/21, 12:02:10 PM", "Bumps shipkit-changelog from 1.1.4 to 1.1.8.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-changelog&package-manager=gradle&previous-version=1.1.4&new-version=1.1.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2217", "Bump shipkit-changelog from 1.1.8 to 1.1.10", null, "dependabot[bot]", "03/01/21, 03:38:58 PM", "Bumps shipkit-changelog from 1.1.8 to 1.1.10.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-changelog&package-manager=gradle&previous-version=1.1.8&new-version=1.1.10)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2218", "Bump kotlin-stdlib from 1.4.30 to 1.4.31", null, "dependabot[bot]", "03/01/21, 03:38:46 PM", "Bumps [kotlin-stdlib](https://github.com/JetBrains/kotlin) from 1.4.30 to 1.4.31.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/releases\">kotlin-stdlib's releases</a>.</em></p>\n<blockquote>\n<h2>Kotlin 1.4.31</h2>\n<h2>1.4.31</h2>\n<h3>Compiler</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-39776\"><code>KT-39776</code></a> 2020.3+: Unresolved reference to Kotlin stdlib function</li>\n</ul>\n<h3>IDE. Gradle Integration</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-44845\"><code>KT-44845</code></a> After update to Kotlin 1.4.30 all external dependencies is unresolved in IDE with kotlin.mpp.enableGranularSourceSetsMetadata=true</li>\n</ul>\n<h3>IDE. Gradle. Script</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KTIJ-1137\"><code>KTIJ-11137</code></a> build.gradle.kts: Fatal error during save/load standalone scripts settings</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KTIJ-898\"><code>KTIJ-898</code></a> Unable to import with Kotlin DSL buildscript - NullPointerException in KotlinDslScriptModelProcessorKt.toListOfScriptModels</li>\n</ul>\n<h3>IDE. Multiplatform</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KTIJ-1200\"><code>KTIJ-1200</code></a> KotlinIconProviderKt.addExpectActualMarker takes up to 180+ seconds</li>\n</ul>\n<h3>IDE</h3>\n<h4>Fixes</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-44697\"><code>KT-44697</code></a> New JVM IR backend notification - narrow its triggering to Kotlin projects</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-44523\"><code>KT-44523</code></a> IDE notification for trying new JVM backend</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KTIJ-696\"><code>KTIJ-696</code></a> Freeze during startup of IDEA with intellij project with Kotlin (211-1.4.10-release-IJ1440)</li>\n</ul>\n<h2>Checksums</h2>\n<table>\n<thead>\n<tr>\n<th>File</th>\n<th>Sha256</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>kotlin-compiler-1.4.31.zip</td>\n<td>b50e7016febf7510325d685ae69cc62f49a7ca7f670cb4e0888112e3ec09c6ec  *</td>\n</tr>\n<tr>\n<td>kotlin-native-linux-1.4.31.tar.gz</td>\n<td>87fc40385ffbd44eebde6487d15e1c5c67c218870b332b525e122f014b7de3e3</td>\n</tr>\n<tr>\n<td>kotlin-native-macos-1.4.31.tar.gz</td>\n<td>0e351756b382096204d61456f855480ce6b65ac53897c4bfa78a287895f37e32</td>\n</tr>\n<tr>\n<td>kotlin-native-windows-1.4.31.zip</td>\n<td>a60aec97fd21294ab11e57acdd33d37d79db11b22656fa435b791e9a709727b4</td>\n</tr>\n</tbody>\n</table>\n<p><code>*</code> Sorry, Sha256 sum was initially published incorrectly. Now it is fixed.</p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/blob/v1.4.31/ChangeLog.md\">kotlin-stdlib's changelog</a>.</em></p>\n<blockquote>\n<h2>1.4.31</h2>\n<h3>Compiler</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-39776\"><code>KT-39776</code></a> 2020.3+: Unresolved reference to Kotlin stdlib function</li>\n</ul>\n<h3>IDE. Gradle Integration</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-44845\"><code>KT-44845</code></a> After update to Kotlin 1.4.30 all external dependencies is unresolved in IDE with kotlin.mpp.enableGranularSourceSetsMetadata=true</li>\n</ul>\n<h3>IDE. Gradle. Script</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KTIJ-1137\"><code>KTIJ-11137</code></a> build.gradle.kts: Fatal error during save/load standalone scripts settings</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KTIJ-898\"><code>KTIJ-898</code></a> Unable to import with Kotlin DSL buildscript - NullPointerException in KotlinDslScriptModelProcessorKt.toListOfScriptModels</li>\n</ul>\n<h3>IDE. Multiplatform</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KTIJ-1200\"><code>KTIJ-1200</code></a> KotlinIconProviderKt.addExpectActualMarker takes up to 180+ seconds</li>\n</ul>\n<h3>IDE</h3>\n<h4>Fixes</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-44697\"><code>KT-44697</code></a> New JVM IR backend notification - narrow its triggering to Kotlin projects</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-44523\"><code>KT-44523</code></a> IDE notification for trying new JVM backend</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KTIJ-696\"><code>KTIJ-696</code></a> Freeze during startup of IDEA with intellij project with Kotlin (211-1.4.10-release-IJ1440)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/ae24875444973e10dcdb41824943237f1e2c4cf9\"><code>ae24875</code></a> Add ChangeLog for kotlin 1.4.31</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/d5cf736e5138384d6fcd3818af67958d0f776d23\"><code>d5cf736</code></a> Add ChangeLog for kotlin 1.4.30-release</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/929b6dd92f1ced4ecec40ecfafddd02a982a0ef2\"><code>929b6dd</code></a> Do not swallow PCE</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/fbe977a7f584ee215825bd59d16e7384b1f443a8\"><code>fbe977a</code></a> Update Kotlin/Native: 1.4.31-release-146</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/d0e09004ad04aba86bbe94e1f4651f21812dceff\"><code>d0e0900</code></a> Backport &quot;Fix cache service for resolution anchors&quot;</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/434c1995eba71e47a2c6ebdeb64b3e2d1c59d272\"><code>434c199</code></a> Update Kotlin/Native: 1.4.31-dev-141</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/d1814fbda4b18d292cc2031b0138ba6b26de4329\"><code>d1814fb</code></a> Fix NPE</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/4c61fb4579b82a51e0c85f6256fff5951c2b1275\"><code>4c61fb4</code></a> Fixed NPE on StandaloneScriptRootsCache instantiation</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/e148cbede3934b284ba747a5e2d444dcecc3f541\"><code>e148cbe</code></a> Lightweight hashCode calc for LibraryInfo</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/36d91aeec0ded56c6b0e8588a64fa5fd503c6422\"><code>36d91ae</code></a> Check declaration modifier for actual method to avoid freeze</li>\n<li>Additional commits viewable in <a href=\"https://github.com/JetBrains/kotlin/compare/v1.4.30...v1.4.31\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlin:kotlin-stdlib&package-manager=gradle&previous-version=1.4.30&new-version=1.4.31)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2219", "Updated release notes file", "Szczepan Faber", "mockitoguy", "03/01/21, 02:11:13 PM", "NaN", "NaN"], ["2221", "Bump com.github.ben-manes.versions from 0.36.0 to 0.38.0", null, "dependabot[bot]", "03/04/21, 09:21:10 PM", "Bumps com.github.ben-manes.versions from 0.36.0 to 0.38.0.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.github.ben-manes.versions&package-manager=gradle&previous-version=0.36.0&new-version=0.38.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2227", "Add missing Deprecated annotation", "Tim van der Lippe", "TimvdLippe", "04/05/21, 05:18:56 PM", "Discovered while trying to sync Mockito internally at Google.", "NaN"], ["2229", "Bump org.eclipse.osgi from 3.16.100 to 3.16.200", null, "dependabot[bot]", "03/17/21, 03:31:02 PM", "Bumps org.eclipse.osgi from 3.16.100 to 3.16.200.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.eclipse.platform:org.eclipse.osgi&package-manager=gradle&previous-version=3.16.100&new-version=3.16.200)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2232", "Bump shipkit-auto-version from 1.1.1 to 1.1.5", null, "dependabot[bot]", "03/22/21, 11:33:07 AM", "Bumps shipkit-auto-version from 1.1.1 to 1.1.5.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-auto-version&package-manager=gradle&previous-version=1.1.1&new-version=1.1.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2233", "Bump shipkit-changelog from 1.1.10 to 1.1.11", null, "dependabot[bot]", "03/22/21, 11:24:56 AM", "Bumps shipkit-changelog from 1.1.10 to 1.1.11.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-changelog&package-manager=gradle&previous-version=1.1.10&new-version=1.1.11)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2234", "Bump gradle-errorprone-plugin from 1.3.0 to 2.0.0", null, "dependabot[bot]", "03/22/21, 11:24:44 AM", "Bumps gradle-errorprone-plugin from 1.3.0 to 2.0.0.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=net.ltgt.gradle:gradle-errorprone-plugin&package-manager=gradle&previous-version=1.3.0&new-version=2.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2236", "Bugfix/2235 verify on a wrapped mock fails", "Michael Schieder", "mschieder", "03/22/21, 02:59:45 PM", "PR for #2235: verify() on a wrapped mock fails with UnfinishedVerificationException", "NaN"], ["2237", "Bump kotlin-stdlib from 1.4.31 to 1.4.32", null, "dependabot[bot]", "03/23/21, 11:13:05 AM", "Bumps [kotlin-stdlib](https://github.com/JetBrains/kotlin) from 1.4.31 to 1.4.32.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/JetBrains/kotlin/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlin:kotlin-stdlib&package-manager=gradle&previous-version=1.4.31&new-version=1.4.32)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2239", "Bump shipkit-changelog from 1.1.11 to 1.1.13", null, "dependabot[bot]", "03/24/21, 10:45:54 AM", "Bumps shipkit-changelog from 1.1.11 to 1.1.13.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-changelog&package-manager=gradle&previous-version=1.1.11&new-version=1.1.13)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2241", "Fixes #2238: Do not omit stack frames of causing class", "David M.", "hypfvieh", "03/25/21, 03:00:36 PM", "This PR will fix this problems described in #2238. \r\n\r\nThe main cause wasn't the `hideRecursiveCall` method but `tryInvoke` method.\r\nIn `tryInvoke` the original stacktrace will be passed through the configured filter after it has been modified by `hideRecursiveCall`.\r\n\r\nWhen calling `hideRecursiveCall` the second argument (`current`) is set the the length of the stack trace of the causing exception.\r\nThis will omit too much stack frames, ultimately skipping the lines containing of the root exception cause.\r\n\r\nIn this patch, `tryInvoke` will try to find a better starting frame when an exception is caught.\r\nIt will do this by investigating the created stack trace and look for the first entry matching the class name of the `instance` object given to `tryInvoke`. This offset will then be given to `hideRecursiveCall` as `current` argument instead of using the stack trace length.\r\nIf there is no `instance` object (`null`), the length of the stack trace is used (like before). ", "NaN"], ["2243", "CI overhaul, migrated from Bintray", "Szczepan Faber", "mockitoguy", "05/10/21, 01:12:53 PM", "We need to remove the dependency on Bintray/JCenter", "NaN"], ["2244", "Bump gradle-errorprone-plugin from 2.0.0 to 2.0.1", null, "dependabot[bot]", "03/29/21, 09:29:56 AM", "Bumps gradle-errorprone-plugin from 2.0.0 to 2.0.1.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=net.ltgt.gradle:gradle-errorprone-plugin&package-manager=gradle&previous-version=2.0.0&new-version=2.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2245", "Comment out sections of pull request template", null, "fredster33", "03/29/21, 08:37:51 PM", "This commit comments out some guidance sections on the pull request template, so that it is visible to contributors submitting a pull request but it is not visible if they submit the request and forget to delete it.\r\n\r\nChecklist\r\n\r\n - [X] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [X] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [X] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [X] Avoid other runtime dependencies\r\n - [X] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [X] The pull request follows coding style\r\n - [X] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [X] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2246", "Grammar edits", null, "fredster33", "03/29/21, 08:47:13 PM", "Checklist\r\n\r\n - [X] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [X] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [X] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [X] Avoid other runtime dependencies\r\n - [X] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [X] The pull request follows coding style\r\n - [X] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [X] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2248", "Fix thread race condition", "Tim van der Lippe", "TimvdLippe", "04/05/21, 05:19:35 PM", "Discovered internally at Google. The culprit was a thread race condition\r\naround the usage of usedAt, which could race between setting the field\r\nand retrieving it.", "NaN"], ["2249", "Fixes #2007 : Update objenesis dep to 3.2", "Paul Klauser", "PaulKlauser", "03/31/21, 04:20:28 PM", "Allows for building android instrumentation tests with minsdk < 26\r\n\r\n## Checklist\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2250", "Bump versions.errorprone from 2.5.1 to 2.6.0", null, "dependabot[bot]", "04/01/21, 11:43:34 AM", "Bumps `versions.errorprone` from 2.5.1 to 2.6.0.\nUpdates `error_prone_core` from 2.5.1 to 2.6.0\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/error-prone/commit/86f8e239fca1db4e966369902f7a6b9e63580d1b\"><code>86f8e23</code></a> Add <code>TimeUnit</code> APIs to <code>ReturnValueIgnored</code>.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/c5e1687485bad49606a288187334a48fea284861\"><code>c5e1687</code></a> Disable <code>BanSerializableRead</code> by default</li>\n<li><a href=\"https://github.com/google/error-prone/commit/3d642502c29d56d396ad119e45a44b1051f3abff\"><code>3d64250</code></a> Improve <code>ConstantPatternCompile</code> fixes</li>\n<li><a href=\"https://github.com/google/error-prone/commit/553603f97b001d97ea0abdbab2288581c7b76de9\"><code>553603f</code></a> Add a missing <code>@Nullable</code> annotation.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/3e14f54f8e3951e337bc5cf65ee49927c9c6d18f\"><code>3e14f54</code></a> Generalize <code>ConstantPatternCompile</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/456dcf00d733aef4f296cfdcc13f7e3bb5f931c0\"><code>456dcf0</code></a> Rename <code>isNull</code> and <code>isNonNull</code> matchers to make it</li>\n<li><a href=\"https://github.com/google/error-prone/commit/ed55201419464bf1f0ea9463323348a81b996294\"><code>ed55201</code></a> Inet4Address and Inet6Address are immutable</li>\n<li><a href=\"https://github.com/google/error-prone/commit/91951e3911f9ad7578b1d9f296188cf5a12d0511\"><code>91951e3</code></a> Remove deprecated attributes from <code>@RestrictedApi</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/2b105754603997b69bf8c4274c783011b6a00dd2\"><code>2b10575</code></a> Rethrow ReflectiveOperationException as LinkageError instead of AssertionError.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/fc7cca8034eb15ad9b3de51f20a3b81c19442e7e\"><code>fc7cca8</code></a> Expand ImmutableMemberCollection to convert <code>private final</code> member collection...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/google/error-prone/compare/v2.5.1...v2.6.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `error_prone_test_helpers` from 2.5.1 to 2.6.0\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/error-prone/commit/86f8e239fca1db4e966369902f7a6b9e63580d1b\"><code>86f8e23</code></a> Add <code>TimeUnit</code> APIs to <code>ReturnValueIgnored</code>.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/c5e1687485bad49606a288187334a48fea284861\"><code>c5e1687</code></a> Disable <code>BanSerializableRead</code> by default</li>\n<li><a href=\"https://github.com/google/error-prone/commit/3d642502c29d56d396ad119e45a44b1051f3abff\"><code>3d64250</code></a> Improve <code>ConstantPatternCompile</code> fixes</li>\n<li><a href=\"https://github.com/google/error-prone/commit/553603f97b001d97ea0abdbab2288581c7b76de9\"><code>553603f</code></a> Add a missing <code>@Nullable</code> annotation.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/3e14f54f8e3951e337bc5cf65ee49927c9c6d18f\"><code>3e14f54</code></a> Generalize <code>ConstantPatternCompile</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/456dcf00d733aef4f296cfdcc13f7e3bb5f931c0\"><code>456dcf0</code></a> Rename <code>isNull</code> and <code>isNonNull</code> matchers to make it</li>\n<li><a href=\"https://github.com/google/error-prone/commit/ed55201419464bf1f0ea9463323348a81b996294\"><code>ed55201</code></a> Inet4Address and Inet6Address are immutable</li>\n<li><a href=\"https://github.com/google/error-prone/commit/91951e3911f9ad7578b1d9f296188cf5a12d0511\"><code>91951e3</code></a> Remove deprecated attributes from <code>@RestrictedApi</code></li>\n<li><a href=\"https://github.com/google/error-prone/commit/2b105754603997b69bf8c4274c783011b6a00dd2\"><code>2b10575</code></a> Rethrow ReflectiveOperationException as LinkageError instead of AssertionError.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/fc7cca8034eb15ad9b3de51f20a3b81c19442e7e\"><code>fc7cca8</code></a> Expand ImmutableMemberCollection to convert <code>private final</code> member collection...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/google/error-prone/compare/v2.5.1...v2.6.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2251", "Bump google-java-format from 1.9 to 1.10.0", null, "dependabot[bot]", "04/01/21, 11:06:20 AM", "Bumps [google-java-format](https://github.com/google/google-java-format) from 1.9 to 1.10.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google/google-java-format/releases\">google-java-format's releases</a>.</em></p>\n<blockquote>\n<h2>1.10</h2>\n<p><code>google-java-format</code> now supports running on JDK 16. The following flags are required when running on JDK 16, due to <a href=\"https://openjdk.java.net/jeps/396\">JEP 396: Strongly Encapsulate JDK Internals by Default</a>:</p>\n<pre><code>java \\\n  --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED \\\n  -jar google-java-format-1.10.0-all-deps.jar T...\n</code></pre>\n<p>Other changes:</p>\n<ul>\n<li>Handle extra <code>;</code> in import lists (<a href=\"https://github.com/google/google-java-format/commit/b769e812a052d7cff4a2d86eff4981a5d358ee2d\">https://github.com/google/google-java-format/commit/b769e812a052d7cff4a2d86eff4981a5d358ee2d</a>)</li>\n<li>Add missing space between unary <code>-</code> and negative literals (<a href=\"https://github.com/google/google-java-format/commit/6da736d786ac71a134ed6cc43e9cd825c83de0fd\">https://github.com/google/google-java-format/commit/6da736d786ac71a134ed6cc43e9cd825c83de0fd</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/google-java-format/commit/0216a44509ad1772c020c4497f19bf353ebe8e13\"><code>0216a44</code></a> Release google-java-format 1.10.0</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/cc7bd81df738f95249bc881c5dbcc11447432ce6\"><code>cc7bd81</code></a> Fix getToken(int k) javadoc to clarify that k is the Tok, not Token, index.</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/6da736d786ac71a134ed6cc43e9cd825c83de0fd\"><code>6da736d</code></a> Add a space between unary minus and negative literals</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/189c381d7f2c4a9e6f5a5d698a006da22a774c56\"><code>189c381</code></a> Improve GitHub Actions hygiene</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/506875dc3f0f1018676c764e5fe58c9a8c216900\"><code>506875d</code></a> Update Error Prone version</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/b9fd8d2242869ea7c9efd10cbbe7278c4b6611b1\"><code>b9fd8d2</code></a> Fix an off-by-one issue on the reflowing of string literals.</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/69ba30fd9242eb52446edf18655d190e653348b6\"><code>69ba30f</code></a> Fixes before commit reformatting option for IntelliJ IDEA</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/24ec96c942a04b89c181df24d80b27c44128b2bf\"><code>24ec96c</code></a> Use more inclusive language in tests</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/94a154097a2252482ec01e56f39ec9482b2c7661\"><code>94a1540</code></a> Refactor google-java-format CI</li>\n<li><a href=\"https://github.com/google/google-java-format/commit/0a2f8647929e361304db5d1360896152e76a7e21\"><code>0a2f864</code></a> Prepare google-java-format for JDK 16 ea</li>\n<li>Additional commits viewable in <a href=\"https://github.com/google/google-java-format/compare/google-java-format-1.9...v1.10.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.google.googlejavaformat:google-java-format&package-manager=gradle&previous-version=1.9&new-version=1.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2255", "Bump actions/setup-java from v1 to v2", null, "dependabot[bot]", "04/06/21, 10:38:36 AM", "Bumps [actions/setup-java](https://github.com/actions/setup-java) from v1 to v2.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-java/commit/8764a52df183aa0ccea74521dfd9d506ffc7a19a\"><code>8764a52</code></a> Rename v2-preview to v2 in docs and tests (<a href=\"https://github-redirect.dependabot.com/actions/setup-java/issues/151\">#151</a>)</li>\n<li><a href=\"https://github.com/actions/setup-java/commit/b53500dabc37db6cc1dcd35059bdcd85df25d140\"><code>b53500d</code></a> Merge &quot;v2-preview&quot; branch into &quot;main&quot; (<a href=\"https://github-redirect.dependabot.com/actions/setup-java/issues/150\">#150</a>)</li>\n<li><a href=\"https://github.com/actions/setup-java/commit/ebb424f2cb8fcb418a7b62a00e052ee78fc9ed68\"><code>ebb424f</code></a> Beatify &quot;main&quot; warning about breaking changes (<a href=\"https://github-redirect.dependabot.com/actions/setup-java/issues/144\">#144</a>)</li>\n<li><a href=\"https://github.com/actions/setup-java/commit/9c7940b9c600aa59f59155ebf16e815fb97bd6a4\"><code>9c7940b</code></a> Add breaking change warning to 'main' branch (<a href=\"https://github-redirect.dependabot.com/actions/setup-java/issues/138\">#138</a>)</li>\n<li><a href=\"https://github.com/actions/setup-java/commit/fc62ccaa4ff0ce26bfc693d16da2da265b83dc3d\"><code>fc62cca</code></a> V2 setup-java ADR (<a href=\"https://github-redirect.dependabot.com/actions/setup-java/issues/97\">#97</a>)</li>\n<li><a href=\"https://github.com/actions/setup-java/commit/e73e96a93bda891eeb423b3bb3cdaa494b5eae42\"><code>e73e96a</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/actions/setup-java/issues/131\">#131</a> from actions/v-malob/update-codeowners</li>\n<li><a href=\"https://github.com/actions/setup-java/commit/ea31b1d738cf047c87bfa75751fdd0e635083e6c\"><code>ea31b1d</code></a> Update CODEOWNERS</li>\n<li><a href=\"https://github.com/actions/setup-java/commit/ff0054dfbf8f244970a8f943f689536670d92603\"><code>ff0054d</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/actions/setup-java/issues/123\">#123</a> from dmitry-shibanov/fix-documentation-for-gpg-import...</li>\n<li><a href=\"https://github.com/actions/setup-java/commit/81290cdb8c027e945e66c40b9efd912511c40859\"><code>81290cd</code></a> change imported to exported</li>\n<li><a href=\"https://github.com/actions/setup-java/commit/546dae7e879c55a8e4cc84039c0746b57b477100\"><code>546dae7</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/actions/setup-java/issues/122\">#122</a> from dmitry-shibanov/update-docs-for-maven-and-gpg</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-java/compare/v1...8764a52df183aa0ccea74521dfd9d506ffc7a19a\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2258", "Bump auto-service from 1.0-rc7 to 1.0", null, "dependabot[bot]", "04/07/21, 09:57:32 AM", "Bumps [auto-service](https://github.com/google/auto) from 1.0-rc7 to 1.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google/auto/releases\">auto-service's releases</a>.</em></p>\n<blockquote>\n<h2>Auto Common 1.0</h2>\n<p>This has only cosmetic differences from Auto Common 0.11, but we are updating the version number to indicate stability.</p>\n<h2>AutoService 1.0</h2>\n<ul>\n<li><code>@AutoService</code> classes can now reference generic services and still pass <code>-Averify=true</code>. (afe607c3)</li>\n<li>AutoServiceProcessor no longer claims the <code>@AutoService</code> annotation. (c27b527a)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/google/auto/commits/auto-value-1.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.google.auto.service:auto-service&package-manager=gradle&previous-version=1.0-rc7&new-version=1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2259", "\"But invoked here\" lists the invocation parameters", "Tim van der Lippe", "TimvdLippe", "04/07/21, 01:42:29 PM", "Supersedes and closes #2188", "NaN"], ["2261", "Bump shipkit-auto-version from 1.1.5 to 1.1.8", null, "dependabot[bot]", "04/08/21, 12:46:24 PM", "Bumps shipkit-auto-version from 1.1.5 to 1.1.8.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-auto-version&package-manager=gradle&previous-version=1.1.5&new-version=1.1.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2263", "Fixes #2242 : Make exceptions for Inorder.verify more standard / spec\u2026", null, "devin040", "04/12/21, 10:30:07 AM", "\u2026ific\r\n\r\n*Adds NullInsteadOfMockException and NotAMockException checks to Inorder.verify() *before* checking if mocks were passed in during creation of Inorder\r\n\r\nSee https://github.com/mockito/mockito/issues/2242 for a description of the issue.\r\n\r\nInorder.verify(mock) now first checks if the passed argument is null, and if the mock is in fact a mock, and gives appropriate Exception messages, before checking if the passed in argument was passed during creation of Inorder object, and therefore giving a less specific error message.\r\n\r\n<!-- Hey, \r\nThanks for the contribution, this is awesome.\r\nAs you may have read, project members have somehow an opinionated view on what and how should be\r\nMockito, e.g. we don't want mockito to be a feature bloat.\r\nThere may be a thorough review, with feedback -> code change loop.\r\n-->\r\n<!--\r\nWhich branch : \r\n- On mockito 3.x, make your pull request target `release/3.x`\r\n- On mockito 2.x, make your pull request target `release/2.x` (2.x is in maintenance mode)\r\n-->\r\n<!--\r\nIf you have a suggestion for this template you can fix it in the .github/PULL_REQUEST_TEMPLATE.md file\r\n-->\r\n## Checklist\r\n\r\n - [x ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [ x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x ] Avoid other runtime dependencies\r\n - [x ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x ] The pull request follows coding style\r\n - [ x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2267", "Include cause when FieldReader fails to access field", null, "A248", "04/14/21, 02:31:30 PM", "Fixes #2266\r\n\r\nSimply passes the exception cause to the thrown MockitoException", "NaN"], ["2269", "Bump versions.bytebuddy from 1.10.20 to 1.11.0", null, "dependabot[bot]", "04/19/21, 10:26:55 AM", "Bumps `versions.bytebuddy` from 1.10.20 to 1.11.0.\nUpdates `byte-buddy` from 1.10.20 to 1.11.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.11.0</h2>\n<ul>\n<li>Rework resubmission strategy to allow for immediate resubmission or on error.</li>\n<li>Fix type for constructor call when setting field in MethodCall.</li>\n<li>Include thread in default agent logger.</li>\n<li>Add compound property to InvocationHandlerAdapter.</li>\n<li>Flatten conjunction and disjunction matchers.</li>\n<li>Add method to get possibly known class file version of TypeDescription.</li>\n<li>Correctly consider generic array type when computing erasure.</li>\n</ul>\n<h2>Byte Buddy 1.10.22</h2>\n<ul>\n<li>Refactor <code>JavaConstant</code> API and fix handle resolution.</li>\n<li>Adjust bootstrap method validation to account for possible dynamic constants.</li>\n<li>Make class loaders parallel capable.</li>\n<li>Correct code for attaching to Windows VMs with 32 bit.</li>\n<li>Allow configuration for Gradle plugin to consider class path as incremental.</li>\n</ul>\n<h2>Byte Buddy 1.10.21</h2>\n<ul>\n<li>Update ASM and add support for Java 17.</li>\n<li>Make plugin discoverability configurable.</li>\n<li>Add advice suppression handler for rethrowing.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy's changelog</a>.</em></p>\n<blockquote>\n<h3>19. April 2021: version 1.11.0</h3>\n<ul>\n<li>Rework resubmission strategy to allow for immediate resubmission or on error.</li>\n<li>Fix type for constructor call when setting field in MethodCall.</li>\n<li>Include thread in default agent logger.</li>\n<li>Add compound property to InvocationHandlerAdapter.</li>\n<li>Flatten conjunction and disjunction matchers.</li>\n<li>Add method to get possibly known class file version of TypeDescription.</li>\n<li>Correctly consider generic array type when computing erasure.</li>\n</ul>\n<h3>9. Mars 2021: version 1.10.22</h3>\n<ul>\n<li>Refactor <code>JavaConstant</code> API and fix handle resolution.</li>\n<li>Adjust bootstrap method validation to account for possible dynamic constants.</li>\n<li>Make class loaders parallel capable.</li>\n<li>Correct code for attaching to Windows VMs with 32 bit.</li>\n<li>Allow configuration for Gradle plugin to consider class path as incremental.</li>\n</ul>\n<h3>21. February 2021: version 1.10.21</h3>\n<ul>\n<li>Update ASM and add support for Java 17.</li>\n<li>Make plugin discoverability configurable.</li>\n<li>Add advice suppression handler for rethrowing.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c76b2b0df0fbaa711cf2ca10418dfef2b967e94d\"><code>c76b2b0</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.0</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/791e4af07e298a29b0313ae4720063f4df7c192f\"><code>791e4af</code></a> [release] New attempt</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/79287f6b034f76ad52d8419d7772e9b521d321f2\"><code>79287f6</code></a> Remove settings.xml-</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/8cd9b8f6416b113b4fbf300d4c05889901efc43b\"><code>8cd9b8f</code></a> [release] Add settings security.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c5a6ed4705c1af8f5f92fcdc523773f2f6ddf7aa\"><code>c5a6ed4</code></a> [release] Proper caps for debug.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/8b1e9eee3eb761854ac49b7eef9177a8f26aba3f\"><code>8b1e9ee</code></a> [release] Try build</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/5e93eb34fa4bd068f277679604e97acd26fc1b9c\"><code>5e93eb3</code></a> Add debugging to release build.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/621894a6464a2948edda6e8886dbe8045493f4f8\"><code>621894a</code></a> [release] New release</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f7800e2d6b48a2a4906ac6d6c2b27b73388e30ec\"><code>f7800e2</code></a> Suppress unchecked warning.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/13ebcbddff1f4f51f13d36703bdc88cbc9146af6\"><code>13ebcbd</code></a> Correctly resolve erasure for generic arrays with variables declared by methods.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.10.20...byte-buddy-1.11.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-agent` from 1.10.20 to 1.11.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-agent's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.11.0</h2>\n<ul>\n<li>Rework resubmission strategy to allow for immediate resubmission or on error.</li>\n<li>Fix type for constructor call when setting field in MethodCall.</li>\n<li>Include thread in default agent logger.</li>\n<li>Add compound property to InvocationHandlerAdapter.</li>\n<li>Flatten conjunction and disjunction matchers.</li>\n<li>Add method to get possibly known class file version of TypeDescription.</li>\n<li>Correctly consider generic array type when computing erasure.</li>\n</ul>\n<h2>Byte Buddy 1.10.22</h2>\n<ul>\n<li>Refactor <code>JavaConstant</code> API and fix handle resolution.</li>\n<li>Adjust bootstrap method validation to account for possible dynamic constants.</li>\n<li>Make class loaders parallel capable.</li>\n<li>Correct code for attaching to Windows VMs with 32 bit.</li>\n<li>Allow configuration for Gradle plugin to consider class path as incremental.</li>\n</ul>\n<h2>Byte Buddy 1.10.21</h2>\n<ul>\n<li>Update ASM and add support for Java 17.</li>\n<li>Make plugin discoverability configurable.</li>\n<li>Add advice suppression handler for rethrowing.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-agent's changelog</a>.</em></p>\n<blockquote>\n<h3>19. April 2021: version 1.11.0</h3>\n<ul>\n<li>Rework resubmission strategy to allow for immediate resubmission or on error.</li>\n<li>Fix type for constructor call when setting field in MethodCall.</li>\n<li>Include thread in default agent logger.</li>\n<li>Add compound property to InvocationHandlerAdapter.</li>\n<li>Flatten conjunction and disjunction matchers.</li>\n<li>Add method to get possibly known class file version of TypeDescription.</li>\n<li>Correctly consider generic array type when computing erasure.</li>\n</ul>\n<h3>9. Mars 2021: version 1.10.22</h3>\n<ul>\n<li>Refactor <code>JavaConstant</code> API and fix handle resolution.</li>\n<li>Adjust bootstrap method validation to account for possible dynamic constants.</li>\n<li>Make class loaders parallel capable.</li>\n<li>Correct code for attaching to Windows VMs with 32 bit.</li>\n<li>Allow configuration for Gradle plugin to consider class path as incremental.</li>\n</ul>\n<h3>21. February 2021: version 1.10.21</h3>\n<ul>\n<li>Update ASM and add support for Java 17.</li>\n<li>Make plugin discoverability configurable.</li>\n<li>Add advice suppression handler for rethrowing.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c76b2b0df0fbaa711cf2ca10418dfef2b967e94d\"><code>c76b2b0</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.0</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/791e4af07e298a29b0313ae4720063f4df7c192f\"><code>791e4af</code></a> [release] New attempt</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/79287f6b034f76ad52d8419d7772e9b521d321f2\"><code>79287f6</code></a> Remove settings.xml-</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/8cd9b8f6416b113b4fbf300d4c05889901efc43b\"><code>8cd9b8f</code></a> [release] Add settings security.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c5a6ed4705c1af8f5f92fcdc523773f2f6ddf7aa\"><code>c5a6ed4</code></a> [release] Proper caps for debug.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/8b1e9eee3eb761854ac49b7eef9177a8f26aba3f\"><code>8b1e9ee</code></a> [release] Try build</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/5e93eb34fa4bd068f277679604e97acd26fc1b9c\"><code>5e93eb3</code></a> Add debugging to release build.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/621894a6464a2948edda6e8886dbe8045493f4f8\"><code>621894a</code></a> [release] New release</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f7800e2d6b48a2a4906ac6d6c2b27b73388e30ec\"><code>f7800e2</code></a> Suppress unchecked warning.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/13ebcbddff1f4f51f13d36703bdc88cbc9146af6\"><code>13ebcbd</code></a> Correctly resolve erasure for generic arrays with variables declared by methods.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.10.20...byte-buddy-1.11.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-android` from 1.10.20 to 1.11.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-android's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.11.0</h2>\n<ul>\n<li>Rework resubmission strategy to allow for immediate resubmission or on error.</li>\n<li>Fix type for constructor call when setting field in MethodCall.</li>\n<li>Include thread in default agent logger.</li>\n<li>Add compound property to InvocationHandlerAdapter.</li>\n<li>Flatten conjunction and disjunction matchers.</li>\n<li>Add method to get possibly known class file version of TypeDescription.</li>\n<li>Correctly consider generic array type when computing erasure.</li>\n</ul>\n<h2>Byte Buddy 1.10.22</h2>\n<ul>\n<li>Refactor <code>JavaConstant</code> API and fix handle resolution.</li>\n<li>Adjust bootstrap method validation to account for possible dynamic constants.</li>\n<li>Make class loaders parallel capable.</li>\n<li>Correct code for attaching to Windows VMs with 32 bit.</li>\n<li>Allow configuration for Gradle plugin to consider class path as incremental.</li>\n</ul>\n<h2>Byte Buddy 1.10.21</h2>\n<ul>\n<li>Update ASM and add support for Java 17.</li>\n<li>Make plugin discoverability configurable.</li>\n<li>Add advice suppression handler for rethrowing.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-android's changelog</a>.</em></p>\n<blockquote>\n<h3>19. April 2021: version 1.11.0</h3>\n<ul>\n<li>Rework resubmission strategy to allow for immediate resubmission or on error.</li>\n<li>Fix type for constructor call when setting field in MethodCall.</li>\n<li>Include thread in default agent logger.</li>\n<li>Add compound property to InvocationHandlerAdapter.</li>\n<li>Flatten conjunction and disjunction matchers.</li>\n<li>Add method to get possibly known class file version of TypeDescription.</li>\n<li>Correctly consider generic array type when computing erasure.</li>\n</ul>\n<h3>9. Mars 2021: version 1.10.22</h3>\n<ul>\n<li>Refactor <code>JavaConstant</code> API and fix handle resolution.</li>\n<li>Adjust bootstrap method validation to account for possible dynamic constants.</li>\n<li>Make class loaders parallel capable.</li>\n<li>Correct code for attaching to Windows VMs with 32 bit.</li>\n<li>Allow configuration for Gradle plugin to consider class path as incremental.</li>\n</ul>\n<h3>21. February 2021: version 1.10.21</h3>\n<ul>\n<li>Update ASM and add support for Java 17.</li>\n<li>Make plugin discoverability configurable.</li>\n<li>Add advice suppression handler for rethrowing.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c76b2b0df0fbaa711cf2ca10418dfef2b967e94d\"><code>c76b2b0</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.0</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/791e4af07e298a29b0313ae4720063f4df7c192f\"><code>791e4af</code></a> [release] New attempt</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/79287f6b034f76ad52d8419d7772e9b521d321f2\"><code>79287f6</code></a> Remove settings.xml-</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/8cd9b8f6416b113b4fbf300d4c05889901efc43b\"><code>8cd9b8f</code></a> [release] Add settings security.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/c5a6ed4705c1af8f5f92fcdc523773f2f6ddf7aa\"><code>c5a6ed4</code></a> [release] Proper caps for debug.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/8b1e9eee3eb761854ac49b7eef9177a8f26aba3f\"><code>8b1e9ee</code></a> [release] Try build</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/5e93eb34fa4bd068f277679604e97acd26fc1b9c\"><code>5e93eb3</code></a> Add debugging to release build.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/621894a6464a2948edda6e8886dbe8045493f4f8\"><code>621894a</code></a> [release] New release</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f7800e2d6b48a2a4906ac6d6c2b27b73388e30ec\"><code>f7800e2</code></a> Suppress unchecked warning.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/13ebcbddff1f4f51f13d36703bdc88cbc9146af6\"><code>13ebcbd</code></a> Correctly resolve erasure for generic arrays with variables declared by methods.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.10.20...byte-buddy-1.11.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2270", "Bump shipkit-changelog from 1.1.13 to 1.1.15", null, "dependabot[bot]", "04/21/21, 08:27:52 PM", "Bumps shipkit-changelog from 1.1.13 to 1.1.15.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-changelog&package-manager=gradle&previous-version=1.1.13&new-version=1.1.15)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2271", "Bump groovy from 3.0.7 to 3.0.8", null, "dependabot[bot]", "04/21/21, 08:27:36 PM", "Bumps [groovy](https://github.com/apache/groovy) from 3.0.7 to 3.0.8.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/apache/groovy/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.codehaus.groovy:groovy&package-manager=gradle&previous-version=3.0.7&new-version=3.0.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2274", "Fixes #2273 : Add missing parenthesis to javadoc example", "Michael Vitz", "mvitz", "04/23/21, 03:35:37 PM", "Adds the missing parenthesis to the ArgumentMatcher javadoc example\r\n\r\n## Checklist\r\n\r\n - [x] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [x] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [x] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [x] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [x] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2276", "Bump kotlinx-coroutines-core from 1.4.2-native-mt to 1.4.3-native-mt", null, "dependabot[bot]", "04/27/21, 10:22:27 AM", "Bumps [kotlinx-coroutines-core](https://github.com/Kotlin/kotlinx.coroutines) from 1.4.2-native-mt to 1.4.3-native-mt.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kotlin/kotlinx.coroutines/releases\">kotlinx-coroutines-core's releases</a>.</em></p>\n<blockquote>\n<h2>1.4.3</h2>\n<h3>General changes</h3>\n<ul>\n<li>Thread context is properly preserved and restored for coroutines without <code>ThreadContextElement</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/985\">#985</a>)</li>\n<li><code>ThreadContextElement</code>s are now restored in the opposite order from update (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2195\">#2195</a>)</li>\n<li>Improved performance of combine with 4 parameters, thanks to <a href=\"https://github.com/alexvanyo\"><code>@\u200balexvanyo</code></a> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2419\">#2419</a>)</li>\n<li>Debug agent sanitizer leaves at least one frame with source location (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1437\">#1437</a>)</li>\n<li>Update Reactor version in <code>kotlinx-coroutines-reactor</code> to <code>3.4.1</code>, thanks to <a href=\"https://github.com/sokomishalov\"><code>@\u200bsokomishalov</code></a> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2432\">#2432</a>)</li>\n<li><code>callsInPlace</code> contract added to <code>ReceiveChannel.consume</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/941\">#941</a>)</li>\n<li><code>CoroutineStart.UNDISPATCHED</code> promoted to stable API (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1393\">#1393</a>)</li>\n<li>Kotlin updated to 1.4.30</li>\n<li><code>kotlinx.coroutines</code> are now released directly to MavenCentral</li>\n<li>Reduced the size of <code>DispatchedCoroutine</code> by a field</li>\n<li>Internal class <code>TimeSource</code> renamed to <code>SchedulerTimeSource</code> to prevent wildcard import issues (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2537\">#2537</a>)</li>\n</ul>\n<h3>Bug fixes</h3>\n<ul>\n<li>Fixed the problem that prevented implementation via delegation for <code>Job</code> interface (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2423\">#2423</a>)</li>\n<li>Fixed incorrect ProGuard rules that allowed shrinking volatile felds (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1564\">#1564</a>)</li>\n<li>Fixed <code>await</code>/<code>asDeferred</code> for <code>MinimalStage</code> implementations in jdk8 module (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2456\">#2456</a>)</li>\n<li>Fixed bug when <code>onUndeliveredElement</code> wasn't called for unlimited channels (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2435\">#2435</a>)</li>\n<li>Fixed a bug when <code>ListenableFuture.isCancelled</code> returned from <code>asListenableFuture</code> could have thrown an exception, thanks to <a href=\"https://github.com/vadimsemenov\"><code>@\u200bvadimsemenov</code></a> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2421\">#2421</a>)</li>\n<li>Coroutine in <code>callbackFlow</code> and <code>produce</code> is properly cancelled when the channel was closed separately (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2506\">#2506</a>)</li>\n</ul>\n<h2>0.12: Kotlin 1.1.0 release and reactive utilities</h2>\n<ul>\n<li>Switched to Kotlin version 1.1.0 release.</li>\n<li>Reworked and updated utilities for\n<a href=\"https://github.com/Kotlin/kotlinx.coroutines/blob/HEAD/kotlinx-coroutines-reactive\">Reactive Streams</a>,\n<a href=\"https://github.com/Kotlin/kotlinx.coroutines/blob/HEAD/kotlinx-coroutines-rx1\">Rx 1.x</a>, and\n<a href=\"https://github.com/Kotlin/kotlinx.coroutines/blob/HEAD/kotlinx-coroutines-rx2\">Rx 2.x</a> with library-specific\ncoroutine builders, suspending functions, converters and iteration support.</li>\n<li><code>LinkedListChannel</code> with unlimited buffer (<code>offer</code> always succeeds).</li>\n<li><code>onLock</code> select clause and an optional <code>owner</code> parameter in all <code>Mutex</code> functions.</li>\n<li><code>selectUnbiased</code> function.</li>\n<li><code>actor</code> coroutine builder.</li>\n<li>Couple more examples for &quot;Shared mutable state and concurrency&quot; section and\n&quot;Channels are fair&quot; section with ping-pong table example\nin <a href=\"https://github.com/Kotlin/kotlinx.coroutines/blob/HEAD/coroutines-guide.md\">coroutines guide</a>.</li>\n</ul>\n<h2>0.6-beta: for Kotlin 1.1.0-beta-38</h2>\n<ul>\n<li>Switched to Kotlin version 1.1.0-beta-38.</li>\n<li>A <a href=\"https://github.com/Kotlin/kotlinx.coroutines/blob/HEAD/coroutines-guide.md\">guide on coroutines</a> is expanded.</li>\n</ul>\n<h2>0.5-beta: for Kotlin 1.1.0-beta-22</h2>\n<ul>\n<li>Switched to Kotlin version 1.1.0-beta-22 (republished version).</li>\n<li>Removed <code>currentCoroutineContext</code> and related thread-locals without replacement.\nExplicitly pass coroutine context around if needed.</li>\n<li><code>lazyDefer(context) {...}</code> coroutine builder and <code>LazyDeferred</code> interface are introduced.</li>\n<li>The default behaviour of all coroutine dispatchers is changed to always schedule execution of new coroutine\nfor later in this thread or thread pool. Correspondingly, <code>CoroutineDispatcher.isDispatchNeeded</code> function</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kotlin/kotlinx.coroutines/blob/master/CHANGES.md\">kotlinx-coroutines-core's changelog</a>.</em></p>\n<blockquote>\n<h1>Change log for kotlinx.coroutines</h1>\n<h2>Version 1.5.0-RC</h2>\n<h3>Channels API</h3>\n<ul>\n<li>Major channels API rework (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/330\">#330</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/974\">#974</a>). Existing <code>offer</code>, <code>poll</code>, and <code>sendBlocking</code> methods are deprecated, internal <code>receiveCatching</code> and <code>onReceiveCatching</code> removed, <code>receiveOrNull</code> and <code>onReceiveOrNull</code> are completely deprecated. Previously deprecated <code>SendChannel.isFull</code> declaration is removed. Channel operators deprecated with <code>ERROR</code> are now <code>HIDDEN</code>.</li>\n<li>New methods <code>receiveCatching</code>, <code>onReceiveCatching</code> <code>trySend</code>, <code>tryReceive</code>, and <code>trySendBlocking</code> along with the new result type <code>ChannelResult</code> are introduced. They provide better type safety, are less error-prone, and have a consistent future-proof naming scheme.  The full rationale behind this change can be found <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/974#issuecomment-806569582\">here</a>.</li>\n<li><code>BroadcastChannel</code> and <code>ConflatedBroadcastChannel</code> are marked as <code>ObsoleteCoroutinesApi</code> in the favor or <code>SharedFlow</code> and <code>StateFlow</code>. The migration scheme can be found in their documentation. These classes will be deprecated in the next major release.</li>\n<li><code>callbackFlow</code> and <code>channelFlow</code> are promoted to stable API.</li>\n</ul>\n<h3>Reactive integrations</h3>\n<ul>\n<li>All existing API in modules <code>kotlinx-coroutines-rx2</code>, <code>kotlinx-coroutines-rx3</code>, <code>kotlinx-coroutines-reactive</code>, <code>kotlinx-coroutines-reactor</code>, and <code>kotlinx-coroutines-jdk9</code> were revisited and promoted to stable (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2545\">#2545</a>).</li>\n<li><code>publish</code> is no longer allowed to emit <code>null</code> values (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2646\">#2646</a>).</li>\n<li>Misleading <code>awaitSingleOr*</code> functions on <code>Publisher</code> type are deprecated (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2591\">#2591</a>).</li>\n<li><code>MaybeSource.await</code> is deprecated in the favor of <code>awaitSingle</code>, additional lint functions for <code>Mono</code> are added in order to prevent ambiguous <code>Publisher</code> usages (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2628\">#2628</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1587\">#1587</a>).</li>\n<li><code>ContextView</code> support in <code>kotlinx-coroutines-reactor</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2575\">#2575</a>).</li>\n<li>All reactive builders no longer ignore inner cancellation exceptions preventing their completion (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2262\">#2262</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2646\">#2646</a>).</li>\n<li><code>MaybeSource.collect</code> and <code>Maybe.collect</code> properly finish when they are completed without a value (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2617\">#2617</a>).</li>\n<li>All exceptions are now consistently handled according to reactive specification, whether they are considered 'fatal' or not by reactive frameworks (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2646\">#2646</a>).</li>\n</ul>\n<h3>Other improvements</h3>\n<ul>\n<li><code>Flow.last</code> and <code>Flow.lastOrNull</code> operators (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2246\">#2246</a>).</li>\n<li><code>Flow.runningFold</code> operator (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2641\">#2641</a>).</li>\n<li><code>CoroutinesTimeout</code> rule for JUnit5 (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2197\">#2197</a>).</li>\n<li>Internals of <code>Job</code> and <code>AbstractCoroutine</code> was reworked, resulting in smaller code size, less memory footprint, and better performance (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2513\">#2513</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2512\">#2512</a>).</li>\n<li><code>CancellationException</code> from Kotlin standard library is used for cancellation on Koltin/JS and Kotlin/Native (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2638\">#2638</a>).</li>\n<li>Introduced new <code>DelicateCoroutineApi</code> annotation that warns users about potential target API pitfalls and suggests studying API's documentation first. The only delicate API right now is <code>GlobalScope</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2637\">#2637</a>).</li>\n<li>Fixed bug introduced in <code>1.4.3</code> when <code>kotlinx-coroutines-core.jar</code> triggered IDEA debugger failure (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2619\">#2619</a>).</li>\n<li>Fixed memory leak of <code>ChildHandlerNode</code> with reusable continuations (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2564\">#2564</a>).</li>\n<li>Various documentation improvements (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2555\">#2555</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2589\">#2589</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2592\">#2592</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2583\">#2583</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2437\">#2437</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2616\">#2616</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2633\">#2633</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2560\">#2560</a>).</li>\n</ul>\n<h2>Version 1.4.3</h2>\n<h3>General changes</h3>\n<ul>\n<li>Thread context is properly preserved and restored for coroutines without <code>ThreadContextElement</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/985\">#985</a>)</li>\n<li><code>ThreadContextElement</code>s are now restored in the opposite order from update (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2195\">#2195</a>)</li>\n<li>Improved performance of combine with 4 parameters, thanks to <a href=\"https://github.com/alexvanyo\"><code>@\u200balexvanyo</code></a> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2419\">#2419</a>)</li>\n<li>Debug agent sanitizer leaves at least one frame with source location (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1437\">#1437</a>)</li>\n<li>Update Reactor version in <code>kotlinx-coroutines-reactor</code> to <code>3.4.1</code>, thanks to <a href=\"https://github.com/sokomishalov\"><code>@\u200bsokomishalov</code></a> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2432\">#2432</a>)</li>\n<li><code>callInPlace</code> contract added to <code>ReceiveChannel.consume</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/941\">#941</a>)</li>\n<li><code>CoroutineStart.UNDISPATCHED</code> promoted to stable API (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1393\">#1393</a>)</li>\n<li>Kotlin updated to 1.4.30</li>\n<li><code>kotlinx.coroutines</code> are now released directly to MavenCentral</li>\n<li>Reduced the size of <code>DispatchedCoroutine</code> by a field</li>\n<li>Internal class <code>TimeSource</code> renamed to <code>SchedulerTimeSource</code> to prevent wildcard import issues (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2537\">#2537</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/Kotlin/kotlinx.coroutines/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlinx:kotlinx-coroutines-core&package-manager=gradle&previous-version=1.4.2-native-mt&new-version=1.4.3-native-mt)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2277", "Apply automated ErrorProne fixes", "Tim van der Lippe", "TimvdLippe", "04/29/21, 09:07:22 AM", "This is the result of running ErrorProne on the codebase. Most notably,\r\nit adds missing override annotations, adds private constructors for\r\nclasses that should not be subclassed, removes redundant generic type\r\nspecified and fixes handling of casts/instance checks.", "NaN"], ["2279", "Remove ASM dependency", "Isma\u00ebl Mej\u00eda", "iemejia", "04/29/21, 09:06:17 AM", "Mockito depends on byte-buddy to make most of its bytecode fiddling but ASM is still needed for the tests. We can remove this dependency by relying on the already shaded version included on ASM, that we we won't get unaligned between both dependencies and we will remove the need for the explicit ASM library.\r\n\r\nR: @raphw\r\n\r\n<!-- Hey, \r\nThanks for the contribution, this is awesome.\r\nAs you may have read, project members have somehow an opinionated view on what and how should be\r\nMockito, e.g. we don't want mockito to be a feature bloat.\r\nThere may be a thorough review, with feedback -> code change loop.\r\n-->\r\n<!--\r\nWhich branch : \r\n- On mockito 3.x, make your pull request target `release/3.x`\r\n- On mockito 2.x, make your pull request target `release/2.x` (2.x is in maintenance mode)\r\n-->\r\n<!--\r\nIf you have a suggestion for this template you can fix it in the .github/PULL_REQUEST_TEMPLATE.md file\r\n-->\r\n## Checklist\r\n\r\n - [ ] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [x] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [ ] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [x] Avoid other runtime dependencies\r\n - [ ] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [x] The pull request follows coding style\r\n - [ ] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [ ] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2280", "Support mocking of function with Kotlin inline classes", "Ilmir Usmanov", "ilmirus", "05/08/21, 08:47:12 AM", "Despite functions with inline class parameters being already supported,\r\nthere were not tests for it. Thus, add them.\r\n\r\nThe other part is functions, returning inline classes. There can be several\r\nkinds of inline classes - with primitive underlying type (nullable or not-null)\r\nand reference types (nullable or not-null). Also, a function can return either\r\nnullable of not-null inline class. If a function returns nullable inline class,\r\nwe do not do anything special - the function's signature contains inline class.\r\nHowever, if the function returns not-null inline class, its signature contains\r\nunderlying type, thus, we need to unbox the inline class (i.e. get underlying\r\ntype's value) to mock the return value.\r\n\r\nFor example, if we have the following inline class\r\n\r\n  inline class IC(val i: Int)\r\n\r\nand we want to mock return value of a function, returning the inline class\r\n\r\n  fun returnsIC(): IC\r\n\r\nlike\r\n\r\n  `when`(mock.returnsIC()).thenReturn(IC(1))\r\n\r\nthen if we do not unbox the argument of `thenReturn` function, we get error\r\nabout incompatible types.\r\n\r\nThe only issue, however, is that we cannot check, whether the function indeed\r\nreturns `IC`, unless we use kotlin.reflect. So, the following code will work.\r\n\r\n  fun returnsInt(): Int\r\n\r\n  `when`(mock.returnsInt()).thenReturn(IC(1))\r\n\r\nFixes issue #1930\r\n\r\n<!-- Hey, \r\nThanks for the contribution, this is awesome.\r\nAs you may have read, project members have somehow an opinionated view on what and how should be\r\nMockito, e.g. we don't want mockito to be a feature bloat.\r\nThere may be a thorough review, with feedback -> code change loop.\r\n-->\r\n<!--\r\nWhich branch : \r\n- On mockito 3.x, make your pull request target `release/3.x`\r\n- On mockito 2.x, make your pull request target `release/2.x` (2.x is in maintenance mode)\r\n-->\r\n<!--\r\nIf you have a suggestion for this template you can fix it in the .github/PULL_REQUEST_TEMPLATE.md file\r\n-->\r\n## Checklist\r\n\r\n - [X] Read the [contributing guide](https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md)\r\n - [X] PR should be motivated, i.e. what does it fix, why, and if relevant how\r\n - [X] If possible / relevant include an example in the description, that could help all readers\r\n       including project members to get a better picture of the change\r\n - [X] Avoid other runtime dependencies\r\n - [X] Meaningful commit history ; intention is important please rebase your commit history so that each\r\n       commit is meaningful and help the people that will explore a change in 2 years\r\n - [X] The pull request follows coding style\r\n - [X] Mention `Fixes #<issue number>` in the description _if relevant_\r\n - [X] At least one commit should mention `Fixes #<issue number>` _if relevant_\r\n\r", "NaN"], ["2283", "Improve error messages in case of missing dependency on Byte Buddy and avoid hard dependency on Byte Buddy in member accessor.", "Rafael Winterhalter", "raphw", "05/05/21, 09:11:30 PM", "This improves error messages in case the dependency is not set up correctly. This should rarely happen but especially with the module system gaining traction, this might trigger a few bugs that we can better explain this way.", "NaN"], ["2284", "Bump shipkit-auto-version from 1.1.8 to 1.1.9", null, "dependabot[bot]", "05/05/21, 10:05:06 AM", "Bumps shipkit-auto-version from 1.1.8 to 1.1.9.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-auto-version&package-manager=gradle&previous-version=1.1.8&new-version=1.1.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2291", "Bump biz.aQute.bnd.gradle from 5.2.0 to 5.3.0", null, "dependabot[bot]", "05/10/21, 01:21:24 PM", "Bumps [biz.aQute.bnd.gradle](https://github.com/bndtools/bnd) from 5.2.0 to 5.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/bndtools/bnd/releases\">biz.aQute.bnd.gradle's releases</a>.</em></p>\n<blockquote>\n<h2>Bnd/Bndtools 5.3.0</h2>\n<p>See <a href=\"https://github.com/bndtools/bnd/wiki/Changes-in-5.3.0\">Release Notes</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/bndtools/bnd/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=biz.aQute.bnd:biz.aQute.bnd.gradle&package-manager=gradle&previous-version=5.2.0&new-version=5.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2292", "Fix stackoverflow in ArgumentsAreDifferent reporting", "Tim van der Lippe", "TimvdLippe", "05/11/21, 03:19:59 PM", "When using Mockito without opentest4j, reporting an\r\nArgumentsAreDifferent exception would throw a StackOverflowError when\r\nattempting to obtain the message from the exception.\r\n\r\nThe root problem was that super.toString() would call its own\r\ngetMessage(). Instead, we should obtain the message from the super, to\r\navoid the circular call.", "NaN"], ["2293", "Bump actions/checkout from 2 to 2.3.4", null, "dependabot[bot]", "05/12/21, 12:59:25 PM", "Bumps [actions/checkout](https://github.com/actions/checkout) from 2 to 2.3.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v2.3.4</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/379\">Add missing <code>await</code>s</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/360\">Swap to Environment Files</a></li>\n</ul>\n<h2>v2.3.3</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/345\">Remove Unneeded commit information from build logs</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/326\">Add Licensed to verify third party dependencies</a></li>\n</ul>\n<h2>v2.3.2</h2>\n<p><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/320\">Add Third Party License Information to Dist Files</a></p>\n<h2>v2.3.1</h2>\n<p><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/284\">Fix default branch resolution for .wiki and when using SSH</a></p>\n<h2>v2.3.0</h2>\n<p><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/278\">Fallback to the default branch</a></p>\n<h2>v2.2.0</h2>\n<p><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/258\">Fetch all history for all tags and branches when fetch-depth=0</a></p>\n<h2>v2.1.1</h2>\n<p>Changes to support GHES (<a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/236\">here</a> and <a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/248\">here</a>)</p>\n<h2>v2.1.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/191\">Group output</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/199\">Changes to support GHES alpha release</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/184\">Persist core.sshCommand for submodules</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/163\">Add support ssh</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/179\">Convert submodule SSH URL to HTTPS, when not using SSH</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/157\">Add submodule support</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/144\">Follow proxy settings</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/141\">Fix ref for pr closed event when a pr is merged</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/128\">Fix issue checking detached when git less than 2.22</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v2.3.1</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/284\">Fix default branch resolution for .wiki and when using SSH</a></li>\n</ul>\n<h2>v2.3.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/278\">Fallback to the default branch</a></li>\n</ul>\n<h2>v2.2.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/258\">Fetch all history for all tags and branches when fetch-depth=0</a></li>\n</ul>\n<h2>v2.1.1</h2>\n<ul>\n<li>Changes to support GHES (<a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/236\">here</a> and <a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/248\">here</a>)</li>\n</ul>\n<h2>v2.1.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/191\">Group output</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/199\">Changes to support GHES alpha release</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/184\">Persist core.sshCommand for submodules</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/163\">Add support ssh</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/179\">Convert submodule SSH URL to HTTPS, when not using SSH</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/157\">Add submodule support</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/144\">Follow proxy settings</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/141\">Fix ref for pr closed event when a pr is merged</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/128\">Fix issue checking detached when git less than 2.22</a></li>\n</ul>\n<h2>v2.0.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/108\">Do not pass cred on command line</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/107\">Add input persist-credentials</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/104\">Fallback to REST API to download repo</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/actions/checkout/compare/v2...v2.3.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=2&new-version=2.3.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2294", "Bump gradle/wrapper-validation-action from 1 to 1.0.3", null, "dependabot[bot]", "05/12/21, 12:59:14 PM", "Bumps [gradle/wrapper-validation-action](https://github.com/gradle/wrapper-validation-action) from 1 to 1.0.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gradle/wrapper-validation-action/releases\">gradle/wrapper-validation-action's releases</a>.</em></p>\n<blockquote>\n<h2>v1.0.3</h2>\n<h1>Gradle Wrapper Validation</h1>\n<p>Update <code>minimist</code> version to  <code>1.2.5</code></p>\n<h2>v1.0.2</h2>\n<h1>Gradle Wrapper Validation</h1>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/pull/6\">gradle/wrapper-validation-action#6</a> Check homoglyph variants of Gradle Wrapper JARs</li>\n<li><a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/7\">gradle/wrapper-validation-action#7</a> Validation failure message explain how to react to invalid Gradle Wrapper JARs</li>\n</ul>\n<h2>v1.0.1</h2>\n<h1>Gradle Wrapper Validation</h1>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/2\">gradle/wrapper-validation-action#2</a> Always print the hashes of all found Gradle Wrapper JARs</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/gradle/wrapper-validation-action/compare/v1...v1.0.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gradle/wrapper-validation-action&package-manager=github_actions&previous-version=1&new-version=1.0.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2295", "Renamed main dev branch", "Szczepan Faber", "mockitoguy", "05/13/21, 05:44:06 PM", "Renamed the main dev branch to a simpler and more intuitive name, GitHub default `main`. Before we merge this, we need to change the main dev branch name in the project settings (happy to do it when this PR is approved).", "NaN"], ["2296", "Bump versions.junitJupiter from 5.7.1 to 5.7.2", null, "dependabot[bot]", "05/17/21, 09:52:38 AM", "Bumps `versions.junitJupiter` from 5.7.1 to 5.7.2.\nUpdates `junit-jupiter-api` from 5.7.1 to 5.7.2\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit5/releases\">junit-jupiter-api's releases</a>.</em></p>\n<blockquote>\n<p>JUnit 5.7.2 = Platform 1.7.2 + Jupiter 5.7.2 + Vintage 5.7.2</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.2/release-notes/\">Release Notes</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit5/commit/0ba600e478c728cdb80c83dcbf554c08f7a0755c\"><code>0ba600e</code></a> Move <a href=\"https://github-redirect.dependabot.com/junit-team/junit5/issues/2423\">#2423</a> to 5.7.2</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/e6d74ab2f2d17c88c166a30fbcd8bb97f3fc8f31\"><code>e6d74ab</code></a> Acquire global read lock in presence of other exclusive resources</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/267ce626491b02a86af7fb94191313adb8959f8e\"><code>267ce62</code></a> Add Stalebot configuration</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/05414dc722cee139718c8de7202e3f8a79a1f680\"><code>05414dc</code></a> Upgradle to 7.0.1</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/8d9ef8045bc28645953baace63999cc994e1d4e1\"><code>8d9ef80</code></a> Update spring-nohttp plugin</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/4e98f5530b6d731f9167cbe4e43cf8d0fcc2f525\"><code>4e98f55</code></a> Hard-wrap at 90 chars and add indentation</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/6359e512436a642ad1efc986f754105344b94ff3\"><code>6359e51</code></a> Add Provide-Capability OSGi header to engine bundles</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/a02c62ac53a9d4d271e4bfd8ee28f438d4dbe4f8\"><code>a02c62a</code></a> Move entry to 5.7.2 release notes</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/4f206d347fda5c84b1a46245b0c57d427f24039b\"><code>4f206d3</code></a> Update shadow plugin</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/81e6b008f742a5d2a4e1aaa23e409199f1c55b86\"><code>81e6b00</code></a> Update Kotlin plugin</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit5/compare/r5.7.1...r5.7.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `junit-jupiter-engine` from 5.7.1 to 5.7.2\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit5/releases\">junit-jupiter-engine's releases</a>.</em></p>\n<blockquote>\n<p>JUnit 5.7.2 = Platform 1.7.2 + Jupiter 5.7.2 + Vintage 5.7.2</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.2/release-notes/\">Release Notes</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit5/commit/0ba600e478c728cdb80c83dcbf554c08f7a0755c\"><code>0ba600e</code></a> Move <a href=\"https://github-redirect.dependabot.com/junit-team/junit5/issues/2423\">#2423</a> to 5.7.2</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/e6d74ab2f2d17c88c166a30fbcd8bb97f3fc8f31\"><code>e6d74ab</code></a> Acquire global read lock in presence of other exclusive resources</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/267ce626491b02a86af7fb94191313adb8959f8e\"><code>267ce62</code></a> Add Stalebot configuration</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/05414dc722cee139718c8de7202e3f8a79a1f680\"><code>05414dc</code></a> Upgradle to 7.0.1</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/8d9ef8045bc28645953baace63999cc994e1d4e1\"><code>8d9ef80</code></a> Update spring-nohttp plugin</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/4e98f5530b6d731f9167cbe4e43cf8d0fcc2f525\"><code>4e98f55</code></a> Hard-wrap at 90 chars and add indentation</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/6359e512436a642ad1efc986f754105344b94ff3\"><code>6359e51</code></a> Add Provide-Capability OSGi header to engine bundles</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/a02c62ac53a9d4d271e4bfd8ee28f438d4dbe4f8\"><code>a02c62a</code></a> Move entry to 5.7.2 release notes</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/4f206d347fda5c84b1a46245b0c57d427f24039b\"><code>4f206d3</code></a> Update shadow plugin</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/81e6b008f742a5d2a4e1aaa23e409199f1c55b86\"><code>81e6b00</code></a> Update Kotlin plugin</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit5/compare/r5.7.1...r5.7.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `junit-vintage-engine` from 5.7.1 to 5.7.2\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/junit-team/junit5/releases\">junit-vintage-engine's releases</a>.</em></p>\n<blockquote>\n<p>JUnit 5.7.2 = Platform 1.7.2 + Jupiter 5.7.2 + Vintage 5.7.2</p>\n<p>See <a href=\"http://junit.org/junit5/docs/5.7.2/release-notes/\">Release Notes</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/junit-team/junit5/commit/0ba600e478c728cdb80c83dcbf554c08f7a0755c\"><code>0ba600e</code></a> Move <a href=\"https://github-redirect.dependabot.com/junit-team/junit5/issues/2423\">#2423</a> to 5.7.2</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/e6d74ab2f2d17c88c166a30fbcd8bb97f3fc8f31\"><code>e6d74ab</code></a> Acquire global read lock in presence of other exclusive resources</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/267ce626491b02a86af7fb94191313adb8959f8e\"><code>267ce62</code></a> Add Stalebot configuration</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/05414dc722cee139718c8de7202e3f8a79a1f680\"><code>05414dc</code></a> Upgradle to 7.0.1</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/8d9ef8045bc28645953baace63999cc994e1d4e1\"><code>8d9ef80</code></a> Update spring-nohttp plugin</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/4e98f5530b6d731f9167cbe4e43cf8d0fcc2f525\"><code>4e98f55</code></a> Hard-wrap at 90 chars and add indentation</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/6359e512436a642ad1efc986f754105344b94ff3\"><code>6359e51</code></a> Add Provide-Capability OSGi header to engine bundles</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/a02c62ac53a9d4d271e4bfd8ee28f438d4dbe4f8\"><code>a02c62a</code></a> Move entry to 5.7.2 release notes</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/4f206d347fda5c84b1a46245b0c57d427f24039b\"><code>4f206d3</code></a> Update shadow plugin</li>\n<li><a href=\"https://github.com/junit-team/junit5/commit/81e6b008f742a5d2a4e1aaa23e409199f1c55b86\"><code>81e6b00</code></a> Update Kotlin plugin</li>\n<li>Additional commits viewable in <a href=\"https://github.com/junit-team/junit5/compare/r5.7.1...r5.7.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2297", "Bump junit-platform-launcher from 1.7.1 to 1.7.2", null, "dependabot[bot]", "05/17/21, 09:52:28 AM", "Bumps [junit-platform-launcher](https://github.com/junit-team/junit5) from 1.7.1 to 1.7.2.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/junit-team/junit5/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.junit.platform:junit-platform-launcher&package-manager=gradle&previous-version=1.7.1&new-version=1.7.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2298", "Bump versions.errorprone from 2.6.0 to 2.7.1", null, "dependabot[bot]", "05/17/21, 04:32:05 PM", "Bumps `versions.errorprone` from 2.6.0 to 2.7.1.\nUpdates `error_prone_core` from 2.6.0 to 2.7.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google/error-prone/releases\">error_prone_core's releases</a>.</em></p>\n<blockquote>\n<h2>Error Prone 2.7.1</h2>\n<p>Everything in <a href=\"https://github.com/google/error-prone/releases/tag/v2.7.0\">Error Prone 2.7.0</a>, plus an <a href=\"https://github.com/google/error-prone/commit/ff07935205757a2eb8b6ef52af1751948752b6ab\">additional fix for JDK 17</a>.</p>\n<h2>Error Prone 2.7.0</h2>\n<p>Changes</p>\n<ul>\n<li>Initial support for running on JDK 17 EA builds. Supports for Java 17 languages features is incomplete; <a href=\"https://github.com/google/error-prone/issues\">bug reports</a> for issues with Java 17 are welcome.</li>\n<li><a href=\"https://github.com/InlineMe\"><code>@\u200bInlineMe</code></a>` is a deprecation mechanism that allows automated tools to cleanup existing callers: <a href=\"http://errorprone.info/docs/inlineme\">http://errorprone.info/docs/inlineme</a></li>\n</ul>\n<p>New checks:</p>\n<ul>\n<li><a href=\"http://errorprone.info/bugpattern/EqualsNull\">EqualsNull</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/MissingBraces\">MissingBraces</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/NullablePrimitiveArray\">NullablePrimitiveArray</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/OptionalMapUnusedValue\">OptionalMapUnusedValue</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/TestParametersNotInitialized\">TestParametersNotInitialized</a></li>\n</ul>\n<p>Closed issues: <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2257\">#2257</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2260\">#2260</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2282\">#2282</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2301\">#2301</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2322\">#2322</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2323\">#2323</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2324\">#2324</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/error-prone/commit/09262b80cbc736ab7e27635de5be811a39371ff3\"><code>09262b8</code></a> Release Error Prone 2.7.1</li>\n<li><a href=\"https://github.com/google/error-prone/commit/ff07935205757a2eb8b6ef52af1751948752b6ab\"><code>ff07935</code></a> Improve JDK 17 support</li>\n<li><a href=\"https://github.com/google/error-prone/commit/65a75c90dbd602719cc3b204d7e0421f0479e93c\"><code>65a75c9</code></a> Enable <code>ReturnValueIgnored</code>-checking of <code>Collection</code>, <code>Iterable</code>, and `Iterat...</li>\n<li><a href=\"https://github.com/google/error-prone/commit/0c6a76d4265e7806aec61e5d4391f88533a9058a\"><code>0c6a76d</code></a> Fix a JDK 17 incompatibility</li>\n<li><a href=\"https://github.com/google/error-prone/commit/1846d94843a90fec44452b2dae4c889783d4d579\"><code>1846d94</code></a> Add tests for method invocation bug with the <code>Inliner</code>.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/8c6f73c125509b6c44aab82278630a03a30fb925\"><code>8c6f73c</code></a> Fix a JDK 16-only test</li>\n<li><a href=\"https://github.com/google/error-prone/commit/62d1bf7aeb02fa75c4e2b2dfbb7f04817638f433\"><code>62d1bf7</code></a> Internal refactoring.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/5913d86975ed9a35fc673efb07df68efb38351b9\"><code>5913d86</code></a> Update Error Prone CI to use JDK 16 as latest, and add 17-ea</li>\n<li><a href=\"https://github.com/google/error-prone/commit/f6761ee812b903ce61a3dd7f48327ae2da05d98f\"><code>f6761ee</code></a> Fix a JDK 16 incompatibility</li>\n<li><a href=\"https://github.com/google/error-prone/commit/51b5c4d9f2e5917f6e2a877aeb77b5fe8d94d7bc\"><code>51b5c4d</code></a> Fix some crashes involving records</li>\n<li>Additional commits viewable in <a href=\"https://github.com/google/error-prone/compare/v2.6.0...v2.7.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `error_prone_test_helpers` from 2.6.0 to 2.7.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google/error-prone/releases\">error_prone_test_helpers's releases</a>.</em></p>\n<blockquote>\n<h2>Error Prone 2.7.1</h2>\n<p>Everything in <a href=\"https://github.com/google/error-prone/releases/tag/v2.7.0\">Error Prone 2.7.0</a>, plus an <a href=\"https://github.com/google/error-prone/commit/ff07935205757a2eb8b6ef52af1751948752b6ab\">additional fix for JDK 17</a>.</p>\n<h2>Error Prone 2.7.0</h2>\n<p>Changes</p>\n<ul>\n<li>Initial support for running on JDK 17 EA builds. Supports for Java 17 languages features is incomplete; <a href=\"https://github.com/google/error-prone/issues\">bug reports</a> for issues with Java 17 are welcome.</li>\n<li><a href=\"https://github.com/InlineMe\"><code>@\u200bInlineMe</code></a>` is a deprecation mechanism that allows automated tools to cleanup existing callers: <a href=\"http://errorprone.info/docs/inlineme\">http://errorprone.info/docs/inlineme</a></li>\n</ul>\n<p>New checks:</p>\n<ul>\n<li><a href=\"http://errorprone.info/bugpattern/EqualsNull\">EqualsNull</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/MissingBraces\">MissingBraces</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/NullablePrimitiveArray\">NullablePrimitiveArray</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/OptionalMapUnusedValue\">OptionalMapUnusedValue</a></li>\n<li><a href=\"http://errorprone.info/bugpattern/TestParametersNotInitialized\">TestParametersNotInitialized</a></li>\n</ul>\n<p>Closed issues: <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2257\">#2257</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2260\">#2260</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2282\">#2282</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2301\">#2301</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2322\">#2322</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2323\">#2323</a>, <a href=\"https://github-redirect.dependabot.com/google/error-prone/issues/2324\">#2324</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google/error-prone/commit/09262b80cbc736ab7e27635de5be811a39371ff3\"><code>09262b8</code></a> Release Error Prone 2.7.1</li>\n<li><a href=\"https://github.com/google/error-prone/commit/ff07935205757a2eb8b6ef52af1751948752b6ab\"><code>ff07935</code></a> Improve JDK 17 support</li>\n<li><a href=\"https://github.com/google/error-prone/commit/65a75c90dbd602719cc3b204d7e0421f0479e93c\"><code>65a75c9</code></a> Enable <code>ReturnValueIgnored</code>-checking of <code>Collection</code>, <code>Iterable</code>, and `Iterat...</li>\n<li><a href=\"https://github.com/google/error-prone/commit/0c6a76d4265e7806aec61e5d4391f88533a9058a\"><code>0c6a76d</code></a> Fix a JDK 17 incompatibility</li>\n<li><a href=\"https://github.com/google/error-prone/commit/1846d94843a90fec44452b2dae4c889783d4d579\"><code>1846d94</code></a> Add tests for method invocation bug with the <code>Inliner</code>.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/8c6f73c125509b6c44aab82278630a03a30fb925\"><code>8c6f73c</code></a> Fix a JDK 16-only test</li>\n<li><a href=\"https://github.com/google/error-prone/commit/62d1bf7aeb02fa75c4e2b2dfbb7f04817638f433\"><code>62d1bf7</code></a> Internal refactoring.</li>\n<li><a href=\"https://github.com/google/error-prone/commit/5913d86975ed9a35fc673efb07df68efb38351b9\"><code>5913d86</code></a> Update Error Prone CI to use JDK 16 as latest, and add 17-ea</li>\n<li><a href=\"https://github.com/google/error-prone/commit/f6761ee812b903ce61a3dd7f48327ae2da05d98f\"><code>f6761ee</code></a> Fix a JDK 16 incompatibility</li>\n<li><a href=\"https://github.com/google/error-prone/commit/51b5c4d9f2e5917f6e2a877aeb77b5fe8d94d7bc\"><code>51b5c4d</code></a> Fix some crashes involving records</li>\n<li>Additional commits viewable in <a href=\"https://github.com/google/error-prone/compare/v2.6.0...v2.7.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\nDependabot will merge this PR once CI passes on it, as requested by @TimvdLippe.\n\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2299", "Bump kotlinx-coroutines-core from 1.4.3-native-mt to 1.5.0-native-mt", null, "dependabot[bot]", "05/17/21, 09:52:15 AM", "Bumps [kotlinx-coroutines-core](https://github.com/Kotlin/kotlinx.coroutines) from 1.4.3-native-mt to 1.5.0-native-mt.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kotlin/kotlinx.coroutines/releases\">kotlinx-coroutines-core's releases</a>.</em></p>\n<blockquote>\n<h2>1.5.0</h2>\n<p>Note that this is a full changelog relative to 1.4.3 version. Changelog relative to 1.5.0-RC can be found in the end.</p>\n<h3>Channels API</h3>\n<ul>\n<li>Major channels API rework (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/330\">#330</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/974\">#974</a>). Existing <code>offer</code>, <code>poll</code>, and <code>sendBlocking</code> methods are deprecated, internal <code>receiveCatching</code> and <code>onReceiveCatching</code> removed, <code>receiveOrNull</code> and <code>onReceiveOrNull</code> are completely deprecated. Previously deprecated <code>SendChannel.isFull</code> declaration is removed. Channel operators deprecated with <code>ERROR</code> are now <code>HIDDEN</code>.</li>\n<li>New methods <code>receiveCatching</code>, <code>onReceiveCatching</code> <code>trySend</code>, <code>tryReceive</code>, and <code>trySendBlocking</code> along with the new result type <code>ChannelResult</code> are introduced. They provide better type safety, are less error-prone, and have a consistent future-proof naming scheme.  The full rationale behind this change can be found <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/974#issuecomment-806569582\">here</a>.</li>\n<li><code>BroadcastChannel</code> and <code>ConflatedBroadcastChannel</code> are marked as <code>ObsoleteCoroutinesApi</code> in the favor or <code>SharedFlow</code> and <code>StateFlow</code>. The migration scheme can be found in their documentation. These classes will be deprecated in the next major release.</li>\n<li><code>callbackFlow</code> and <code>channelFlow</code> are promoted to stable API.</li>\n</ul>\n<h3>Reactive integrations</h3>\n<ul>\n<li>All existing API in modules <code>kotlinx-coroutines-rx2</code>, <code>kotlinx-coroutines-rx3</code>, <code>kotlinx-coroutines-reactive</code>, <code>kotlinx-coroutines-reactor</code>, and <code>kotlinx-coroutines-jdk9</code> were revisited and promoted to stable (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2545\">#2545</a>).</li>\n<li><code>publish</code> is no longer allowed to emit <code>null</code> values (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2646\">#2646</a>).</li>\n<li>Misleading <code>awaitSingleOr*</code> functions on <code>Publisher</code> type are deprecated (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2591\">#2591</a>).</li>\n<li><code>MaybeSource.await</code> is deprecated in the favor of <code>awaitSingle</code>, additional lint functions for <code>Mono</code> are added in order to prevent ambiguous <code>Publisher</code> usages (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2628\">#2628</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1587\">#1587</a>).</li>\n<li><code>ContextView</code> support in <code>kotlinx-coroutines-reactor</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2575\">#2575</a>).</li>\n<li>All reactive builders no longer ignore inner cancellation exceptions preventing their completion (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2262\">#2262</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2646\">#2646</a>).</li>\n<li><code>MaybeSource.collect</code> and <code>Maybe.collect</code> properly finish when they are completed without a value (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2617\">#2617</a>).</li>\n<li>All exceptions are now consistently handled according to reactive specification, whether they are considered 'fatal' or not by reactive frameworks (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2646\">#2646</a>).</li>\n</ul>\n<h3>Other improvements</h3>\n<ul>\n<li>Kotlin version is upgraded to 1.5.0 and JVM target is updated to 1.8.</li>\n<li><code>Flow.last</code> and <code>Flow.lastOrNull</code> operators (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2246\">#2246</a>).</li>\n<li><code>Flow.runningFold</code> operator (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2641\">#2641</a>).</li>\n<li><code>CoroutinesTimeout</code> rule for JUnit5 (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2197\">#2197</a>).</li>\n<li>Internals of <code>Job</code> and <code>AbstractCoroutine</code> was reworked, resulting in smaller code size, less memory footprint, and better performance (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2513\">#2513</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2512\">#2512</a>).</li>\n<li><code>CancellationException</code> from Kotlin standard library is used for cancellation on Koltin/JS and Kotlin/Native (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2638\">#2638</a>).</li>\n<li>Introduced new <code>DelicateCoroutinesApi</code> annotation that warns users about potential target API pitfalls and suggests studying API's documentation first. The only delicate API right now is <code>GlobalScope</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2637\">#2637</a>).</li>\n<li>Fixed bug introduced in <code>1.4.3</code> when <code>kotlinx-coroutines-core.jar</code> triggered IDEA debugger failure (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2619\">#2619</a>).</li>\n<li>Fixed memory leak of <code>ChildHandlerNode</code> with reusable continuations (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2564\">#2564</a>).</li>\n<li>Various documentation improvements (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2555\">#2555</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2589\">#2589</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2592\">#2592</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2583\">#2583</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2437\">#2437</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2616\">#2616</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2633\">#2633</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2560\">#2560</a>).</li>\n</ul>\n<h3>Changelog relative to version 1.5.0-RC</h3>\n<ul>\n<li>Fail-fast during <code>emitAll</code> called from cancelled <code>onCompletion</code> operator (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2700\">#2700</a>).</li>\n<li>Flows returned by <code>stateIn</code>/<code>shareIn</code> keep strong reference to sharing job (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2557\">#2557</a>).</li>\n<li>Rename internal <code>TimeSource</code> to <code>AbstractTimeSource</code> due to import issues (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2691\">#2691</a>).</li>\n<li>Reverted the change that triggered IDEA coroutines debugger crash (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2695\">#2695</a>, reverted <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2291\">#2291</a>).</li>\n<li><code>watchosX64</code> target support for Kotlin/Native (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2524\">#2524</a>).</li>\n<li>Various documentation fixes and improvements.</li>\n</ul>\n<h2>1.5.0-RC</h2>\n<h3>Channels API</h3>\n<ul>\n<li>Major channels API rework (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/330\">#330</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/974\">#974</a>). Existing <code>offer</code>, <code>poll</code>, and <code>sendBlocking</code> methods are deprecated, internal <code>receiveCatching</code> and <code>onReceiveCatching</code> removed, <code>receiveOrNull</code> and <code>onReceiveOrNull</code> are completely deprecated. Previously deprecated <code>SendChannel.isFull</code> declaration is removed. Channel operators deprecated with <code>ERROR</code> are now <code>HIDDEN</code>.</li>\n<li>New methods <code>receiveCatching</code>, <code>onReceiveCatching</code> <code>trySend</code>, <code>tryReceive</code>, and <code>trySendBlocking</code> along with the new result type <code>ChannelResult</code> are introduced. They provide better type safety, are less error-prone, and have a consistent future-proof naming scheme.  The full rationale behind this change can be found <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/974#issuecomment-806569582\">here</a>.</li>\n<li><code>BroadcastChannel</code> and <code>ConflatedBroadcastChannel</code> are marked as <code>ObsoleteCoroutinesApi</code> in the favor or <code>SharedFlow</code> and <code>StateFlow</code>. The migration scheme can be found in their documentation. These classes will be deprecated in the next major release.</li>\n<li><code>callbackFlow</code> and <code>channelFlow</code> are promoted to stable API.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/Kotlin/kotlinx.coroutines/blob/master/CHANGES.md\">kotlinx-coroutines-core's changelog</a>.</em></p>\n<blockquote>\n<h1>Change log for kotlinx.coroutines</h1>\n<h2>Version 1.5.0</h2>\n<p>Note that this is a full changelog relative to 1.4.3 version. Changelog relative to 1.5.0-RC can be found in the end.</p>\n<h3>Channels API</h3>\n<ul>\n<li>Major channels API rework (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/330\">#330</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/974\">#974</a>). Existing <code>offer</code>, <code>poll</code>, and <code>sendBlocking</code> methods are deprecated, internal <code>receiveCatching</code> and <code>onReceiveCatching</code> removed, <code>receiveOrNull</code> and <code>onReceiveOrNull</code> are completely deprecated. Previously deprecated <code>SendChannel.isFull</code> declaration is removed. Channel operators deprecated with <code>ERROR</code> are now <code>HIDDEN</code>.</li>\n<li>New methods <code>receiveCatching</code>, <code>onReceiveCatching</code> <code>trySend</code>, <code>tryReceive</code>, and <code>trySendBlocking</code> along with the new result type <code>ChannelResult</code> are introduced. They provide better type safety, are less error-prone, and have a consistent future-proof naming scheme.  The full rationale behind this change can be found <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/974#issuecomment-806569582\">here</a>.</li>\n<li><code>BroadcastChannel</code> and <code>ConflatedBroadcastChannel</code> are marked as <code>ObsoleteCoroutinesApi</code> in the favor or <code>SharedFlow</code> and <code>StateFlow</code>. The migration scheme can be found in their documentation. These classes will be deprecated in the next major release.</li>\n<li><code>callbackFlow</code> and <code>channelFlow</code> are promoted to stable API.</li>\n</ul>\n<h3>Reactive integrations</h3>\n<ul>\n<li>All existing API in modules <code>kotlinx-coroutines-rx2</code>, <code>kotlinx-coroutines-rx3</code>, <code>kotlinx-coroutines-reactive</code>, <code>kotlinx-coroutines-reactor</code>, and <code>kotlinx-coroutines-jdk9</code> were revisited and promoted to stable (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2545\">#2545</a>).</li>\n<li><code>publish</code> is no longer allowed to emit <code>null</code> values (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2646\">#2646</a>).</li>\n<li>Misleading <code>awaitSingleOr*</code> functions on <code>Publisher</code> type are deprecated (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2591\">#2591</a>).</li>\n<li><code>MaybeSource.await</code> is deprecated in the favor of <code>awaitSingle</code>, additional lint functions for <code>Mono</code> are added in order to prevent ambiguous <code>Publisher</code> usages (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2628\">#2628</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/1587\">#1587</a>).</li>\n<li><code>ContextView</code> support in <code>kotlinx-coroutines-reactor</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2575\">#2575</a>).</li>\n<li>All reactive builders no longer ignore inner cancellation exceptions preventing their completion (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2262\">#2262</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2646\">#2646</a>).</li>\n<li><code>MaybeSource.collect</code> and <code>Maybe.collect</code> properly finish when they are completed without a value (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2617\">#2617</a>).</li>\n<li>All exceptions are now consistently handled according to reactive specification, whether they are considered 'fatal' or not by reactive frameworks (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2646\">#2646</a>).</li>\n</ul>\n<h3>Other improvements</h3>\n<ul>\n<li>Kotlin version is upgraded to 1.5.0 and JVM target is updated to 1.8.</li>\n<li><code>Flow.last</code> and <code>Flow.lastOrNull</code> operators (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2246\">#2246</a>).</li>\n<li><code>Flow.runningFold</code> operator (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2641\">#2641</a>).</li>\n<li><code>CoroutinesTimeout</code> rule for JUnit5 (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2197\">#2197</a>).</li>\n<li>Internals of <code>Job</code> and <code>AbstractCoroutine</code> was reworked, resulting in smaller code size, less memory footprint, and better performance (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2513\">#2513</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2512\">#2512</a>).</li>\n<li><code>CancellationException</code> from Kotlin standard library is used for cancellation on Koltin/JS and Kotlin/Native (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2638\">#2638</a>).</li>\n<li>Introduced new <code>DelicateCoroutinesApi</code> annotation that warns users about potential target API pitfalls and suggests studying API's documentation first. The only delicate API right now is <code>GlobalScope</code> (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2637\">#2637</a>).</li>\n<li>Fixed bug introduced in <code>1.4.3</code> when <code>kotlinx-coroutines-core.jar</code> triggered IDEA debugger failure (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2619\">#2619</a>).</li>\n<li>Fixed memory leak of <code>ChildHandlerNode</code> with reusable continuations (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2564\">#2564</a>).</li>\n<li>Various documentation improvements (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2555\">#2555</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2589\">#2589</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2592\">#2592</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2583\">#2583</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2437\">#2437</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2616\">#2616</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2633\">#2633</a>, <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2560\">#2560</a>).</li>\n</ul>\n<h3>Changelog relative to version 1.5.0-RC</h3>\n<ul>\n<li>Fail-fast during <code>emitAll</code> called from cancelled <code>onCompletion</code> operator (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2700\">#2700</a>).</li>\n<li>Flows returned by <code>stateIn</code>/<code>shareIn</code> keep strong reference to sharing job (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2557\">#2557</a>).</li>\n<li>Rename internal <code>TimeSource</code> to <code>AbstractTimeSource</code> due to import issues (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2691\">#2691</a>).</li>\n<li>Reverted the change that triggered IDEA coroutines debugger crash (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2695\">#2695</a>, reverted <a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2291\">#2291</a>).</li>\n<li><code>watchosX64</code> target support for Kotlin/Native (<a href=\"https://github-redirect.dependabot.com/Kotlin/kotlinx.coroutines/issues/2524\">#2524</a>).</li>\n<li>Various documentation fixes and improvements.</li>\n</ul>\n<h2>Version 1.5.0-RC</h2>\n<h3>Channels API</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/Kotlin/kotlinx.coroutines/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlinx:kotlinx-coroutines-core&package-manager=gradle&previous-version=1.4.3-native-mt&new-version=1.5.0-native-mt)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2301", "Enabled automated changelog", "Szczepan Faber", "mockitoguy", "05/17/21, 04:38:55 PM", "Replaced axion Gradle plugin with Shipkit plugin. The plugin controls the version and provides information about 'previous' version which is needed for correct generation of the backlog.\r\n\r\nThis change is CI improvement and it does not change the artifacts.\r", "NaN"], ["2305", "Bump kotlin-stdlib from 1.5.0 to 1.5.10", null, "dependabot[bot]", "05/25/21, 10:41:22 AM", "Bumps [kotlin-stdlib](https://github.com/JetBrains/kotlin) from 1.5.0 to 1.5.10.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/releases\">kotlin-stdlib's releases</a>.</em></p>\n<blockquote>\n<h2>Kotlin 1.5.10</h2>\n<h4><a href=\"https://kotlinlang.org/docs/releases.html#update-to-a-new-release\">How to update to a new release</a></h4>\n<h2>Changelog</h2>\n<h3>Compiler</h3>\n<h4>Fixes</h4>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-41078\"><code>KT-41078</code></a> Incorrect type substitution in contracts with type parameters</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-44770\"><code>KT-44770</code></a> JVM / IR: &quot;IllegalArgumentException: Unrecognized Type: [null]&quot; Jackson doesn't recognize type</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-45084\"><code>KT-45084</code></a> JVM IR: &quot;NoSuchElementException: Sequence contains no element matching the predicate&quot; when inline class is passed to lambda with &gt;22 parameters</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-45779\"><code>KT-45779</code></a> JVM / IR: java.lang.NoSuchMethodError: 'int java.lang.Integer.plus(int)' caused by function reference</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-45941\"><code>KT-45941</code></a> JVM IR: local functions use generic type parameters of the outer class in the bytecode, which breaks Bytebuddy and MockK</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46149\"><code>KT-46149</code></a> Generate synthetic classes for SAM adapters with erased instead of generic supertype</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46189\"><code>KT-46189</code></a> JVM IR: tailrec function with capturing lambda in default parameter value leads to NoSuchMethodError at runtime</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46214\"><code>KT-46214</code></a> JVM / IR: &quot;IllegalStateException: No mapping for symbol: VALUE_PARAMETER INSTANCE_RECEIVER&quot; on a suspend function in an inner class</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46238\"><code>KT-46238</code></a> JVM IR: BootstrapMethodError in JDK 11+ on intersection type passed in arguments of SAM adapter where SAM interface's type parameter has a non-trivial upper bound</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46259\"><code>KT-46259</code></a> JVM IR: local function for adapted function reference is not declared as ACC_SYNTHETIC</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46284\"><code>KT-46284</code></a> JVM IR: &quot;Unbound private symbol IrClassSymbol&quot; on class reference to script class</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46402\"><code>KT-46402</code></a> IllegalAccessError: &quot;CapturedLambdaInterpreter (in unnamed module <a href=\"https://github.com/0x71b06418\"><code>@\u200b0x71b06418</code></a>) cannot access class jdk.internal.org.objectweb.asm.Type&quot; caused by inline function with a suspend parameter in Maven project</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46408\"><code>KT-46408</code></a> JVM IR: BootstrapMethodError due to missing bridge for subclass of generic Java interface</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46426\"><code>KT-46426</code></a> JVM IR: Corrupted .class file when passing Array constructor reference as (inline) lambda</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46455\"><code>KT-46455</code></a> OOM on parsing invalid code with string interpolation</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46503\"><code>KT-46503</code></a> JVM IR: &quot;AssertionError: Unexpected variance in super type argument: out <a href=\"https://github.com/1\"><code>@\u200b1</code></a>&quot;</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46505\"><code>KT-46505</code></a> JVM IR: NullPointerException caused by a callable reference with nullable inline value class parameter</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46512\"><code>KT-46512</code></a> JVM / IR: NoSuchMethodError on SAM conversion of a function reference</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46515\"><code>KT-46515</code></a> IndexOutOfBoundsException: &quot;Empty list doesn't contain element at index 0.&quot; on bad variable name in 1.5.0</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46516\"><code>KT-46516</code></a> JVM IR: &quot;AnalyzerException: Expected I, but found R&quot; on subclassing AbstractMutableList<!-- raw HTML omitted --></li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46524\"><code>KT-46524</code></a> Cannot use unsigned literals with api-version &lt; 1.5 even with opt-in</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46537\"><code>KT-46537</code></a> JVM / IR: &quot;IllegalStateException: No noarg super constructor for CLASS&quot; caused by &quot;No-arg&quot; plugin with annotation on child class</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46540\"><code>KT-46540</code></a> JVM / IR: AnalyzerException: Expected an object reference, but found J caused by java.function.Supplier</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46554\"><code>KT-46554</code></a> JVM IR: &quot;IllegalStateException: No mapping for symbol: VAR IR_TEMPORARY_VARIABLE&quot; with value class constructor delegation call</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46555\"><code>KT-46555</code></a> JVM IR: IllegalAccessError when using Java method reference</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46562\"><code>KT-46562</code></a> Kotlin 1.5.0 generates non-serializable lambdas when they should be serializable</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46568\"><code>KT-46568</code></a> JVM IR: &quot;AssertionError: IrCall expected inside JvmStatic wrapper&quot; on compiling protected static function with return type Nothing inside companion object of abstract class</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46574\"><code>KT-46574</code></a> JVM / IR: ClassCastException caused by runBlocking awaiting call while returning Kotlin.Result type.</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46579\"><code>KT-46579</code></a> JVM IR: &quot;IllegalArgumentException: Sequence contains more than one matching element&quot; for Java enum with overloaded values() static method</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46584\"><code>KT-46584</code></a> JVM IR: Intrinsics.needClassReification (UnsupportedOperationException thrown). Property delegate provider crossinline lambda inlining/reification issue</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46751\"><code>KT-46751</code></a> JVM / IR:&quot;ClassCastException: java.lang.String cannot be cast to java.lang.Void&quot; in extension function in Kotlin 1.5</li>\n</ul>\n<h3>IDE</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-45981\"><code>KT-45981</code></a> failed to analyze: java.lang.AssertionError: diagnostic callback has been already registered: Code analysis get stuck in AS 2020.3.1.14 &amp; Kotlin v1.5.0-M2</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46622\"><code>KT-46622</code></a> 60+ second freezes with Kotlin plugin 1.5.0: GetModuleInfoKt.findJvmStdlibAcrossDependencies</li>\n</ul>\n<h3>IDE. Gradle Integration</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-46417\"><code>KT-46417</code></a> [UNRESOLVED_REFERENCE] For project to project dependencies of native platform test source sets</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/5af81b4373c410b4e9920822c2ded02903d351eb\"><code>5af81b4</code></a> Update Kotlin/Native: 1.5.10-release-76</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/b3134c0232c22b81e62f1e33ab1082564408c913\"><code>b3134c0</code></a> Implemented collecting use-old-backend flag from Gradle</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/0505d58c54871a8c2ffac446ab3bc90a4a1195d3\"><code>0505d58</code></a> Fix exposing provided by Gradle Kotlin dependencies.</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/f0f2b92b4e3237dce967946492352661a7d5ce3f\"><code>f0f2b92</code></a> Parcelize: Handle class hierarchies of Parcelers (KT-46567)</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/87b2cc158e00ea6ac4715696d0636113e3ea2669\"><code>87b2cc1</code></a> IR: Lower shared variables in enum entries (KT-46605)</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/43a81e35d7368476212ac3bce5df85d3b9db7134\"><code>43a81e3</code></a> Update Kotlin/Native: 1.5.10-eap-69</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/61cdc669b5edd337581fbbd54d53f8856c9dd600\"><code>61cdc66</code></a> Cache all module dependencies to avoid O(n^2) calc complexity</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/40ced5aea0519d47d405d7adb8e389d5f61bd58a\"><code>40ced5a</code></a> Do not insert Nothing handling in JvmStatic wrapper.</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/e6966d2c8f73caac707f155a72a41056cd4f2db2\"><code>e6966d2</code></a> Revert &quot;JVM IR: mute testJvmStaticAndJvmInline for 1.5.0&quot;</li>\n<li><a href=\"https://github.com/JetBrains/kotlin/commit/8d86066547f0e43476ba51f5c8b17b0f7cff826d\"><code>8d86066</code></a> Minor. Make test actually suspend and add a test without suspension</li>\n<li>Additional commits viewable in <a href=\"https://github.com/JetBrains/kotlin/compare/v1.5.0...v1.5.10\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.jetbrains.kotlin:kotlin-stdlib&package-manager=gradle&previous-version=1.5.0&new-version=1.5.10)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2306", "Use the parent classloader if the context classloader is a child of it.", "Charles Munger", "charlesmunger", "05/27/21, 09:35:24 PM", "This should only affect cases that previously would have thrown an\r\nexception.\r\nFixes #2303", "NaN"], ["2307", "Bump shipkit-auto-version from 1.1.11 to 1.1.14", null, "dependabot[bot]", "05/26/21, 10:29:36 AM", "Bumps shipkit-auto-version from 1.1.11 to 1.1.14.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-auto-version&package-manager=gradle&previous-version=1.1.11&new-version=1.1.14)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2308", "Bump com.github.ben-manes.versions from 0.38.0 to 0.39.0", null, "dependabot[bot]", "05/28/21, 01:56:58 PM", "Bumps com.github.ben-manes.versions from 0.38.0 to 0.39.0.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=com.github.ben-manes.versions&package-manager=gradle&previous-version=0.38.0&new-version=0.39.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2309", "Bump gradle/wrapper-validation-action from 1.0.3 to 1.0.4", null, "dependabot[bot]", "05/31/21, 12:06:53 PM", "Bumps [gradle/wrapper-validation-action](https://github.com/gradle/wrapper-validation-action) from 1.0.3 to 1.0.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gradle/wrapper-validation-action/releases\">gradle/wrapper-validation-action's releases</a>.</em></p>\n<blockquote>\n<h2>v1.0.4</h2>\n<h1>Gradle Wrapper Validation</h1>\n<ul>\n<li>Retry connections to the server on failure (<a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/39\">#39</a>)</li>\n<li>Update dependencies (<a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/38\">#38</a>, <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/37\">#37</a>, <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/36\">#36</a>, <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/34\">#34</a>, <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/31\">#31</a>, <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/30\">#30</a>, <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/29\">#29</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/e6e38bacfdf1a337459f332974bb2327a31aaf4b\"><code>e6e38ba</code></a> Dependencies</li>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/07d55c647beccd034466bfc0a09dfbec6c8673e3\"><code>07d55c6</code></a> Merge branch 'master' into releases/v1</li>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/ef08c6885017f258a11d59e0da103ed39424aa6b\"><code>ef08c68</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/38\">#38</a> from gradle/dependabot/npm_and_yarn/hosted-git-info-2.8.9</li>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/2649583adda682ba90a9d6c6db85cfb6463e1527\"><code>2649583</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/37\">#37</a> from gradle/dependabot/npm_and_yarn/lodash-4.17.21</li>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/c0c53eb6bad87bf2667749a3b813763da33cdc9d\"><code>c0c53eb</code></a> Bump lodash from 4.17.20 to 4.17.21</li>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/d01b0237194650e470392a61b6609b89a27c6f1e\"><code>d01b023</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/39\">#39</a> from KengoTODA/retry</li>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/aeee4bda64c18947e20a005dc7629772beaae798\"><code>aeee4bd</code></a> fix: introduce retry to stabilize the workflow</li>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/3e5f126fb78a94ece809cfa73508082848fbd2ff\"><code>3e5f126</code></a> test: reproduce the problem by jest</li>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/d15ec7e0e518cc29b70cacb818124afed3bd9e13\"><code>d15ec7e</code></a> Bump hosted-git-info from 2.8.8 to 2.8.9</li>\n<li><a href=\"https://github.com/gradle/wrapper-validation-action/commit/12b3fff2c3f403a0378d0412d0d7dc82747886b6\"><code>12b3fff</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/gradle/wrapper-validation-action/issues/36\">#36</a> from gradle/dependabot/npm_and_yarn/y18n-4.0.1</li>\n<li>Additional commits viewable in <a href=\"https://github.com/gradle/wrapper-validation-action/compare/v1.0.3...v1.0.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=gradle/wrapper-validation-action&package-manager=github_actions&previous-version=1.0.3&new-version=1.0.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2310", "Bump shipkit-auto-version from 1.1.14 to 1.1.16", null, "dependabot[bot]", "05/31/21, 12:06:33 PM", "Bumps shipkit-auto-version from 1.1.14 to 1.1.16.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-auto-version&package-manager=gradle&previous-version=1.1.14&new-version=1.1.16)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2312", "Undo parent for MultipleParentsClassLoader", "Charles Munger", "charlesmunger", "06/03/21, 09:24:46 AM", "66998ea7f81c6adf49983cea081586e19760b7a0 inadvertently undid a change from 9bc9be6d0fb1809346dcd02b22ced477816e0fc1, which breaks behavior under some classloaders that special-case mockito classes. Use of an explicit parent with `MultipleParentsClassLoader` appears to be discouraged in the documentation also.\r\n\r\nFollowup for #2303\r", "NaN"], ["2313", "Bump versions.bytebuddy from 1.11.0 to 1.11.1", null, "dependabot[bot]", "06/02/21, 12:22:49 PM", "Bumps `versions.bytebuddy` from 1.11.0 to 1.11.1.\nUpdates `byte-buddy` from 1.11.0 to 1.11.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.11.1</h2>\n<ul>\n<li>Add JNA based <code>ClassInjector</code> for use if JNA is already available.</li>\n<li>Allow <code>HashCodeEqualsPlugin</code> to derive hash code from instrumented type rather then lowest type in hierarchy.</li>\n<li>Retain <em>this</em> variable name for index 0 when using advice with remapped locals.</li>\n<li>Rework <code>AnnotationDescription</code> for <code>TypePool</code> to mirror JVM behavior if annotation properties are changed inconsistently.</li>\n<li>Add several <code>StackManipulation</code>s for common operations.</li>\n<li>Remove unwanted dependency to <code>Instrumentation</code> API from <code>JavaModule</code> type.</li>\n<li>Rework use of reflection to use <code>JavaDispatcher</code> API which also allows for custom generation of proxies without use of reflection.</li>\n<li>Fully rework <code>JavaConstant</code> API to integrate with Java's <code>ConstantDesc</code> API and to allow for production of such descriptions.</li>\n<li>Fix different bugs to properly support representation sealed classes.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy's changelog</a>.</em></p>\n<blockquote>\n<h3>1. June 2021: version 1.11.1</h3>\n<ul>\n<li>Add JNA based <code>ClassInjector</code> for use if JNA is already available.</li>\n<li>Allow <code>HashCodeEqualsPlugin</code> to derive hash code from instrumented type rather then lowest type in hierarchy.</li>\n<li>Retain <em>this</em> variable name for index 0 when using advice with remapped locals.</li>\n<li>Rework <code>AnnotationDescription</code> for <code>TypePool</code> to mirror JVM behavior if annotation properties are changed inconsistently.</li>\n<li>Add several <code>StackManipulation</code>s for common operations.</li>\n<li>Remove unwanted dependency to <code>Instrumentation</code> API from <code>JavaModule</code> type.</li>\n<li>Rework use of reflection to use <code>JavaDispatcher</code> API which also allows for custom generation of proxies without use of reflection.</li>\n<li>Fully rework <code>JavaConstant</code> API to integrate with Java's <code>ConstantDesc</code> API and to allow for production of such descriptions.</li>\n<li>Fix different bugs to properly support representation sealed classes.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/5284857bb5d30b6c77588619c47c88713bd5828b\"><code>5284857</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.1</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/0a08c892bdc2b78128f9b3276e35d12bcda31f53\"><code>0a08c89</code></a> [release] Replicate provided dependencies.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/1b49b5a04b22c6704f8eebaa0866e79f23fcafc7\"><code>1b49b5a</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/00f3f2e4d492cdc42ba93d197e4e7bd972a1bc8f\"><code>00f3f2e</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.1</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/61286c694acb81b2fca0fefe36b3862696319f1c\"><code>61286c6</code></a> [release] Another release attempt.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/6a449182e8d2be90b642fce18331b494a2a49d19\"><code>6a44918</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/300718b9adb10c374f177f8505de88f7cbc7f133\"><code>300718b</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.1</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/e9ab8f31097352046a98b489a5040ebcc920c9ef\"><code>e9ab8f3</code></a> [release] Update coveralls Maven plugin.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/11d7d13c8d0311f7435cecdb824c1701b3e462a4\"><code>11d7d13</code></a> [release] Fix attempt with upgraded Javadoc plugin.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/fbac977358c9dd6d049ad9d216ee6e5dbfecf7b7\"><code>fbac977</code></a> [release] Fix attempt with upgraded Javadoc plugin.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.0...byte-buddy-1.11.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-agent` from 1.11.0 to 1.11.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-agent's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.11.1</h2>\n<ul>\n<li>Add JNA based <code>ClassInjector</code> for use if JNA is already available.</li>\n<li>Allow <code>HashCodeEqualsPlugin</code> to derive hash code from instrumented type rather then lowest type in hierarchy.</li>\n<li>Retain <em>this</em> variable name for index 0 when using advice with remapped locals.</li>\n<li>Rework <code>AnnotationDescription</code> for <code>TypePool</code> to mirror JVM behavior if annotation properties are changed inconsistently.</li>\n<li>Add several <code>StackManipulation</code>s for common operations.</li>\n<li>Remove unwanted dependency to <code>Instrumentation</code> API from <code>JavaModule</code> type.</li>\n<li>Rework use of reflection to use <code>JavaDispatcher</code> API which also allows for custom generation of proxies without use of reflection.</li>\n<li>Fully rework <code>JavaConstant</code> API to integrate with Java's <code>ConstantDesc</code> API and to allow for production of such descriptions.</li>\n<li>Fix different bugs to properly support representation sealed classes.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-agent's changelog</a>.</em></p>\n<blockquote>\n<h3>1. June 2021: version 1.11.1</h3>\n<ul>\n<li>Add JNA based <code>ClassInjector</code> for use if JNA is already available.</li>\n<li>Allow <code>HashCodeEqualsPlugin</code> to derive hash code from instrumented type rather then lowest type in hierarchy.</li>\n<li>Retain <em>this</em> variable name for index 0 when using advice with remapped locals.</li>\n<li>Rework <code>AnnotationDescription</code> for <code>TypePool</code> to mirror JVM behavior if annotation properties are changed inconsistently.</li>\n<li>Add several <code>StackManipulation</code>s for common operations.</li>\n<li>Remove unwanted dependency to <code>Instrumentation</code> API from <code>JavaModule</code> type.</li>\n<li>Rework use of reflection to use <code>JavaDispatcher</code> API which also allows for custom generation of proxies without use of reflection.</li>\n<li>Fully rework <code>JavaConstant</code> API to integrate with Java's <code>ConstantDesc</code> API and to allow for production of such descriptions.</li>\n<li>Fix different bugs to properly support representation sealed classes.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/5284857bb5d30b6c77588619c47c88713bd5828b\"><code>5284857</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.1</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/0a08c892bdc2b78128f9b3276e35d12bcda31f53\"><code>0a08c89</code></a> [release] Replicate provided dependencies.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/1b49b5a04b22c6704f8eebaa0866e79f23fcafc7\"><code>1b49b5a</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/00f3f2e4d492cdc42ba93d197e4e7bd972a1bc8f\"><code>00f3f2e</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.1</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/61286c694acb81b2fca0fefe36b3862696319f1c\"><code>61286c6</code></a> [release] Another release attempt.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/6a449182e8d2be90b642fce18331b494a2a49d19\"><code>6a44918</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/300718b9adb10c374f177f8505de88f7cbc7f133\"><code>300718b</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.1</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/e9ab8f31097352046a98b489a5040ebcc920c9ef\"><code>e9ab8f3</code></a> [release] Update coveralls Maven plugin.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/11d7d13c8d0311f7435cecdb824c1701b3e462a4\"><code>11d7d13</code></a> [release] Fix attempt with upgraded Javadoc plugin.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/fbac977358c9dd6d049ad9d216ee6e5dbfecf7b7\"><code>fbac977</code></a> [release] Fix attempt with upgraded Javadoc plugin.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.0...byte-buddy-1.11.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-android` from 1.11.0 to 1.11.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-android's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.11.1</h2>\n<ul>\n<li>Add JNA based <code>ClassInjector</code> for use if JNA is already available.</li>\n<li>Allow <code>HashCodeEqualsPlugin</code> to derive hash code from instrumented type rather then lowest type in hierarchy.</li>\n<li>Retain <em>this</em> variable name for index 0 when using advice with remapped locals.</li>\n<li>Rework <code>AnnotationDescription</code> for <code>TypePool</code> to mirror JVM behavior if annotation properties are changed inconsistently.</li>\n<li>Add several <code>StackManipulation</code>s for common operations.</li>\n<li>Remove unwanted dependency to <code>Instrumentation</code> API from <code>JavaModule</code> type.</li>\n<li>Rework use of reflection to use <code>JavaDispatcher</code> API which also allows for custom generation of proxies without use of reflection.</li>\n<li>Fully rework <code>JavaConstant</code> API to integrate with Java's <code>ConstantDesc</code> API and to allow for production of such descriptions.</li>\n<li>Fix different bugs to properly support representation sealed classes.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-android's changelog</a>.</em></p>\n<blockquote>\n<h3>1. June 2021: version 1.11.1</h3>\n<ul>\n<li>Add JNA based <code>ClassInjector</code> for use if JNA is already available.</li>\n<li>Allow <code>HashCodeEqualsPlugin</code> to derive hash code from instrumented type rather then lowest type in hierarchy.</li>\n<li>Retain <em>this</em> variable name for index 0 when using advice with remapped locals.</li>\n<li>Rework <code>AnnotationDescription</code> for <code>TypePool</code> to mirror JVM behavior if annotation properties are changed inconsistently.</li>\n<li>Add several <code>StackManipulation</code>s for common operations.</li>\n<li>Remove unwanted dependency to <code>Instrumentation</code> API from <code>JavaModule</code> type.</li>\n<li>Rework use of reflection to use <code>JavaDispatcher</code> API which also allows for custom generation of proxies without use of reflection.</li>\n<li>Fully rework <code>JavaConstant</code> API to integrate with Java's <code>ConstantDesc</code> API and to allow for production of such descriptions.</li>\n<li>Fix different bugs to properly support representation sealed classes.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/5284857bb5d30b6c77588619c47c88713bd5828b\"><code>5284857</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.1</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/0a08c892bdc2b78128f9b3276e35d12bcda31f53\"><code>0a08c89</code></a> [release] Replicate provided dependencies.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/1b49b5a04b22c6704f8eebaa0866e79f23fcafc7\"><code>1b49b5a</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/00f3f2e4d492cdc42ba93d197e4e7bd972a1bc8f\"><code>00f3f2e</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.1</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/61286c694acb81b2fca0fefe36b3862696319f1c\"><code>61286c6</code></a> [release] Another release attempt.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/6a449182e8d2be90b642fce18331b494a2a49d19\"><code>6a44918</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/300718b9adb10c374f177f8505de88f7cbc7f133\"><code>300718b</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.1</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/e9ab8f31097352046a98b489a5040ebcc920c9ef\"><code>e9ab8f3</code></a> [release] Update coveralls Maven plugin.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/11d7d13c8d0311f7435cecdb824c1701b3e462a4\"><code>11d7d13</code></a> [release] Fix attempt with upgraded Javadoc plugin.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/fbac977358c9dd6d049ad9d216ee6e5dbfecf7b7\"><code>fbac977</code></a> [release] Fix attempt with upgraded Javadoc plugin.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.0...byte-buddy-1.11.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2317", "Bump shipkit-auto-version from 1.1.16 to 1.1.17", null, "dependabot[bot]", "06/08/21, 07:38:23 PM", "Bumps shipkit-auto-version from 1.1.16 to 1.1.17.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.shipkit:shipkit-auto-version&package-manager=gradle&previous-version=1.1.16&new-version=1.1.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"], ["2318", "Check package-privacy of method params", "Charles Munger", "charlesmunger", "06/09/21, 11:15:18 AM", "This patch handles methods where an interface uses a package-private type as a param or return value - without it, the generated mock class will produce AbstractMethodError, since its methods do not actually override the methods of the interfaces.\r\n\r\nFollowup on #2303 ", "NaN"], ["2322", "Bump versions.bytebuddy from 1.11.1 to 1.11.2", null, "dependabot[bot]", "06/11/21, 07:03:50 AM", "Bumps `versions.bytebuddy` from 1.11.1 to 1.11.2.\nUpdates `byte-buddy` from 1.11.1 to 1.11.2\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.11.2</h2>\n<ul>\n<li>Fixes resolution of array types for Java descriptors of <code>JavaConstant</code>.</li>\n<li>Properly process Android's version string and avoid relying on the version string where possible.</li>\n<li>Allow for self-calls when creating a <code>MethodCall</code> and identifying a method via a matcher.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy's changelog</a>.</em></p>\n<blockquote>\n<h3>11. June 2021: version 1.11.2</h3>\n<ul>\n<li>Fixes resolution of array types for Java descriptors of <code>JavaConstant</code>.</li>\n<li>Properly process Android's version string and avoid relying on the version string where possible.</li>\n<li>Allow for self-calls when creating a <code>MethodCall</code> and identifying a method via a matcher.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/99174cd1d179734133abc31a7a28fcbfc456ea78\"><code>99174cd</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.2</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/11bc867451c7139045ba8777a7fa4b1b67fffed3\"><code>11bc867</code></a> [release] Release new version</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/4354da28029ed3a157cce57cb0b3826de9c3f91d\"><code>4354da2</code></a> Update internal Byte Buddy version.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f7d08078389a3dd61ea101ebaae872702e994faa\"><code>f7d0807</code></a> Fix Android support and make sure version resolution always uses a fallback. ...</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f9bd455298fb75ef078e39f1da2b7b3fd5ec785d\"><code>f9bd455</code></a> Resolve correct type value.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f3c33469b018634682fc926b679d328dc5c8e440\"><code>f3c3346</code></a> Adjust type name resolution to account for arrays.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/77fbfb937d376260ac5400028c2942ac9f0f390d\"><code>77fbfb9</code></a> Update release-notes.md</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/a0d5017e891e7d1ffe68a2c4805c3fc68d2c76db\"><code>a0d5017</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li>See full diff in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.1...byte-buddy-1.11.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-agent` from 1.11.1 to 1.11.2\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-agent's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.11.2</h2>\n<ul>\n<li>Fixes resolution of array types for Java descriptors of <code>JavaConstant</code>.</li>\n<li>Properly process Android's version string and avoid relying on the version string where possible.</li>\n<li>Allow for self-calls when creating a <code>MethodCall</code> and identifying a method via a matcher.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-agent's changelog</a>.</em></p>\n<blockquote>\n<h3>11. June 2021: version 1.11.2</h3>\n<ul>\n<li>Fixes resolution of array types for Java descriptors of <code>JavaConstant</code>.</li>\n<li>Properly process Android's version string and avoid relying on the version string where possible.</li>\n<li>Allow for self-calls when creating a <code>MethodCall</code> and identifying a method via a matcher.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/99174cd1d179734133abc31a7a28fcbfc456ea78\"><code>99174cd</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.2</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/11bc867451c7139045ba8777a7fa4b1b67fffed3\"><code>11bc867</code></a> [release] Release new version</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/4354da28029ed3a157cce57cb0b3826de9c3f91d\"><code>4354da2</code></a> Update internal Byte Buddy version.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f7d08078389a3dd61ea101ebaae872702e994faa\"><code>f7d0807</code></a> Fix Android support and make sure version resolution always uses a fallback. ...</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f9bd455298fb75ef078e39f1da2b7b3fd5ec785d\"><code>f9bd455</code></a> Resolve correct type value.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f3c33469b018634682fc926b679d328dc5c8e440\"><code>f3c3346</code></a> Adjust type name resolution to account for arrays.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/77fbfb937d376260ac5400028c2942ac9f0f390d\"><code>77fbfb9</code></a> Update release-notes.md</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/a0d5017e891e7d1ffe68a2c4805c3fc68d2c76db\"><code>a0d5017</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li>See full diff in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.1...byte-buddy-1.11.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `byte-buddy-android` from 1.11.1 to 1.11.2\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/releases\">byte-buddy-android's releases</a>.</em></p>\n<blockquote>\n<h2>Byte Buddy 1.11.2</h2>\n<ul>\n<li>Fixes resolution of array types for Java descriptors of <code>JavaConstant</code>.</li>\n<li>Properly process Android's version string and avoid relying on the version string where possible.</li>\n<li>Allow for self-calls when creating a <code>MethodCall</code> and identifying a method via a matcher.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/raphw/byte-buddy/blob/master/release-notes.md\">byte-buddy-android's changelog</a>.</em></p>\n<blockquote>\n<h3>11. June 2021: version 1.11.2</h3>\n<ul>\n<li>Fixes resolution of array types for Java descriptors of <code>JavaConstant</code>.</li>\n<li>Properly process Android's version string and avoid relying on the version string where possible.</li>\n<li>Allow for self-calls when creating a <code>MethodCall</code> and identifying a method via a matcher.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/99174cd1d179734133abc31a7a28fcbfc456ea78\"><code>99174cd</code></a> [maven-release-plugin] prepare release byte-buddy-1.11.2</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/11bc867451c7139045ba8777a7fa4b1b67fffed3\"><code>11bc867</code></a> [release] Release new version</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/4354da28029ed3a157cce57cb0b3826de9c3f91d\"><code>4354da2</code></a> Update internal Byte Buddy version.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f7d08078389a3dd61ea101ebaae872702e994faa\"><code>f7d0807</code></a> Fix Android support and make sure version resolution always uses a fallback. ...</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f9bd455298fb75ef078e39f1da2b7b3fd5ec785d\"><code>f9bd455</code></a> Resolve correct type value.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/f3c33469b018634682fc926b679d328dc5c8e440\"><code>f3c3346</code></a> Adjust type name resolution to account for arrays.</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/77fbfb937d376260ac5400028c2942ac9f0f390d\"><code>77fbfb9</code></a> Update release-notes.md</li>\n<li><a href=\"https://github.com/raphw/byte-buddy/commit/a0d5017e891e7d1ffe68a2c4805c3fc68d2c76db\"><code>a0d5017</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li>See full diff in <a href=\"https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.1...byte-buddy-1.11.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>", "NaN"]]